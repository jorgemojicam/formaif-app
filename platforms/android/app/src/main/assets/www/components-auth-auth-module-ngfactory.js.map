{"version":3,"sources":["./node_modules/@angular/material/checkbox/index.d.ts.MatCheckbox.html","./src/app/components/auth/auth-routing.module.ts","./src/app/components/auth/auth.component.html","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.module.ts","./src/app/services/auth.service.ts"],"names":[],"mappings":"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","file":"components-auth-auth-module-ngfactory.js","sourcesContent":["<label [attr.for]=\"inputId\" class=\"mat-checkbox-layout\" #label>\n  <div class=\"mat-checkbox-inner-container\"\n       [class.mat-checkbox-inner-container-no-side-margin]=\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\">\n    <input #input\n           class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\"\n           [id]=\"inputId\"\n           [required]=\"required\"\n           [checked]=\"checked\"\n           [attr.value]=\"value\"\n           [disabled]=\"disabled\"\n           [attr.name]=\"name\"\n           [tabIndex]=\"tabIndex\"\n           [attr.aria-label]=\"ariaLabel || null\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-checked]=\"_getAriaChecked()\"\n           (change)=\"_onInteractionEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n    <div matRipple class=\"mat-checkbox-ripple mat-focus-indicator\"\n         [matRippleTrigger]=\"label\"\n         [matRippleDisabled]=\"_isRippleDisabled()\"\n         [matRippleRadius]=\"20\"\n         [matRippleCentered]=\"true\"\n         [matRippleAnimation]=\"{enterDuration: 150}\">\n      <div class=\"mat-ripple-element mat-checkbox-persistent-ripple\"></div>\n    </div>\n    <div class=\"mat-checkbox-frame\"></div>\n    <div class=\"mat-checkbox-background\">\n      <svg version=\"1.1\"\n           focusable=\"false\"\n           class=\"mat-checkbox-checkmark\"\n           viewBox=\"0 0 24 24\"\n           xml:space=\"preserve\">\n        <path class=\"mat-checkbox-checkmark-path\"\n              fill=\"none\"\n              stroke=\"white\"\n              d=\"M4.1,12.7 9,17.6 20.3,6.3\"/>\n      </svg>\n      <!-- Element for rendering the indeterminate state checkbox. -->\n      <div class=\"mat-checkbox-mixedmark\"></div>\n    </div>\n  </div>\n  <span class=\"mat-checkbox-label\" #checkboxLabel (cdkObserveContent)=\"_onLabelTextChange()\">\n    <!-- Add an invisible span so JAWS can read the label -->\n    <span style=\"display:none\">&nbsp;</span>\n    <ng-content></ng-content>\n  </span>\n</label>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from './auth.component';\n\nconst routes: Routes = [{ path: '', component: AuthComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"content\" >\r\n    <mat-card fxFlex.xs=\"90%\" fxFlex=\"40%\">\r\n        <img mat-card-image src=\"assets/pictures/fdlmlog.png\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-content>\r\n            <ng-container *ngIf=\"!isLogged; else loading\">\r\n                <mat-card-title>Inicio Sesión</mat-card-title>\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin(loginForm.value)\">\r\n                    <p>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Usuario</mat-label>\r\n                            <input matInput placeholder=\"Ingrese usuario\" autocomplete=\"off\" formControlName=\"Username\">\r\n                            <mat-icon matSuffix>person</mat-icon>\r\n                        </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Contraseña</mat-label>\r\n                            <input [type]=\"hidenPass ? 'text' : 'password'\" autocomplete=\"off\" matInput placeholder=\"Ingrese contraseña\"\r\n                                formControlName=\"Passw\">\r\n                            <mat-icon matSuffix>lock</mat-icon>\r\n                            <mat-hint>\r\n                                <mat-checkbox (change)=\"showPass($event)\" [(checked)]=\"hidenPass\">Mostrar contraseña\r\n                                </mat-checkbox>\r\n                            </mat-hint>\r\n                        </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <button type=\"submit\" mat-raised-button [disabled]=\"!loginForm.valid\" color=\"primary\">Login</button>\r\n                    </p>\r\n                </form>\r\n            </ng-container>\r\n            <ng-template #loading>\r\n                <div class=\"container-spinner\">\r\n                    <mat-spinner></mat-spinner>\r\n                </div>\r\n            </ng-template>\r\n        </mat-card-content>\r\n        <small>{{currentApplicationVersion}}</small>\r\n    </mat-card>\r\n</div>\r\n","import { Component, OnInit, ɵConsole } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Asesor } from 'src/app/model/asesor';\r\nimport { User } from 'src/app/model/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { OficinaService } from 'src/app/services/oficina.service';\r\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  isLogged: Boolean = false\r\n  loginForm = new FormGroup({\r\n    Username: new FormControl('', [Validators.pattern('^[A-Za-z0-9-.-/]+$')]),\r\n    Passw: new FormControl('', Validators.required)\r\n  });\r\n  currentApplicationVersion = environment.appVersion;\r\n\r\n  hidenPass: boolean = false\r\n\r\n  constructor(\r\n    private authServ: AuthService,\r\n    private route: Router,\r\n    private tokenStorage: TokenStorageService,\r\n    private _snackBar: MatSnackBar,\r\n    private ofiServ: OficinaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  showPass(ev) {\r\n    this.hidenPass = ev.checked\r\n  }\r\n  onLogin(user: User) {\r\n    this.isLogged = true\r\n    let userdom = user.Username.split('/')\r\n    let dom = userdom[0];\r\n    let use = userdom[1];\r\n\r\n    if (dom.toLocaleLowerCase() == \"soporte\") {\r\n      user.Username = use\r\n      this.authServ.login(user).subscribe(\r\n        \r\n        (res) => {\r\n          \r\n          let perfil: Asesor = {\r\n            Nombre: use,\r\n            Iniciales: \"N/A\",\r\n            Grupo: \"SOPORTE\",\r\n            Clave: use,\r\n            Sucursales: {\r\n              Codigo: \"969\",\r\n              Direccion: \"\",\r\n              Nombre: \"SEDE ADMINISTRATIVA\",\r\n              Regionales: \"0\"\r\n            },\r\n            Director: {\r\n              Nombre: \"Transformacion Digital\",\r\n              Iniciales: \"TD\",\r\n              Clave: \"transformaciondigital\",\r\n              Sucursales: {\r\n                Codigo: \"969\",\r\n                Direccion: \"\",\r\n                Nombre: \"SEDE ADMINISTRATIVA\",\r\n                Regionales: \"0\"\r\n              },\r\n              Director: null,\r\n              Grupo: \"TRADIG\"\r\n            }\r\n          }\r\n          this.tokenStorage.saveToken(res);\r\n          this.tokenStorage.saveUser(perfil);\r\n          this.route.navigate(['home']);\r\n          this.isLogged = false\r\n        },\r\n        (err) => {\r\n         \r\n          let errMsg = \"\"\r\n          if (err.status == 401) {\r\n            errMsg = \"Usuario o contraseña incorrecta \"\r\n          } else if (err.status == 0) {\r\n            errMsg = \"¡Error al ingresar! verifique la conexión a intenet.\"\r\n          } else {\r\n            errMsg = \"Se presento error con la conexion con el servidor. \" + err.message\r\n          }\r\n          this._snackBar.open(errMsg, \"Ok!\", {\r\n            duration: 3000,\r\n          });\r\n          this.isLogged = false\r\n        }\r\n      )\r\n    } else {\r\n      this.authServ.login(user).subscribe(\r\n        res => {         \r\n          this.tokenStorage.saveToken(res);\r\n          //this.ofiServ.getOficina('MAIRA.LAJUD').subscribe(\r\n          this.ofiServ.getOficina(user.Username).subscribe(\r\n            (ofi) => {\r\n              if (ofi) {\r\n                this.tokenStorage.saveUser(ofi);\r\n                this.isLogged = false\r\n              }\r\n            },\r\n            (err) => {\r\n              this.isLogged = false\r\n              this._snackBar.open(\"No se encontro oficina asignada, comuniquese con el area de Riesgos [codigo \" + err.status + \"]\", \"Ok!\", {\r\n                duration: 10000,\r\n              });\r\n            }\r\n          )\r\n          this.route.navigate(['home']);\r\n          \r\n        },\r\n        err => {\r\n          let errMsg = \"\"\r\n          if (err.status == 401) {\r\n            errMsg = \"Usuario o contraseña incorrecta !\"\r\n          } else if (err.status == 0) {\r\n            errMsg = \"¡Error al ingresar! verifique la conexión a intenet.\"\r\n          } else {\r\n            errMsg = \"Se presento error en la conexion con el servidor. \" + err.message\r\n          }\r\n          this._snackBar.open(errMsg, \"Ok!\", {\r\n            duration: 3000,\r\n          });\r\n          this.isLogged = false\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n@NgModule({\n  declarations: [AuthComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    FlexLayoutModule\n  ]\n})\nexport class AuthModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  login(user: User): Observable<any> {\r\n    return this.http.post(environment.AUTH_API + 'login/authenticate', {\r\n      Username: user.Username,\r\n      Passw: user.Passw,\r\n      Rol: \"User\"\r\n    }, httpOptions);\r\n  }\r\n}\r\n\r\n"],"sourceRoot":"webpack:///"}