{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/admin/admin-routing.module.ts","webpack:///src/app/components/admin/admin.component.html","webpack:///src/app/components/admin/admin.component.ts","webpack:///src/app/components/admin/admin.module.ts","webpack:///src/app/components/admin/home/home.component.html","webpack:///src/app/components/admin/home/home.component.ts","webpack:///src/app/components/admin/idb-solicitud.service.ts","webpack:///src/app/components/admin/init/init.component.html","webpack:///src/app/components/admin/init/init.component.ts","webpack:///src/app/components/admin/notfound/notfound.component.html","webpack:///src/app/components/admin/notfound/notfound.component.ts","webpack:///src/app/components/admin/profile/profile.component.html","webpack:///src/app/components/admin/profile/profile.component.ts","webpack:///src/app/components/analisis/analisis.component.html","webpack:///src/app/components/analisis/analisis.component.ts","webpack:///src/app/components/analisisagro/analisisagro.component.html","webpack:///src/app/components/analisisagro/analisisagro.component.ts","webpack:///src/app/components/flujocaja/flujocaja.component.html","webpack:///src/app/components/flujocaja/flujocaja.component.ts","webpack:///src/app/components/propuesta/propuesta.component.html","webpack:///src/app/components/propuesta/propuesta.component.ts","webpack:///src/app/components/resultado/resultado.component.html","webpack:///src/app/components/resultado/resultado.component.ts","webpack:///src/app/components/ubicacion/ubicacion.component.html","webpack:///src/app/components/ubicacion/ubicacion.component.ts","webpack:///src/app/helpers/auth.guard.ts","webpack:///src/app/helpers/auth.interceptor.ts","webpack:///src/app/material.module.ts","webpack:///src/app/model/email.ts","webpack:///src/app/model/solicitud.ts","webpack:///src/app/model/ubicacion.ts","webpack:///src/app/services/analisis.service.ts","webpack:///src/app/services/carpetadigital.service.ts","webpack:///src/app/services/email.service.ts","webpack:///src/app/services/local-storage.service.ts","webpack:///src/app/services/oficina.service.ts","webpack:///src/app/services/token-storage.service.ts","webpack:///src/app/shared/modal/modal.component.html","webpack:///src/app/shared/modal/modal.component.ts","webpack:///src/app/utils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","m","routes","path","component","children","canActivate","loadChildren","redirectTo","AppRoutingModule","AppComponent","title","AppModule","AdminRoutingModule","AdminComponent","router","activateRoute","tokenStorage","srvSol","srvTokn","perfil","getUser","queryParamMap","subscribe","params","ced","get","getSol","datasol","tipo","asesor","titulo","navigate","signOut","sidenav","opened","close","open","AdminModule","HomeComponent","dialog","route","ofiServ","analisisServ","emailServ","carpetaServ","_bottomSheet","srvCarpeta","displayedColumns","procesando","sol","dataSource","paginator","sort","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","msg","openDialog","menssage","datos","config","data","mensaje","content","dialogRef","afterClosed","result","element","queryParams","cedula","fire","icon","html","showDenyButton","confirmButtonText","denyButtonText","isConfirmed","deleteSol","res","console","log","newSol","a","save","onLoad","solicitud","onEdit","navigator","onLine","numeroCedula","toString","getSolicitud","faltante","validateSol","getDirector","aseso","Nombre","Clave","toLocaleLowerCase","Sucursales","showCancelButton","cancelButtonText","reverseButtons","allowOutsideClick","didOpen","showLoading","getContent","b","querySelector","pdfBase64","pdfBase64Agro","contentagro","analisisAgro","reporte","nativeElement","contentflujo","flujo","textContent","createpdf","contentana","analisis","email","send","insert","getCarpetaDigital","existeSolicitud","dismiss","DismissReason","cancel","text","reject","err","namefile","numeroSolicitud","orintation","op","filename","image","type","html2canvas","margin","jsPDF","format","orientation","from","set","outputPdf","pdf","btoa","nombreDir","emailDir","To","Subject","Body","Base64Pdf","Base64PdfAgro","Send","su","er","reason","pfd","asesores","suc","Codigo","Director","getAsesores","ase","diretores","forEach","Grupo","error","row","faltantes","Balance","inventarioTotal","actnegTotal","actfamTotal","Gastos","totalF","Cruces","length","CrucesAgro","act","num","cruces","nombre","Propuesta","formatNumber","montorecomendado","plazo","tipocuota","IdbSolicitudService","storage","name","delete","user","InitComponent","_snackBar","initForm","min","max","required","newSolicitud","solis","valid","Object","assign","hoy","Date","fechacreacion","usuario","oficina","duration","sols","push","saveSol","closeAll","numSolicitud","allsol","aSolicitudOld","aSolicitud","find","NotfoundComponent","ProfileComponent","_bottomSheetRef","currentApplicationVersion","appVersion","preventDefault","AnalisisComponent","activeRoute","datasolicitud","mes","getMonth","fechahoy","getDate","getFullYear","datossol","tipoAsesor","lista","Mes","Meses","i","dias","periodo","nombres","aNombre","DiasSemana","Semanas","Quince","d","OtrosIngresosFamiliar","AnalisisagroComponent","sanitizer","base","bypassSecurityTrustResourceUrl","texto","inventario","TipoInventarioAgro","TipoActividadRural","PeriodoEdad","uni","Unidades","priodo","deta","DetalleAgricola","descripcion","DetallePecuario","perdidaPepeo","perdidaTra","perdidaCos","totalegreso","lotesAgro","loteA","egresosAdecuacion","eg","total","egresosCocecha","egresosMante","egresosSiembra","toLocaleString","lotesPecuario","loteP","egresos","totalingreso","LoteA","totalIngreso","lotP","ingresomes","mesTexto","changeMonth","FlujocajaComponent","actividadPrincipal","dataFlujo","dataFlujoAcumulado","dataFlujoAcumulado1","dataFlujoAcumulado2","cantidadActividades","cantidadTotalAct","meses","obtenerSol","afterInit","meshoy","cr","datosCruces","mesingreso","slice","splice","planinversion","valorcapital","cantidadValores","shift","columnas","concat","columnasAcomu","cruce","totalingresos","totalegresos","columnIngreso","columnaTotalIngresos","columnEgresos","columnaTotalEgreos","flujocaja","lote","lotesP","egreso","me","egresospas","totalMesegresos","totalEgAcumu","tipoproducto","totalCosecha","totalTraviesa","totalPepeo","index","totalCos","totalTra","cantMesCos","mesCos","cantMesTra","mesTra","cantMesPepeo","mesPepeo","valorMesCos","valorMesTra","valorMesPepeo","mesC","totalmes","totalMesingresos","totalIngAcumu","lotesA","mesprod","mesnoprod","flag","proxcosecha","proxcocecha","cantcosecha","cantmesescocecha","cantmesesnoproduccion","sumatoriaTotalmes","flagp","produccion","noproduccion","primerano","totalRec","totalRemuneracion","efectivo","totalGastosN","totalGastosF","totalObligaciones","totalObligacionesF","totalOtrosIngresos","totalN","totalOtros","recuperacion","tcuotan","tcuotaf","totalIngresos","cru","ingresoLiquido","p","pasivosRows","pas","clase","periodoint","periodocap","cantida","cuota","primermesint","primermescap","pago","f","addmonth","fechahyo","fechacrece","setMonth","mesFlujo","anoFlujo","mesint","fechaproxint","calculoint","totalint","totalcap","mescap","fechaproxcap","calculocap","totalacomula","ir","cuotasRow","item","fecha","ano","primermes","primermes1","primermes2","valor","totalEstacionalN","g","estacionalesN","estacional","totalEstacionalF","estacionalesF","costos","imprevistos","valorObligaciones","ingreso","costo","remuneracion","gastosneg","imprevistosag","obligaciones","gastosfam","flujoantes","flujoantesacumu","flujoantesantes","valorcouta","formapgo","irregular","fechacuota","valorcuota","cuotacredito","flujodescontando","flujodescAnterior","flujofinan","flujofinanantes","relacionculiq","toFixed","Flujo","map","val","consol","PropuestaComponent","fb","Periodo","pe","minDate","propuestaForm","group","destino","detalle","detallecapital","numerocuotas","array","tipoSol","dataSolicitud","loadPropuesta","valueChanges","form","montorecomentado","totalmonto","controls","arrDate","x","fulldate","indexOf","patchValue","isFinite","emitEvent","dataPropuesta","numcuotas","maxcuotas","cuotas","clear","itemsCuotas","propuestas","loadCuotas","ResultadoComponent","totalcuentascobrar","otraspasivoscor","otraspasivosNocor","salarios","totalinventarios","totalactivosneg","totalactivosfam","totalgastosfam","totalotrosingresosfam","obligacionesfin","gastosgenerales","creditosproveedores","totalingreosflujo","totalrecuperacioncartera","costodeventaA","salariosA","gastosGeneralesA","obligacionesA","otrosIngresosA","gastosFamiliaresA","Costodeventa","VentasContado","tiposol","totalrecuperacion","otrosingresos","cobrarTotal","totalCreditos","recuperacionCobrar","proveedoresTotal","tcorrienten","tnocorrienten","totalpasivosfam","tnocorrientef","tcorrientef","cantidadre","totalre","totalRecuperacion","costoscruce","j","totalCruce1","totalCruce2","totalCruce3","mincruces","Math","apply","costototal","c","crucemin","parseInt","participacion","porcentaje","ventastotales","formapago","period","totalgastos","totalobligaciones","totalgastosyobfam","ingresosagro","egresosagro","gastosyobfam","UbicacionComponent","myfilename2","myfilename1","dataUbicacion","ubicacionForm","tiempohora","tiempomin","tiemposeg","puntopartida","descripcionppartida","fotoppartida","puntollegada","descripcionpllegada","fotopllegada","Ubicacion","loadUbicacion","hora","minuto","segundo","ubicaciones","fileInput","files","Array","file","reader","FileReader","onload","Image","src","rs","imgBase64Path","readAsDataURL","uploadFileInput1","uploadFileInput","replace","AuthGuard","tknServ","next","state","TOKEN_HEADER_KEY","AuthInterceptor","token","carpetaSrv","request","getToken","clone","url","headers","handle","pipe","status","authInterceptorProviders","provide","useClass","multi","myCompm","MaterialModule","Email","Solicitud","httpOptions","AnalisisService","http","post","AUTH_API","Identificacion","Oficina","Fecha_Inicio","Fecha_Fin","Usuario","CarpetadigitalService","NumSolicitud","fileBase64","NumDocCli","lstMetadata","lstSoporte","TipoDocumento","NombreArchivo","UrlArchivo","FileBase64","EmailService","LocalStorageService","key","localStorage","setItem","getItem","removeItem","OficinaService","clave","sucursal","TOKEN_KEY","USER_KEY","TokenStorageService","srvLocalS","jwtToken","decodedToken","removeall","remove","JSON","stringify","parse","ModalComponent","Utils","numMonth","month","environment","production","version","catch"],"mappings":"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;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAKS;;AAAA;;AACb;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOpB;;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A;AA7GzF;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAWgB;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACA;;AAAA;;AAAA;;AAIJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAKJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AA2CJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAKJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAC0C,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtFlE;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaQ,kB;;;AAuBX,kCACU/F,EADV,EAESvb,MAFT,EAGUyN,WAHV,EAIUhC,SAJV,EAKUuD,SALV,EAKiC;AAAA;;AAJvB,aAAAuM,EAAA,GAAAA,EAAA;AACD,aAAAvb,MAAA,GAAAA,MAAA;AACC,aAAAyN,WAAA,GAAAA,WAAA;AACA,aAAAhC,SAAA,GAAAA,SAAA;AACA,aAAAuD,SAAA,GAAAA,SAAA;AAxBV,aAAAuS,WAAA,GAAc,mBAAd;AACA,aAAAC,WAAA,GAAc,mBAAd;AAGA,aAAArF,aAAA,GAA2B,IAAI,iEAAJ,EAA3B;AACA,aAAAsF,aAAA,GAA2B,IAAI,iEAAJ,EAA3B;AAEA,aAAAC,aAAA,GAA2B,KAAKnG,EAAL,CAAQK,KAAR,CAAc;AACvC+F,oBAAU,EAAE,CAAC,EAAD,CAD2B;AAEvCC,mBAAS,EAAE,CAAC,EAAD,CAF4B;AAGvCC,mBAAS,EAAE,CAAC,EAAD,CAH4B;AAIvCC,sBAAY,EAAE,CAAC,EAAD,CAJyB;AAKvCC,6BAAmB,EAAE,CAAC,EAAD,CALkB;AAMvCC,sBAAY,EAAE,EANyB;AAOvCC,sBAAY,EAAE,EAPyB;AAQvCC,6BAAmB,EAAE,EARkB;AASvCC,sBAAY,EAAE;AATyB,SAAd,CAA3B;AAkBK;;;;mCAEG;AAAA;;AAEN,eAAK1U,WAAL,CAAiBrN,aAAjB,CAA+BC,SAA/B,CAAyC,UAACC,MAAD,EAAY;AACnD,mBAAI,CAACC,GAAL,GAAWD,MAAM,CAACE,GAAP,CAAW,QAAX,CAAX;AACD,WAFD;AAIA,eAAKR,MAAL,CAAYS,MAAZ,CAAmB,KAAKF,GAAxB,EAA6BF,SAA7B,CAAuC,UAACK,OAAD,EAAa;AAClD,gBAAI,OAAI,CAACH,GAAT,EAAc;AAEZ,qBAAI,CAAC4b,aAAL,GAAqBzb,OAArB;;AACA,kBAAI,OAAI,CAACyb,aAAL,CAAmBiG,SAAvB,EAAkC;AAChC,uBAAI,CAACC,aAAL,CAAmB,OAAI,CAAClG,aAAL,CAAmBiG,SAAtC;AACD;AACF;;AAED,mBAAI,CAACV,aAAL,CAAmBrF,YAAnB,CAAgChc,SAAhC,CAA0C,UAAAic,IAAI,EAAI;AAEhD,kBAAIgG,IAAI,GAAG,OAAI,CAACvX,YAAL,CAAkB,OAAI,CAAC2W,aAAL,CAAmBjF,QAAnB,CAA4BkF,UAA5B,CAAuCpf,KAAzD,CAAX;;AACA,kBAAIggB,MAAM,GAAG,OAAI,CAACxX,YAAL,CAAkB,OAAI,CAAC2W,aAAL,CAAmBjF,QAAnB,CAA4BmF,SAA5B,CAAsCrf,KAAxD,CAAb;;AACA,kBAAIigB,OAAO,GAAG,OAAI,CAACzX,YAAL,CAAkB,OAAI,CAAC2W,aAAL,CAAmBjF,QAAnB,CAA4BoF,SAA5B,CAAsCtf,KAAxD,CAAd;;AAEA,kBAAI+f,IAAI,IAAI,EAAZ,EAAgB;AACdA,oBAAI,GAAG,CAAP;;AACA,uBAAI,CAAC7W,SAAL,CAAetK,IAAf,CAAoB,2BAApB,EAAiD,KAAjD,EAAwD;AACtDqL,0BAAQ,EAAE;AAD4C,iBAAxD;AAGD;;AACD,kBAAI+V,MAAM,IAAI,EAAd,EAAkB;AAChBA,sBAAM,GAAG,CAAT;;AACA,uBAAI,CAAC9W,SAAL,CAAetK,IAAf,CAAoB,6BAApB,EAAmD,KAAnD,EAA0D;AACxDqL,0BAAQ,EAAE;AAD8C,iBAA1D;AAGD;;AACD,kBAAIgW,OAAO,IAAI,EAAf,EAAmB;AACjBA,uBAAO,GAAG,CAAV;;AACA,uBAAI,CAAC/W,SAAL,CAAetK,IAAf,CAAoB,8BAApB,EAAoD,KAApD,EAA2D;AACzDqL,0BAAQ,EAAE;AAD+C,iBAA3D;AAGD;;AAED,qBAAI,CAACkV,aAAL,CAAmB5E,UAAnB,CAA8B;AAC5B6E,0BAAU,EAAEW,IADgB;AAE5BV,yBAAS,EAAEW,MAFiB;AAG5BV,yBAAS,EAAEW;AAHiB,eAA9B,EAIG;AAAExF,yBAAS,EAAE;AAAb,eAJH;;AAMA,qBAAI,CAACyE,aAAL,GAAqB,OAAI,CAACC,aAAL,CAAmBnf,KAAxC;AACA,qBAAI,CAAC4Z,aAAL,CAAmBiG,SAAnB,GAA+B,OAAI,CAACX,aAApC;;AACA,qBAAI,CAACzhB,MAAL,CAAY2M,OAAZ,CAAoB,OAAI,CAACpM,GAAzB,EAA8B,OAAI,CAAC4b,aAAnC;AAED,aAnCD;AAoCD,WA7CD;AA8CD;;;sCAEasG,W,EAAwB;AAEpC,iBAAO,KAAKf,aAAL,GAAqB,KAAKnG,EAAL,CAAQK,KAAR,CAAc;AACxC+F,sBAAU,EAAEc,WAAW,CAACd,UADgB;AAExCC,qBAAS,EAAEa,WAAW,CAACb,SAFiB;AAGxCC,qBAAS,EAAEY,WAAW,CAACZ,SAHiB;AAIxCC,wBAAY,EAAEW,WAAW,CAACX,YAJc;AAKxCC,+BAAmB,EAAEU,WAAW,CAACV,mBALO;AAMxCC,wBAAY,EAAES,WAAW,CAACT,YANc;AAOxCC,wBAAY,EAAEQ,WAAW,CAACR,YAPc;AAQxCC,+BAAmB,EAAEO,WAAW,CAACP,mBARO;AASxCC,wBAAY,EAAEM,WAAW,CAACN;AATc,WAAd,CAA5B;AAYD;;;kCAESlT,I,EAAM;AACd,iBAAO,KAAKD,SAAL,CAAeE,8BAAf,CAA8CD,IAA9C,CAAP;AACD;;;yCAEgByT,S,EAAgB;AAAA;;AAE/B,eAAKjB,aAAL,GAAqB,KAAKC,aAAL,CAAmBnf,KAAxC;AACA,eAAK4Z,aAAL,CAAmBiG,SAAnB,GAA+B,KAAKX,aAApC;;AAEA,cAAIiB,SAAS,CAACpgB,MAAV,CAAiBqgB,KAAjB,IAA0BD,SAAS,CAACpgB,MAAV,CAAiBqgB,KAAjB,CAAuB,CAAvB,CAA9B,EAAyD;AACvD,iBAAKnB,WAAL,GAAmB,EAAnB;AACAoB,iBAAK,CAACxa,IAAN,CAAWsa,SAAS,CAACpgB,MAAV,CAAiBqgB,KAA5B,EAAmC/Y,OAAnC,CAA2C,UAACiZ,IAAD,EAAgB;AACzD,qBAAI,CAACrB,WAAL,IAAoBqB,IAAI,CAACxX,IAAzB;AACD,aAFD;AAGA,gBAAMyX,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,kBAAM,CAACE,MAAP,GAAgB,UAACxkB,CAAD,EAAY;AAC1B,kBAAMqJ,KAAK,GAAG,IAAIob,KAAJ,EAAd;AACApb,mBAAK,CAACqb,GAAN,GAAY1kB,CAAC,CAAC8D,MAAF,CAASgB,MAArB;;AACAuE,mBAAK,CAACmb,MAAN,GAAe,UAAAG,EAAE,EAAI;AACnB,oBAAMC,aAAa,GAAG5kB,CAAC,CAAC8D,MAAF,CAASgB,MAA/B;;AACA,uBAAI,CAACoe,aAAL,CAAmB5E,UAAnB,CAA8B;AAC5BkF,8BAAY,EAAEoB;AADc,iBAA9B,EAEG;AAAEpG,2BAAS,EAAE;AAAb,iBAFH;;AAIA,uBAAI,CAACyE,aAAL,CAAmBO,YAAnB,GAAkCoB,aAAlC;AACA,uBAAI,CAACjH,aAAL,CAAmBiG,SAAnB,CAA6BJ,YAA7B,GAA4C,OAAI,CAACP,aAAL,CAAmBO,YAA/D;;AACA,uBAAI,CAAChiB,MAAL,CAAY2M,OAAZ,CAAoB,OAAI,CAACpM,GAAzB,EAA8B,OAAI,CAAC4b,aAAnC;AACD,eATD;AAUD,aAbD;;AAcA2G,kBAAM,CAACO,aAAP,CAAqBX,SAAS,CAACpgB,MAAV,CAAiBqgB,KAAjB,CAAuB,CAAvB,CAArB;AACA,iBAAKW,gBAAL,CAAsBhd,aAAtB,CAAoC/D,KAApC,GAA4C,EAA5C;AACD,WAtBD,MAsBO;AACL,iBAAKif,WAAL,GAAmB,mBAAnB;AACD;AACF;;;yCAEgBkB,S,EAAgB;AAAA;;AAC/B,eAAKjB,aAAL,GAAqB,KAAKC,aAAL,CAAmBnf,KAAxC;AACA,eAAK4Z,aAAL,CAAmBiG,SAAnB,GAA+B,KAAKX,aAApC;;AAEA,cAAIiB,SAAS,CAACpgB,MAAV,CAAiBqgB,KAAjB,IAA0BD,SAAS,CAACpgB,MAAV,CAAiBqgB,KAAjB,CAAuB,CAAvB,CAA9B,EAAyD;AACvD,iBAAKpB,WAAL,GAAmB,EAAnB;AACAqB,iBAAK,CAACxa,IAAN,CAAWsa,SAAS,CAACpgB,MAAV,CAAiBqgB,KAA5B,EAAmC/Y,OAAnC,CAA2C,UAACiZ,IAAD,EAAgB;AACzD,qBAAI,CAACtB,WAAL,IAAoBsB,IAAI,CAACxX,IAAzB;AACD,aAFD;AAGA,gBAAMyX,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,kBAAM,CAACE,MAAP,GAAgB,UAACxkB,CAAD,EAAY;AAC1B,kBAAMqJ,KAAK,GAAG,IAAIob,KAAJ,EAAd;AACApb,mBAAK,CAACqb,GAAN,GAAY1kB,CAAC,CAAC8D,MAAF,CAASgB,MAArB;;AACAuE,mBAAK,CAACmb,MAAN,GAAe,UAAAG,EAAE,EAAI;AACnB,oBAAMC,aAAa,GAAG5kB,CAAC,CAAC8D,MAAF,CAASgB,MAA/B;;AACA,uBAAI,CAACoe,aAAL,CAAmB5E,UAAnB,CAA8B;AAC5BqF,8BAAY,EAAEiB;AADc,iBAA9B,EAEG;AAAEpG,2BAAS,EAAE;AAAb,iBAFH;;AAIA,uBAAI,CAACyE,aAAL,CAAmBU,YAAnB,GAAkCiB,aAAlC;AACA,uBAAI,CAACjH,aAAL,CAAmBiG,SAAnB,CAA6BD,YAA7B,GAA4C,OAAI,CAACV,aAAL,CAAmBU,YAA/D;;AACA,uBAAI,CAACniB,MAAL,CAAY2M,OAAZ,CAAoB,OAAI,CAACpM,GAAzB,EAA8B,OAAI,CAAC4b,aAAnC;AACD,eATD;AAUD,aAbD;;AAcA2G,kBAAM,CAACO,aAAP,CAAqBX,SAAS,CAACpgB,MAAV,CAAiBqgB,KAAjB,CAAuB,CAAvB,CAArB;AACA,iBAAKY,eAAL,CAAqBjd,aAArB,CAAmC/D,KAAnC,GAA2C,EAA3C;AACD,WAtBD,MAsBO;AACL,iBAAKgf,WAAL,GAAmB,mBAAnB;AACD;AACF;;;kCAES;AACR,eAAKC,WAAL,GAAmB,mBAAnB;AACA,eAAKE,aAAL,CAAmB5E,UAAnB,CAA8B;AAC5BkF,wBAAY,EAAE;AADc,WAA9B,EAEG;AAAEhF,qBAAS,EAAE;AAAb,WAFH;AAGA,eAAKyE,aAAL,CAAmBO,YAAnB,GAAkC,EAAlC;AACA,eAAK7F,aAAL,CAAmBiG,SAAnB,CAA6BJ,YAA7B,GAA4C,KAAKP,aAAL,CAAmBO,YAA/D;AACA,eAAKhiB,MAAL,CAAY2M,OAAZ,CAAoB,KAAKpM,GAAzB,EAA8B,KAAK4b,aAAnC;AACD;;;kCACS;AACR,eAAKoF,WAAL,GAAmB,mBAAnB;AACA,eAAKG,aAAL,CAAmB5E,UAAnB,CAA8B;AAC5BqF,wBAAY,EAAE;AADc,WAA9B,EAEG;AAAEnF,qBAAS,EAAE;AAAb,WAFH;AAGA,eAAKyE,aAAL,CAAmBU,YAAnB,GAAkC,EAAlC;AACA,eAAKhG,aAAL,CAAmBiG,SAAnB,CAA6BD,YAA7B,GAA4C,KAAKV,aAAL,CAAmBU,YAA/D;AACA,eAAKniB,MAAL,CAAY2M,OAAZ,CAAoB,KAAKpM,GAAzB,EAA8B,KAAK4b,aAAnC;AACD;;;qCAEYxR,G,EAAK;AAChB,cAAI,OAAQA,GAAR,IAAgB,QAApB,EAA8B;AAC5B,mBAAOA,GAAP;AACD,WAFD,MAEO;AACL,mBAAO+V,QAAQ,CAAC/V,GAAG,IAAI,GAAP,IAAcA,GAAG,IAAI,EAArB,IAA2BA,GAAG,IAAI,IAAlC,GAAyC,GAAzC,GAA+CA,GAAG,CAAC6Y,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAAuBA,OAAvB,CAA+B,KAA/B,EAAsC,EAAtC,CAAhD,CAAf;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCzMUC,S;;;AAEX,yBACUC,OADV,EAEU7jB,MAFV,EAEwB;AAAA;;AADd,aAAA6jB,OAAA,GAAAA,OAAA;AACA,aAAA7jB,MAAA,GAAAA,MAAA;AACL;;;;oCAEO8jB,I,EAA8BC,K,EAA4B;AACpE,cAAI,KAAKF,OAAL,CAAavjB,OAAb,EAAJ,EAA4B;AAC1B,mBAAO,IAAP;AACD;;AACD,eAAKN,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBA,QAAM+iB,gBAAgB,GAAG,eAAzB;;QAGaC,e;;;AAEX,+BACUC,KADV,EAEUC,UAFV,EAGUziB,KAHV,EAISD,MAJT,EAKUmK,SALV,EAKgC;AAAA;;AAJtB,aAAAsY,KAAA,GAAAA,KAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAziB,KAAA,GAAAA,KAAA;AACD,aAAAD,MAAA,GAAAA,MAAA;AACC,aAAAmK,SAAA,GAAAA,SAAA;AACL;;;;kCACKwY,O,EAA+BN,I,EAAiB;AAAA;;AACxD,cAAMI,KAAK,GAAG,KAAKA,KAAL,CAAWG,QAAX,EAAd;;AACA,cAAIH,KAAK,IAAI,IAAb,EAAmB;AACjBE,mBAAO,GAAGA,OAAO,CAACE,KAAR,CAAc;AACtBC,iBAAG,EAAEH,OAAO,CAACG,GAAR,CAAYZ,OAAZ,CAAoB,SAApB,EAA+B,UAA/B,CADiB;AAEtBa,qBAAO,EAAEJ,OAAO,CAACI,OAAR,CAAgBhc,GAAhB,CAAoBwb,gBAApB,EAAsC,YAAYE,KAAlD;AAFa,aAAd,CAAV;AAID;;AAGD,iBAAOJ,IAAI,CAACW,MAAL,CAAYL,OAAZ,EAAqBM,IAArB,CACL,2DAAI,UAACniB,KAAD,EAA2B;AAC7B,gBAAIA,KAAK,YAAY,iEAArB,EAAmC;AACjC+B,qBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BhC,KAA3B;AACD;;AACD,mBAAOA,KAAP;AACD,WALD,CADK,EAOL,kEAAW,UAAC0H,KAAD,EAA8B;AACvC,gBAAI7G,IAAI,GAAG,EAAX;AACAA,gBAAI,GAAG;AACLkG,oBAAM,EAAEW,KAAK,IAAIA,KAAK,CAACA,KAAf,IAAwBA,KAAK,CAACA,KAAN,CAAYX,MAApC,GAA6CW,KAAK,CAACA,KAAN,CAAYX,MAAzD,GAAkE,EADrE;AAELqb,oBAAM,EAAE1a,KAAK,CAAC0a;AAFT,aAAP;;AAIA,gBAAI1a,KAAK,CAAC0a,MAAN,IAAgB,GAApB,EAAyB;AACvB,qBAAI,CAACT,KAAL,CAAWhjB,OAAX;;AACA,qBAAI,CAACQ,KAAL,CAAWT,QAAX,CAAoB,CAAC,MAAD,CAApB;;AACA,qBAAI,CAAC2K,SAAL,CAAetK,IAAf,CAAoB,2DAApB,EAAiF,KAAjF,EAAwF;AACtFqL,wBAAQ,EAAE;AAD4E,eAAxF;AAGD;;AACD,mBAAO,wDAAWvJ,IAAX,CAAP;AACD,WAdD,CAPK,CAAP;AAsBD;;;;;;AAGI,QAAMwhB,wBAAwB,GAAG,CACtC;AAAEC,aAAO,EAAE,sEAAX;AAA8BC,cAAQ,EAAEb,eAAxC;AAAyDc,WAAK,EAAE;AAAhE,KADsC,CAAjC;;;;;;;;;;;;;;;;AChd,oEADc,EAEd,0EAFc,EAGd,oEAHc,EAId,+EAJc,EAKd,sEALc,EAMd,wEANc,EAOd,0EAPc,EAQd,0EARc,EASd,0EATc,EAUd,oEAVc,EAWd,uEAXc,EAYd,yEAZc,EAad,oFAbc,EAcd,8EAdc,EAed,uEAfc,EAgBd,iFAhBc,EAiBd,2EAjBc,EAkBd,qEAlBc,EAmBd,+EAnBc,EAoBd,uEApBc,EAqBd,+EArBc,EAsBd,yEAtBc,EAuBd,sFAvBc,EAwBd,6EAxBc,EAyBd,4FAzBc,EA0Bd,2EA1Bc,EA2Bd,qFA3Bc,EA4Bd,yEA5Bc,EA6Bd,oFA7Bc,CAAhB;;QAqCaC,c;;;;;;;;;;;;;;;;;;;ACtEb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,K;;;;;;;;;;;;;;;;;;;ACOb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,S;;;;;;;;;;;;;;;;;;;ACPb;AAAA;;;AAAA;AAAA;AAAA;;QAAa5C,S;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAM6C,WAAW,GAAG;AAClBZ,aAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,wBAAgB;AADO,OAAhB;AADS,KAApB;;QASaa,e;;;AAEX,+BACUC,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AACL;;;;+BAEE1gB,S,EAAqB;AAC1B,iBAAO,KAAK0gB,IAAL,CAAUC,IAAV,CAAe,yEAAYC,QAAZ,GAAuB,UAAtC,EAAkD;AACvDL,qBAAS,EAAEvgB,SAAS,CAACA,SADkC;AAEvD6gB,0BAAc,EAAE7gB,SAAS,CAAChB,MAF6B;AAGvD8hB,mBAAO,EAAE9gB,SAAS,CAAC8H,OAHoC;AAIvDiZ,wBAAY,EAAE/gB,SAAS,CAAC4H,aAJ+B;AAKvDoZ,qBAAS,EAAE,IAAIrZ,IAAJ,EAL4C;AAMvDsZ,mBAAO,EAAEjhB,SAAS,CAAC6H;AANoC,WAAlD,EAOJ2Y,WAPI,CAAP;AAQD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,WAAW,GAAG;AAClBZ,aAAO,EAAE,IAAI,gEAAJ,CAAgB;AACvB,wBAAgB;AADO,OAAhB;AADS,KAApB;;QAUasB,qB;;;AAGX,qCACUR,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AACL;;;;4BAGDnjB,G,EAAK;AACP,iBAAO,KAAKmjB,IAAL,CAAUC,IAAV,CAAe,yEAAYC,QAAZ,GAAuB,mBAAtC,EAA2D;AAChEO,wBAAY,EAAE5jB;AADkD,WAA3D,EAEJijB,WAFI,CAAP;AAGD;;;+BAEMxgB,S,EAAoBohB,U,EAAmB;AAE5C,iBAAO,KAAKV,IAAL,CAAUC,IAAV,CAAe,yEAAYC,QAAZ,GAAuB,uBAAtC,EAA+D;AACpES,qBAAS,EAAErhB,SAAS,CAAChB,MAD+C;AAEpEmiB,wBAAY,EAAEnhB,SAAS,CAACA,SAF4C;AAGpEihB,mBAAO,EAAE,iCAH2D;AAIpEK,uBAAW,EAAE,EAJuD;AAKpEC,sBAAU,EAAE,CACV;AACEC,2BAAa,EAAE,2DADjB;AAEEC,2BAAa,EAAE,yBAFjB;AAGEC,wBAAU,EAAE,EAHd;AAIEC,wBAAU,EAAEP;AAJd,aADU;AALwD,WAA/D,EAaJZ,WAbI,CAAP;AAeD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoB,Y;;;AAEX,4BACUlB,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AACL;;;;6BAEAte,K,EAAY;AACb,iBAAO,KAAKse,IAAL,CAAUC,IAAV,CAAe,yEAAYC,QAAZ,GAAuB,aAAtC,EAAqD;AACxD1c,cAAE,EAAE9B,KAAK,CAAC8B,EAD8C;AAExDG,qBAAS,EAAEjC,KAAK,CAACiC,SAFuC;AAGxDC,yBAAa,EAAElC,KAAK,CAACkC,aAHmC;AAIxDH,mBAAO,EAAE/B,KAAK,CAAC+B,OAJyC;AAKxDC,gBAAI,EAAEhC,KAAK,CAACgC;AAL4C,WAArD,CAAP;AAOH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QClBUyd,mB;;;AAEX,qCAAc;AAAA;AAAG;;;;4BAEbC,G,EAAahkB,K,EAAe;AAC9BikB,sBAAY,CAACC,OAAb,CAAqBF,GAArB,EAA0BhkB,KAA1B;AACD;;;4BAEGgkB,G,EAAa;AACf,iBAAOC,YAAY,CAACE,OAAb,CAAqBH,GAArB,CAAP;AACD;;;+BAEMA,G,EAAa;AAClBC,sBAAY,CAACG,UAAb,CAAwBJ,GAAxB;AACD;;;oCACQ;AACPC,sBAAY,CAACnJ,KAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMauJ,c;;;AAEX,8BACUzB,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AACL,O,CAEL;;;;;mCACW0B,K,EAAY;AACrB,iBAAO,KAAK1B,IAAL,CAAUC,IAAV,CAAe,yEAAYC,QAAZ,GAAuB,qBAAtC,EAA6D;AAClEhgB,iBAAK,EAAEwhB;AAD2D,WAA7D,CAAP;AAGD,S,CAED;;;;oCACYC,Q,EAAQ;AAClB,iBAAO,KAAK3B,IAAL,CAAUC,IAAV,CAAe,yEAAYC,QAAZ,GAAuB,mBAAtC,EAA2D;AAChE9f,sBAAU,EAAC;AACTgE,oBAAM,EAACud;AADE;AADqD,WAA3D,CAAP;AAKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,QAAMC,SAAS,GAAG,YAAlB;AACA,QAAMC,QAAQ,GAAG,WAAjB;;QAMaC,mB;;;AAKX,mCACUC,SADV,EACwC;AAAA;;AAA9B,aAAAA,SAAA,GAAAA,SAAA;AACL;;;;iCAEInD,K,EAAe;AACtB,cAAIA,KAAJ,EAAW;AACT,iBAAKoD,QAAL,GAAgBpD,KAAhB;AACD;AACF;;;sCACa;AACZ,cAAI,KAAKoD,QAAT,EAAmB;AACjB,iBAAKC,YAAL,GAAoB,2DAAW,KAAKD,QAAhB,CAApB;AACD;AACF;;;yCACgB;AACf,iBAAO,2DAAW,KAAKA,QAAhB,CAAP;AACD;;;kCAEM;AACL,eAAKD,SAAL,CAAeG,SAAf;AACD;;;kCACgBtD,K,EAAa;AAC5B,eAAKmD,SAAL,CAAeI,MAAf,CAAsBP,SAAtB;AACA,eAAKG,SAAL,CAAe7e,GAAf,CAAmB0e,SAAnB,EAA6BhD,KAA7B;AACD;;;mCACc;AACb,iBAAO,KAAKmD,SAAL,CAAe1mB,GAAf,CAAmBumB,SAAnB,CAAP;AACD;;;iCACexb,I,EAAI;AAClB,eAAK2b,SAAL,CAAeI,MAAf,CAAsBN,QAAtB;AACA,eAAKE,SAAL,CAAe7e,GAAf,CAAmB2e,QAAnB,EAA6BO,IAAI,CAACC,SAAL,CAAejc,IAAf,CAA7B;AACD;;;kCACa;AACZ,iBAAOgc,IAAI,CAACE,KAAL,CAAW,KAAKP,SAAL,CAAe1mB,GAAf,CAAmBwmB,QAAnB,CAAX,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qEClDH,uH,IAAI,8E,IAEJ,sK,GAAA,gK,GACI,iU,GAAA;AAAA;AAAA,c,GAAiC;AAAA;AAAvB,2BAAsB,KAAtB,CAAsB,OAAtB;;AAAV,sBAAU,SAAV;AAAgC,O,EAAA;AAAA;AAHhC;;AAAA;AAAiB,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYrB;AAAA;;;AAAA;AAAA;AAAA;;QAAaU,c;;;AAEX,8BACSpmB,MADT,EAEkC2B,IAFlC,EAEkD;AAAA;;AADzC,aAAA3B,MAAA,GAAAA,MAAA;AACyB,aAAA2B,IAAA,GAAAA,IAAA;AAC7B;;;;oCAEI;AACP,eAAK3B,MAAL,CAAYJ,KAAZ;AACD;;;mCAEO,CAEP;;;;;;;;;;;;;;;;;;;;;ACzBH;AAAA;;;AAAA;AAAA;AAAA;;QAAqBymB,K;;;;;;;;;qCAEGhd,G,EAAK;AACrB,cAAI,OAAQA,GAAR,IAAgB,QAApB,EAA8B;AAC5B,mBAAOA,GAAP;AACD,WAFD,MAEO;AACL,mBAAO+V,QAAQ,CAAC/V,GAAG,IAAI,GAAP,IAAcA,GAAG,IAAI,EAArB,IAA2BA,GAAG,IAAI,IAAlC,GAAyC,GAAzC,GAA+CA,GAAG,CAAC6Y,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAAuBA,OAAvB,CAA+B,KAA/B,EAAsC,EAAtC,CAAhD,CAAf;AACD;AACF;;;oCAEkBoE,Q,EAAe;AAChC,cAAIC,KAAK,GAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,EAAmE,KAAnE,EAAyE,KAAzE,CAAX;AACA,iBAAOA,KAAK,CAACD,QAAD,CAAZ;AACD;;;;;AAGP;;;;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAME,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzB1C,cAAQ,EAAE,2DAFe;AAGzB/X,gBAAU,EAAE,mBAAO;AAAC;AAAA,sBAAD,CAAP,CAA8B0a,OAA9B,GAAwC;AAH3B,KAApB;AAMP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACjBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYD,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyB,sBAAzB,CAAyC,4EAAzC,EACGE,KADH,CACS,UAAA1gB,GAAG;AAAA,aAAIpD,OAAO,CAAC2F,KAAR,CAAcvC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NotfoundComponent } from './components/admin/notfound/notfound.component';\r\nimport { HomeComponent } from './components/admin/home/home.component';\r\nimport { AuthGuard } from './helpers/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: HomeComponent,\r\n    children: [\r\n      { path: 'home', component: HomeComponent }\r\n    ], canActivate: [AuthGuard]\r\n  },\r\n  { path: 'admin', loadChildren: () => import('./components/admin/admin.module').then(m => m.AdminModule), canActivate: [AuthGuard] },\r\n  { path: 'auth', loadChildren: () => import('./components/auth/auth.module').then(m => m.AuthModule) },\r\n  { path: '404', component: NotfoundComponent },  \r\n  { path: '**', redirectTo: '/404' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<router-outlet></router-outlet>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Asesor Ágil';\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { ContainerAppComponent } from './components/pages/container-app/container-app.component';\r\nimport { AdminModule } from './components/admin/admin.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { AdminComponent } from \"./components/admin/admin.component\";\r\n\r\nimport { AuthGuard } from './helpers/auth.guard';\r\nimport { AuthInterceptor } from \"./helpers/auth.interceptor\";\r\nimport { HomeComponent } from './components/admin/home/home.component';\r\nimport { ModalComponent } from './shared/modal/modal.component';\r\nimport { InitComponent } from './components/admin/init/init.component';\r\nimport { NotfoundComponent } from './components/admin/notfound/notfound.component';\r\nimport { PropuestaComponent } from './components/propuesta/propuesta.component';\r\nimport { UbicacionComponent } from './components/ubicacion/ubicacion.component';\r\nimport { AnalisisComponent } from './components/analisis/analisis.component';\r\nimport { FlujocajaComponent } from './components/flujocaja/flujocaja.component';\r\nimport { AnalisisagroComponent} from './components/analisisagro/analisisagro.component';\r\nimport { ProfileComponent } from './components/admin/profile/profile.component';\r\nimport { ResultadoComponent } from './components/resultado/resultado.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ContainerAppComponent,\r\n    AdminComponent,\r\n    HomeComponent,\r\n    ModalComponent,\r\n    InitComponent,\r\n    NotfoundComponent,\r\n    PropuestaComponent,\r\n    UbicacionComponent,\r\n    AnalisisComponent,\r\n    FlujocajaComponent,\r\n    AnalisisagroComponent,\r\n    ProfileComponent,\r\n    ResultadoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\r\n    AdminModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule\r\n  ],\r\n  entryComponents: [\r\n    ModalComponent,\r\n    ProfileComponent\r\n  ],\r\n   providers: [\r\n     AuthGuard,\r\n     {\r\n       provide: HTTP_INTERCEPTORS,\r\n       useClass:AuthInterceptor,\r\n       multi:true\r\n     }\r\n   ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AnalisisComponent } from '../analisis/analisis.component';\r\nimport { AnalisisagroComponent } from '../analisisagro/analisisagro.component';\r\nimport { FlujocajaComponent } from '../flujocaja/flujocaja.component';\r\nimport { PropuestaComponent } from '../propuesta/propuesta.component';\r\nimport { ResultadoComponent } from '../resultado/resultado.component';\r\nimport { UbicacionComponent } from '../ubicacion/ubicacion.component';\r\nimport { AdminComponent } from './admin.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AdminComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        loadChildren: () =>\r\n          import('../balance/balance.module').then(m => m.BalanceModule)\r\n      },\r\n      {\r\n        path: 'ubicacion',\r\n        component: UbicacionComponent,\r\n      },\r\n      {\r\n        path: 'balance',\r\n        loadChildren: () =>\r\n          import('../balance/balance.module').then(m => m.BalanceModule)\r\n      },\r\n      {\r\n        path: 'gastos',\r\n        loadChildren: () =>\r\n          import('../gastos/gastos.module').then(m => m.GastosModule)\r\n      },\r\n      {\r\n        path: 'ventas',\r\n        loadChildren: () =>\r\n          import('../cruces/cruces.module').then(m => m.CrucesModule)\r\n      },\r\n      {\r\n        path: 'analisis',\r\n       component:AnalisisComponent\r\n      },\r\n      {\r\n        path: 'propuesta',\r\n        component: PropuestaComponent,\r\n      },\r\n      {\r\n        path: 'flujocaja',\r\n        component: FlujocajaComponent,\r\n      },\r\n      {\r\n        path: 'analisisagro',\r\n        component: AnalisisagroComponent,\r\n      }\r\n      ,\r\n      {\r\n        path: 'resultado',\r\n        component: ResultadoComponent,\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","<mat-toolbar color=\"primary\" class=\"navbar\">\r\n    <span color=\"primary\" (click)=\"action()\">\r\n        <mat-icon class=\"mat-18\">menu</mat-icon>\r\n    </span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <span>{{titulo}} Ágil</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <span class=\"example-spacer\"></span>\r\n    <button mat-icon-button class=\"example-icon favorite-icon\" (click)=\"goHome()\">\r\n        <mat-icon>home</mat-icon>\r\n    </button>\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container class=\"menu-container\" (backdropClick)=\"action()\">\r\n\r\n    <mat-sidenav fxFlex=\"30%\" fxFlex.xs=\"60%\" mode=\"push\" #sidenav (keydown.escape)=\"action()\">\r\n        <mat-list>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n                <img fxFlex=\"30%\" fxFlex.xs=\"30%\" src=\"assets/pictures/profile.png\">\r\n            </div>\r\n            <mat-list-item>\r\n                <div mat-line><b>{{perfil.Nombre}}</b></div>\r\n                <div mat-line><small>{{perfil.Sucursales.Nombre }}</small></div>\r\n                <div mat-line> {{perfil.Grupo }} </div>\r\n                <div mat-line><b>#Cedula:</b> {{ced}} </div>\r\n            </mat-list-item>\r\n            <mat-divider></mat-divider>\r\n        </mat-list>\r\n        <mat-nav-list (click)=\"action()\">\r\n            <mat-list-item *ngIf=\"tipo==2\" routerLinkActive=\"active-list-item\" routerLink=\"ubicacion\"\r\n                [queryParams]=\"{cedula:ced}\">\r\n                <mat-icon mat-list-icon>location_on</mat-icon>\r\n                <div mat-line>Ubicacion</div>\r\n            </mat-list-item>\r\n            <mat-list-item routerLink=\"balance\" routerLinkActive=\"active-list-item\" [queryParams]=\"{cedula:ced}\">\r\n                <mat-icon mat-list-icon>assessment</mat-icon>\r\n                <div mat-line>Balance</div>\r\n            </mat-list-item>\r\n            <mat-list-item [routerLink]=\"['ventas']\" routerLinkActive=\"active-list-item\"\r\n                [queryParams]=\"{cedula:ced}\">\r\n                <mat-icon mat-list-icon>work</mat-icon>\r\n                <div mat-line>Cruces</div>\r\n            </mat-list-item>\r\n            <mat-list-item [routerLink]=\"['gastos']\" routerLinkActive=\"active-list-item\"\r\n                [queryParams]=\"{cedula:ced}\">\r\n                <mat-icon mat-list-icon>payment</mat-icon>\r\n                <div mat-line>Gastos</div>\r\n            </mat-list-item>\r\n            <ng-container *ngIf=\"tipo==2\">\r\n                <mat-list-item [routerLink]=\"['analisisagro']\" routerLinkActive=\"active-list-item\"\r\n                    [queryParams]=\"{cedula:ced}\">\r\n                    <mat-icon mat-list-icon>web</mat-icon>\r\n                    <div mat-line>Analisis</div>\r\n                </mat-list-item>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"tipo==1\">\r\n                <mat-list-item [routerLink]=\"['analisis']\" routerLinkActive=\"active-list-item\"\r\n                    [queryParams]=\"{cedula:ced}\">\r\n                    <mat-icon mat-list-icon>web</mat-icon>\r\n                    <div mat-line>Analisis</div>\r\n                </mat-list-item>\r\n            </ng-container>\r\n            <mat-list-item [routerLink]=\"['resultado']\" routerLinkActive=\"active-list-item\"\r\n                [queryParams]=\"{cedula:ced}\">\r\n                <mat-icon mat-list-icon>phone_android</mat-icon>\r\n                <div mat-line>Resultado Formiik</div>\r\n            </mat-list-item>\r\n            <mat-list-item [routerLink]=\"['propuesta']\" routerLinkActive=\"active-list-item\" *ngIf=\"tipo==2\"\r\n                [queryParams]=\"{cedula:ced}\">\r\n                <mat-icon mat-list-icon>thumb_up</mat-icon>\r\n                <div mat-line>Propuesta</div>\r\n            </mat-list-item>\r\n            <mat-list-item [routerLink]=\"['flujocaja']\" routerLinkActive=\"active-list-item\" *ngIf=\"tipo==2\"\r\n                [queryParams]=\"{cedula:ced}\">\r\n                <mat-icon mat-list-icon>receipt</mat-icon>\r\n                <div mat-line>Flujo de Caja</div>\r\n            </mat-list-item>\r\n            <mat-divider></mat-divider>\r\n            <mat-list-item (click)=\"onLogout()\">\r\n                <mat-icon mat-list-icon>power_settings_new</mat-icon>\r\n                <div mat-line>Cerrar Session</div>\r\n            </mat-list-item>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n    <mat-sidenav-content fxLayout=\"row\" fxLayoutAlign=\"center start\">\r\n        <div fxFlex=\"60%\" fxFlex.xs=\"100%\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </mat-sidenav-content>\r\n\r\n</mat-sidenav-container>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Asesor } from 'src/app/model/asesor';\r\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\r\nimport { IdbSolicitudService } from './idb-solicitud.service';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  ced: string;\r\n  titulo: string;\r\n  tipo:number;\r\n  perfil:Asesor = this.srvTokn.getUser();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activateRoute: ActivatedRoute,\r\n    private tokenStorage: TokenStorageService,\r\n    public srvSol: IdbSolicitudService,\r\n    public srvTokn:TokenStorageService,\r\n   \r\n  ) { }\r\n\r\n  ngOnInit(): void {   \r\n    \r\n    this.activateRoute.queryParamMap .subscribe((params) => {\r\n        this.ced = params.get('cedula')\r\n\r\n        this.srvSol.getSol(this.ced).subscribe((datasol) => {\r\n          this.tipo = datasol.asesor\r\n          if (datasol.asesor == 2)\r\n            this.titulo = \"Agro\";\r\n          else\r\n            this.titulo = \"Asesor\";\r\n        })\r\n      });\r\n  }\r\n\r\n  goHome() {\r\n    this.router.navigate(['home'])\r\n  }\r\n  onLogout(){\r\n    this.tokenStorage.signOut()\r\n    this.router.navigate(['auth'])\r\n  }\r\n  action(){\r\n    \r\n\r\n    if(this.sidenav.opened){\r\n      this.sidenav.close();\r\n    }else{\r\n      this.sidenav.open()\r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from \"../../material.module\";\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    MaterialModule,\r\n    FlexLayoutModule\r\n    \r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","<mat-toolbar color=\"primary\" class=\"navbar\">\r\n  <span class=\"fill-remaining-space\"></span>\r\n  <span>Asesor Agil</span>\r\n  <span class=\"fill-remaining-space\"></span>\r\n  <span class=\"example-spacer\"></span>\r\n  <button mat-icon-button (click)=\"openProfile()\" class=\"example-icon favorite-icon\">\r\n    <mat-icon>assignment_ind</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<div class=\"container\">\r\n\r\n  <div fxLayout=\"row wrap\">\r\n    <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"50%\" fxFlex.sm=\"40%\">\r\n      <button mat-raised-button color=\"accent\" (click)=\"onInitSol()\">Crear Solicitud</button>\r\n    </div>\r\n    <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"50%\" fxFlex.sm=\"40%\">\r\n      <mat-form-field>\r\n        <mat-label>Filtrar</mat-label>\r\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Buscar\" #input>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <!-- tabla -->\r\n    <div class=\"mat-elevation-z8 table-sol\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <ng-container matColumnDef=\"tipo\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\r\n          <td mat-cell *matCellDef=\"let row\">\r\n            <ng-container *ngIf=\"row.asesor==1\">\r\n              <mat-icon>store</mat-icon>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"row.asesor==2\">\r\n              <mat-icon>local_florist</mat-icon>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"cedula\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Num Cedula</th>\r\n          <td mat-cell *matCellDef=\"let row\">\r\n            <a mat-button color=\"primary\" (click)=\"onEdit(row)\">{{row.cedula}} </a>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"gestion\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <button mat-icon-button color=\"primary\" (click)=\"onGestion(element)\" [disabled]=\"procesando\">\r\n              <mat-icon>play_circle_filled</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"delete\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <button mat-icon-button color=\"warn\" (click)=\"onDelete(element)\" [disabled]=\"procesando\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"upload\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <button mat-icon-button color=\"accent\" (click)=\"onSend(element)\" [disabled]=\"procesando\">\r\n              <mat-icon>cloud_upload</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">No se encontraron datos \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"datasol\">\r\n    <div style=\"display: none;\">\r\n\r\n      <ng-container *ngIf=\"datasol.asesor==1\">\r\n        <app-analisis [datossol]=\"datasol\"></app-analisis>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"datasol.asesor==2\">\r\n        <app-analisisagro [datossol]=\"datasol\"></app-analisisagro>\r\n        <app-flujocaja [datossol]=\"datasol\"></app-flujocaja>\r\n      </ng-container>\r\n\r\n    </div>\r\n  </ng-container>\r\n\r\n</div>","import { Component, AfterViewInit, ViewChild, ElementRef, ViewChildren } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalComponent } from \"../../../shared/modal/modal.component\";\r\nimport { Solicitud } from 'src/app/model/solicitud';\r\nimport { IdbSolicitudService } from '../idb-solicitud.service';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\r\nimport Swal from 'sweetalert2';\r\nimport { AnalisisComponent } from '../../analisis/analisis.component';\r\nimport * as html2pdf from \"html2pdf.js\";\r\nimport { OficinaService } from 'src/app/services/oficina.service';\r\nimport { Asesor } from 'src/app/model/asesor';\r\nimport { EmailService } from 'src/app/services/email.service';\r\nimport { Email } from 'src/app/model/email';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { ProfileComponent } from '../profile/profile.component';\r\nimport { AnalisisagroComponent } from '../../analisisagro/analisisagro.component';\r\nimport { FlujocajaComponent } from '../../flujocaja/flujocaja.component';\r\nimport { AnalisisService } from 'src/app/services/analisis.service';\r\nimport { CarpetadigitalService } from 'src/app/services/carpetadigital.service';\r\nimport Utils from 'src/app/utils';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements AfterViewInit {\r\n\r\n  displayedColumns: string[] = ['tipo', 'cedula', 'gestion', 'delete', 'upload'];\r\n  dataSource: MatTableDataSource<Solicitud>;\r\n  dataSolicitudes: any;\r\n  datasol: Solicitud;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(AnalisisComponent, { static: false }) analisis: AnalisisComponent;\r\n  @ViewChild(AnalisisagroComponent, { static: false }) analisisAgro: AnalisisagroComponent;\r\n  @ViewChild(FlujocajaComponent, { static: false }) flujo: FlujocajaComponent;\r\n  procesando: boolean = false\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private srvSol: IdbSolicitudService,\r\n    private route: Router,\r\n    private tokenStorage: TokenStorageService,\r\n    private ofiServ: OficinaService,\r\n    private analisisServ: AnalisisService,\r\n    private emailServ: EmailService,\r\n    private carpetaServ: CarpetadigitalService,\r\n    private _bottomSheet: MatBottomSheet,\r\n    private srvCarpeta: CarpetadigitalService\r\n  ) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    this.srvSol.get().subscribe((sol) => {\r\n      this.dataSource = new MatTableDataSource(sol);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  onInitSol() {\r\n    const msg = 'Crear Solicitud';\r\n    this.openDialog(msg,\"\");\r\n  }\r\n\r\n  openDialog(menssage: string,datos:any) {\r\n    const config = {\r\n      data: {\r\n        mensaje: menssage,\r\n        content: datos\r\n      }\r\n    };\r\n    const dialogRef = this.dialog.open(ModalComponent, config);\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      this.srvSol.get().subscribe((sol) => {        \r\n        this.dataSource = new MatTableDataSource(sol);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    })\r\n  }\r\n\r\n  onLoad() {\r\n    this.srvSol.get().subscribe((sol) => {\r\n      this.dataSource = new MatTableDataSource(sol);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n  onLogout() {\r\n    this.tokenStorage.signOut()\r\n    this.route.navigate(['auth'])\r\n  }\r\n\r\n  onGestion(element) {\r\n    this.route.navigate(['admin'], { queryParams: { cedula: element.cedula } })\r\n  }\r\n\r\n  onDelete(element) {\r\n    let cedula = element.cedula\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: '¿Esta seguro de Eliminar?',\r\n      html: `Se eliminara permanentemente la informacion de la solicitud`,\r\n      showDenyButton: true,\r\n      confirmButtonText: `Eliminar`,\r\n      denyButtonText: `Cancelar`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.srvSol.deleteSol(cedula).subscribe((res) => {\r\n          console.log(res)\r\n        })\r\n        this.srvSol.get().subscribe((sol) => {\r\n          let newSol = sol.filter(a => a.cedula != cedula)\r\n          this.srvSol.save(newSol)\r\n          this.onLoad()\r\n        })\r\n\r\n        Swal.fire('Información eliminada!', '', 'success')\r\n      }\r\n    })\r\n  }\r\n\r\n  async onSend(element) {\r\n\r\n    this.procesando = true\r\n    if(element.solicitud == \"\"){\r\n      Swal.fire({\r\n        icon: 'info',\r\n        title: 'Información Incompleta',\r\n        html: 'Debe ingresar el numero de solicitud',\r\n      })\r\n      this.onEdit(element)\r\n      this.procesando = false\r\n      return\r\n    }\r\n    if (navigator.onLine) {\r\n\r\n      const numeroCedula: string = element.cedula.toString();\r\n\r\n      this.datasol = await this.getSolicitud(numeroCedula) as Solicitud\r\n\r\n      let faltante = this.validateSol()\r\n\r\n      if (faltante != \"\") {\r\n        this.procesando = false\r\n        Swal.fire({\r\n          icon: 'info',\r\n          title: 'Información Incompleta',\r\n          html: 'Aun tiene pendiente completar la siguiente información: ' + faltante,\r\n        })\r\n        return\r\n      }\r\n\r\n      let aseso = await this.getDirector() as Asesor\r\n\r\n      if (aseso.Nombre) {\r\n\r\n        Swal.fire({\r\n          title: '¿Desea Enviar Analisis de credito?',\r\n          html: `Se enviara email al director:\r\n        <br><b>`+ aseso.Nombre + `</b>, \r\n        <br><small>`+ aseso.Clave.toLocaleLowerCase() + `@fundaciondelamujer.com</small>\r\n        <br><b>Solicitud :</b>` + numeroCedula + `\r\n        <br><b>Oficina :</b> `+ aseso.Sucursales.Nombre,\r\n          icon: 'warning',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Si, Enviar!',\r\n          cancelButtonText: 'No, Cancelar!',\r\n          reverseButtons: true,\r\n          allowOutsideClick: false\r\n        }).then(async (result) => {\r\n          if (result.isConfirmed) {\r\n\r\n            Swal.fire({\r\n              title: 'Enviando analisis de credito!',\r\n              html: 'Por favor espere mientras se envia el analisis<br><b></b>',\r\n              allowOutsideClick: false,\r\n              didOpen: async () => {\r\n                Swal.showLoading()\r\n\r\n                const content = Swal.getContent()\r\n                if (content) {\r\n                  const b = content.querySelector('b')\r\n                  if (b) {\r\n\r\n                    let pdfBase64: string = \"\";\r\n                    let pdfBase64Agro: string = \"\";\r\n\r\n                    if (this.datasol.asesor == 2) {\r\n                      const contentagro = this.analisisAgro.reporte.nativeElement\r\n                      const contentflujo = this.flujo.reporte.nativeElement\r\n                      b.textContent = \"Generacion Analisis de credito pdf...\"\r\n                      pdfBase64 = await this.createpdf(contentagro, \"Analisis de credito\", numeroCedula, \"p\") as string\r\n                      b.textContent = \"Generacion Flujo de caja pdf...\"\r\n                      pdfBase64Agro = await this.createpdf(contentflujo, \"Flujo de caja\", numeroCedula, \"l\") as string\r\n\r\n                    } else if (this.datasol.asesor == 1) {\r\n                      const contentana = this.analisis.reporte.nativeElement\r\n                      b.textContent = \"Generacion Analisis de credito pdf...\"\r\n                      pdfBase64 = await this.createpdf(contentana, \"Analisis de credito\", numeroCedula, \"p\") as string\r\n                    }\r\n\r\n                    b.textContent = \"Enviando email...\"                  \r\n                    let email = aseso.Clave.toLocaleLowerCase() + \"@fundaciondelamujer.com\"\r\n                    //let email = \"jorge.mojica@fundaciondelamujer.com\"\r\n                    await this.send(pdfBase64, pdfBase64Agro, aseso.Nombre, email)\r\n\r\n                    b.textContent = \"Insertando el analisis...\"\r\n                    await this.insert(this.datasol)\r\n\r\n                    Swal.close()\r\n                    Swal.fire('Enviado!', 'Se envio correctamente', 'success')\r\n                    this.procesando = false\r\n\r\n                    let existeSolicitud = await this.getCarpetaDigital(this.datasol) as string\r\n                    console.log(existeSolicitud)\r\n                    //let insertaCarpeta = await this.inserCarpetaDigital(this.datasol,pdfBase64)\r\n                    //console.log(\"Insertndo el carpeta digital\",insertaCarpeta)\r\n\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n            this.procesando = false\r\n            Swal.fire('Cancelado', 'El proceso de envio se interrumpio :(', 'error')\r\n          }\r\n        })\r\n\r\n\r\n      } else {\r\n        this.procesando = false\r\n        Swal.fire({\r\n          icon: 'info',\r\n          title: 'No autorizado',\r\n          text: 'En este momento la oficina a la que corresponde no tiene director por favor comuniquese con el area de riesgos',\r\n        })\r\n      }\r\n\r\n    } else {\r\n      this.procesando = false\r\n      Swal.fire({\r\n        icon: 'info',\r\n        title: 'Oops...',\r\n        text: 'En este momento no tiene conexion a internet, su informacion seguira guardada en el movil pero debe tener conexion para enviarla :('\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  openProfile(): void {\r\n    this._bottomSheet.open(ProfileComponent);\r\n  }\r\n\r\n  getSolicitud(solicitud) {\r\n    return new Promise((resolve, reject) => {\r\n      this.srvSol.getSol(solicitud).subscribe(\r\n        (datasol) => {\r\n          return resolve(datasol)\r\n        },\r\n        (err) => {\r\n          reject(err)\r\n        })\r\n    })\r\n\r\n  }\r\n\r\n  createpdf(content, namefile, numeroSolicitud, orintation) {\r\n\r\n    const op = {\r\n      filename: namefile + numeroSolicitud + '.pdf',\r\n      image: { type: 'jpeg' },\r\n      html2canvas: {\r\n      },\r\n      margin: 15,\r\n      jsPDF: { format: 'a3', orientation: orintation }\r\n    }\r\n    return new Promise(resolve => {\r\n      html2pdf().from(content).set(op).outputPdf()\r\n        .then((pdf) => {\r\n          return resolve(btoa(pdf))\r\n        });\r\n    })\r\n  }\r\n\r\n  insert(solicitud: Solicitud) {\r\n    return new Promise(resolve => {\r\n      this.analisisServ.insert(solicitud)\r\n        .subscribe((res) => {\r\n          return resolve(res)\r\n        });\r\n    })\r\n  }\r\n\r\n  send(pdfBase64: string, pdfBase64Agro: string, nombreDir: string, emailDir: string) {\r\n\r\n    let email: Email = new Email;\r\n    email.To = emailDir;\r\n    email.Subject = \"Analisis de credito\"\r\n    email.Body = `<h3>Buen dia, ` + nombreDir + ` </h3>\r\n              <p>A continuacion adjunto se encuentra el formato de analisis de credito</p>`\r\n    email.Base64Pdf = pdfBase64\r\n    email.Base64PdfAgro = pdfBase64Agro\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.emailServ.Send(email).subscribe(\r\n        (su) => {\r\n          return resolve(su)\r\n        },\r\n        (er) => {\r\n          Swal.close()\r\n          Swal.fire('Error', 'Se ha producido un error en el envio de correo' + er.reason, 'error')\r\n          this.procesando = false\r\n          reject(er)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  getCarpetaDigital(solicitud: Solicitud) {\r\n    return new Promise(resolve => {\r\n      this.carpetaServ.get(solicitud.solicitud)\r\n        .subscribe((res) => {\r\n          return resolve(res)\r\n        });\r\n    })\r\n\r\n  }\r\n\r\n  inserCarpetaDigital(solicitud: Solicitud, pfd: string) {\r\n    return new Promise(resolve => {\r\n      this.carpetaServ.insert(solicitud, pfd)\r\n        .subscribe((res) => {\r\n          return resolve(res)\r\n        });\r\n    })\r\n  }\r\n\r\n  //Consulta los datos del diretor de la oficina a la cual esta asociado el colaborador\r\n  getDirector() {\r\n\r\n    let asesores: Asesor = this.tokenStorage.getUser()\r\n    let suc = asesores.Sucursales.Codigo;\r\n\r\n    if (suc == \"969\") {\r\n      return asesores.Director as Asesor\r\n    } else {\r\n\r\n      return new Promise((resolve, reject) => {\r\n        this.ofiServ.getAsesores(suc).subscribe(\r\n          (ase) => {\r\n            let diretores = ase as Asesor[]\r\n            if (ase) {\r\n              diretores.forEach(aseso => {\r\n                if (aseso.Grupo == 'DTRAGMGE' || aseso.Grupo == 'LIDPDS' || aseso.Grupo == 'LDRANMGE' || aseso.Grupo == 'LIDPDSMJ') {\r\n                  return resolve(aseso)\r\n                }\r\n              })\r\n            } else {\r\n              console.error('No se encontro la oficina')\r\n              return resolve([])\r\n            }\r\n          },\r\n          (err) => {\r\n            console.error('error algo', err)\r\n            return reject([])\r\n          })\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  onEdit(row) {   \r\n    const msg = 'Editar Solicitud';\r\n    this.openDialog(msg,row);\r\n  }\r\n\r\n  validateSol(): string {\r\n\r\n    let faltantes: string = \"\"\r\n\r\n    if (this.datasol.Balance) {\r\n      if (this.datasol.Balance.inventarioTotal == 0) {\r\n        faltantes += \"<br>Inventario\"\r\n      }\r\n      if (this.datasol.Balance.actnegTotal == 0) {\r\n        faltantes += \"<br>Activos del Negocio\"\r\n      }\r\n      if (this.datasol.Balance.actfamTotal == 0) {\r\n        faltantes += \"<br>Activos de la Familia\"\r\n      }\r\n    } else {\r\n      faltantes += \"<br><b>Balance: </b> Inventario, Activos de la Familia, Activos del Negocio\"\r\n    }\r\n\r\n    if (this.datasol.Gastos) {\r\n      if (this.datasol.Gastos.totalF == 0) {\r\n        faltantes += \"<br>Gastos de la Familia\"\r\n      }\r\n    } else {\r\n      faltantes += \"<br><b>Gastos :</b> Gastos de la Familia\"\r\n    }\r\n\r\n    if (this.datasol.asesor == 1) {\r\n      if (this.datasol.Cruces) {\r\n        if (this.datasol.Cruces.length == 0) {\r\n          faltantes += \"<br>Actividades\"\r\n        }\r\n      } else {\r\n        faltantes += \"<br>Cruces\"\r\n      }\r\n    } else if (this.datasol.asesor == 2) {\r\n      if (this.datasol.CrucesAgro) {\r\n        for (let act = 0; act < this.datasol.CrucesAgro.length; act++) {\r\n          let num: number = act + 1\r\n          const cruces = this.datasol.CrucesAgro[act];\r\n          if (cruces.tipo) {\r\n\r\n          } else {\r\n            faltantes += \"<br>Tipo de Actividad \" + num\r\n          }\r\n          if (cruces.nombre) {\r\n\r\n          } else {\r\n            faltantes += \"<br>Nombre Actividad \" + num\r\n          }\r\n        }\r\n        if (this.datasol.CrucesAgro.length == 0) {\r\n          faltantes += \"<br>Actividades\"\r\n        }\r\n      } else {\r\n        faltantes += \"<br><b>Cruces</b>\"\r\n      }\r\n      if (this.datasol.Propuesta) {\r\n        if (Utils.formatNumber(this.datasol.Propuesta.montorecomendado) == 0) {\r\n          faltantes += \"<br>Monto recomendado\"\r\n        }\r\n        if (this.datasol.Propuesta.plazo == 0) {\r\n          faltantes += \"<br>Plazo\"\r\n        }\r\n        if (this.datasol.Propuesta.tipocuota == 0) {\r\n          faltantes += \"<br>Propuesta de credito\"\r\n        }\r\n      } else {\r\n        faltantes += \"<br><b>Propuesta: </b> Monto recomendado, Plazo, Propuesta de credito\"\r\n      }\r\n    }\r\n    return faltantes\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Análisis de crédito (PDF Generado Asesor Agil) COL-FO-001\r\n * Análisis de crédito Agropecuario (PDF Generado Asesor Agil) COL-FO-006\r\n * Flujo de Caja Agropecuario (PDF Generado Asesor Agil) COL-FO-017\r\n * */","import { Injectable } from '@angular/core';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { Asesor } from 'src/app/model/asesor';\r\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IdbSolicitudService {\r\n\r\n  constructor(\r\n    private storage: StorageMap,\r\n    private tokenStorage: TokenStorageService,\r\n  ) { }\r\n\r\n  saveSol(name: string, data: any) { \r\n    this.storage.set(name, data).subscribe(() => { });\r\n  }\r\n  getSol(name: string): any {\r\n    return this.storage.get(name.toString());\r\n  }\r\n  deleteSol(name: string) {\r\n    return this.storage.delete(name.toString())\r\n  }\r\n\r\n  delete() {\r\n    const asesores: Asesor = this.tokenStorage.getUser()\r\n    const user = asesores.Clave.toLocaleLowerCase()\r\n    this.storage.delete(user.toString()).subscribe(() => { });\r\n  }\r\n  save(data: any,) {\r\n    const asesores: Asesor = this.tokenStorage.getUser()\r\n    const user = asesores.Clave.toLocaleLowerCase()\r\n    this.storage.set(user.toString(), data).subscribe(() => { });\r\n  }\r\n  get(): any {\r\n    const asesores: Asesor = this.tokenStorage.getUser()\r\n    const user = asesores.Clave.toLocaleLowerCase()\r\n    return this.storage.get(user.toString());\r\n  }\r\n}\r\n","<form [formGroup]=\"initForm\">\r\n    <div fxLayout=\"row wrap\">\r\n        <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n            <mat-form-field>\r\n                <input type=\"number\" autocomplete=\"off\" matInput placeholder=\"# Solicitud\" formControlName=\"solicitud\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n            <mat-form-field>\r\n                <input type=\"number\" autocomplete=\"off\" matInput [readonly]=\"datos.cedula\" placeholder=\"Cédula\" formControlName=\"cedula\">\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"btntoggle\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n            <mat-button-toggle-group name=\"fontStyle\" formControlName=\"asesor\" aria-label=\"Font Style\">\r\n                <mat-button-toggle value=\"1\" [disabled]=\"datos.asesor\">Comercial</mat-button-toggle>\r\n                <mat-button-toggle value=\"2\" [disabled]=\"datos.asesor\">Agropecuario</mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n        </div>\r\n        <br>\r\n        <div class=\"btnsoli\" fxFlex=\"40%\" fxFlex.xs=\"40%\" fxFlex.sm=\"40%\">\r\n            <button *ngIf=\"!datos.cedula\" type=\"button\" (click)=\"onSave()\" mat-raised-button [disabled]=\"!initForm.valid\" color=\"primary\">Guardar</button>\r\n            <button *ngIf=\"datos.cedula\" type=\"button\" (click)=\"onEdit()\" mat-raised-button [disabled]=\"!initForm.valid\" color=\"warn\">Editar</button>\r\n        </div>\r\n        <div class=\"btnsoli\" fxFlex=\"40%\" fxFlex.xs=\"40%\" fxFlex.sm=\"40%\">\r\n            <button mat-raised-button color=\"accent\" mat-dialog-close>Cerrar</button>\r\n        </div>\r\n    </div>\r\n</form>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Form, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Asesor } from 'src/app/model/asesor';\r\nimport { Solicitud } from 'src/app/model/solicitud';\r\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\r\nimport { IdbSolicitudService } from '../idb-solicitud.service';\r\n\r\n@Component({\r\n  selector: 'app-init',\r\n  templateUrl: './init.component.html',\r\n  styleUrls: ['./init.component.scss']\r\n})\r\nexport class InitComponent implements OnInit {\r\n\r\n  @Input() datos\r\n\r\n  initForm = new FormGroup({\r\n    solicitud: new FormControl('', [Validators.min(999999999), Validators.max(9999999999)]),\r\n    cedula: new FormControl('', [Validators.required, Validators.min(99999), Validators.max(9999999999)]),\r\n    asesor: new FormControl(\"1\", Validators.required)\r\n  });\r\n\r\n  private newSolicitud: Solicitud = new Solicitud();\r\n  solis = [];\r\n  constructor(\r\n    public srvSol: IdbSolicitudService,\r\n    private _snackBar: MatSnackBar,\r\n    private route: Router,\r\n    public dialog: MatDialog,\r\n    private tokenStorage: TokenStorageService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.datos.cedula) {\r\n      \r\n      this.initForm = new FormGroup({\r\n        solicitud: new FormControl(this.datos.solicitud, [Validators.required, Validators.min(999999999), Validators.max(9999999999)]),\r\n        cedula: new FormControl(this.datos.cedula, [Validators.required, Validators.min(99999), Validators.max(9999999999)]),\r\n        asesor: new FormControl(this.datos.asesor, Validators.required)\r\n      });\r\n\r\n    } else {\r\n\r\n      this.initForm = new FormGroup({\r\n        solicitud: new FormControl('', [Validators.min(999999999), Validators.max(9999999999)]),\r\n        cedula: new FormControl('', [Validators.required, Validators.min(99999), Validators.max(9999999999)]),\r\n        asesor: new FormControl(\"1\", Validators.required)\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n  async onSave() {\r\n\r\n    if (this.initForm.valid) {\r\n\r\n      const cedula = this.initForm.value.cedula.toString()\r\n      this.newSolicitud = Object.assign(this.newSolicitud, this.initForm.value);\r\n      let hoy: Date = new Date();\r\n      let asesores: Asesor = this.tokenStorage.getUser()\r\n      this.newSolicitud.fechacreacion = hoy\r\n      this.newSolicitud.usuario = asesores.Clave\r\n      this.newSolicitud.oficina = asesores.Sucursales.Codigo\r\n\r\n      this.srvSol.getSol(cedula)\r\n        .subscribe((sol) => {\r\n          if (sol) {\r\n            this._snackBar.open(\"La solicitud ya se encuentra almacenada\", \"Ok!\", {\r\n              duration: 3000,\r\n            });\r\n          } else {\r\n            this.srvSol.get().subscribe((sols) => {\r\n              if (sols) {\r\n                this.solis = sols\r\n              }\r\n              this.solis.push(this.newSolicitud)\r\n              this.srvSol.save(this.solis)\r\n              this.srvSol.saveSol(cedula, this.newSolicitud)\r\n              this.dialog.closeAll()\r\n              this._snackBar.open(\"Se inicio la solicitud, para el cliente con cedula\" + cedula, \"Ok!\", {\r\n                duration: 9000,\r\n              });\r\n              this.route.navigate(['admin'], { queryParams: { cedula: cedula } })\r\n            })\r\n          }\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n  onEdit() {\r\n\r\n    if (this.initForm.valid) {\r\n      const cedula = this.initForm.value.cedula.toString()\r\n      const numSolicitud = this.initForm.value.solicitud\r\n\r\n      this.srvSol.getSol(cedula).subscribe((sol) => {\r\n        if (sol) {          \r\n          let solicitud = sol as Solicitud\r\n          solicitud.solicitud = numSolicitud          \r\n          this.srvSol.saveSol(cedula, solicitud)\r\n\r\n          this.srvSol.get().subscribe((allsol)=>{\r\n\r\n            let aSolicitudOld =allsol.filter(a => a.cedula != cedula)\r\n            let aSolicitud = allsol.find(a => a.cedula == cedula) as Solicitud\r\n            aSolicitud.solicitud = numSolicitud\r\n            aSolicitudOld.push(aSolicitud)            \r\n            this.srvSol.save(aSolicitudOld)\r\n          })\r\n        }\r\n\r\n        this.dialog.closeAll()\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"navbar\">\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <span>Asesor Agil</span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <span class=\"example-spacer\"></span>\r\n</mat-toolbar>\r\n<div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n\r\n    <mat-card fxFlex.xs=\"90%\" fxFlex=\"40%\">\r\n        <mat-card-header>\r\n            <mat-card-title>404 !</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            Amiguito no encontre lo que estabas buscando :(\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    \r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notfound',\r\n  templateUrl: './notfound.component.html',\r\n  styleUrls: ['./notfound.component.scss']\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-list>\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n        <img fxFlex=\"50%\" fxFlex.xs=\"30%\" src=\"assets/pictures/profile.png\">\r\n    </div>\r\n    <mat-list-item>\r\n        <div mat-line><b>{{perfil.Nombre}}</b></div>\r\n        <div mat-line><small>{{perfil.Sucursales.Nombre }}</small></div>\r\n        <div mat-line> {{perfil.Grupo }} </div>\r\n        <div mat-line> {{currentApplicationVersion }} </div>\r\n     \r\n    </mat-list-item>\r\n    <mat-divider></mat-divider>\r\n    <mat-list-item (click)=\"onLogout()\">        \r\n        <div mat-line>Cerrar sesion</div>\r\n        <mat-icon mat-list-icon>power_settings_new</mat-icon>\r\n    </mat-list-item>\r\n</mat-list>","import { Component, OnInit } from '@angular/core';\r\nimport { Asesor } from 'src/app/model/asesor';\r\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  perfil:Asesor = this.srvTokn.getUser();\r\n  currentApplicationVersion = environment.appVersion;\r\n  \r\n  constructor(\r\n    private srvTokn:TokenStorageService,\r\n    private route: Router,\r\n    private tokenStorage: TokenStorageService,\r\n    private _bottomSheetRef: MatBottomSheetRef<ProfileComponent>\r\n  ) { }\r\n\r\n  onLogout() {\r\n    this.tokenStorage.signOut()\r\n    this.route.navigate(['auth'])\r\n    this._bottomSheetRef.dismiss();\r\n  }\r\n\r\n  openLink(event: MouseEvent): void {    \r\n    event.preventDefault();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <button mat-raised-button color=\"accent\" (click)=\"download()\">Descarga provisional</button> -->\r\n<div #reporte class=\"content\" id=\"contentPDF\">\r\n    <table>\r\n        <tr>\r\n            <td rowspan=\"3\" style=\"width: 30px;\" colspan=\"1\" align=\"center\">\r\n                <img src=\"assets/pictures/Logo.png\">\r\n            </td>\r\n            <td rowspan=\"3\" align=\"center\" colspan=\"3\">Analisis de credito</td>\r\n            <td align=\"center\" colspan=\"2\">COL-FO-006</td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" colspan=\"2\">Versión 11</td>\r\n        </tr>\r\n        <tr>\r\n            <td align=\"center\" colspan=\"2\">{{fechahoy}}</td>\r\n        </tr>\r\n    </table>\r\n\r\n    <table>\r\n        <tr>\r\n            <td>Analisis de credito</td>\r\n            <td>Solicitud</td>\r\n            <td>{{datasolicitud.solicitud}}</td>\r\n            <td>Fecha</td>\r\n            <td>{{fechahoy}}</td>\r\n        </tr>\r\n    </table>\r\n    <ng-container *ngIf=\"datasolicitud.Balance\">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=\"7\" align=\"center\">Balance General</th>\r\n                </tr>\r\n            </thead>\r\n            <tr>\r\n                <td>Efectivo Disponible</td>\r\n                <td align=\"center\" colspan=\"6\">${{datasolicitud.Balance.efectivo}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td rowspan=\"2\">Cuentas por cobrar</td>\r\n                <td>No. clientes</td>\r\n                <td>{{datasolicitud.Balance.clienteCobrar}}</td>\r\n                <td>Valor</td>\r\n                <td align=\"right\">$ {{datasolicitud.Balance.valorCobrar}}</td>\r\n                <td>Incobrable</td>\r\n                <td align=\"right\">$ {{datasolicitud.Balance.incobrableCobrar}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Observacion</td>\r\n                <td colspan=\"3\">{{datasolicitud.Balance.observacionesCobrar}}</td>\r\n                <td>Total</td>\r\n                <td align=\"right\">${{datasolicitud.Balance.cobrarTotal}}</td>\r\n            </tr>\r\n        </table>\r\n        <!-- inventario -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=4>Inventario</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Cantidad</th>\r\n                    <th style=\"text-align:center\">Descripcion</th>\r\n                    <th style=\"text-align:center\">Tipo</th>\r\n                    <th style=\"text-align:center\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let inv of datasolicitud.Balance.inventarioRow; let cont=index\">\r\n                <tr>\r\n                    <td>{{inv.cantidad}}</td>\r\n                    <td>{{inv.descripcion}}</td>\r\n                    <td *ngIf=\"inv.tipo\">{{inv.tipo.name}}</td>\r\n                    <td align=\"right\"> ${{inv.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td>Total</td>\r\n                    <td colspan=3>${{datasolicitud.Balance.inventarioTotal}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- Activos Negocio -->\r\n        <div class=\"medioi\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=5>Activos Negocio</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Descripcion</th>\r\n                        <th style=\"text-align:center\">Tipo</th>\r\n                        <th style=\"text-align:center\">Cantidad</th>\r\n                        <th style=\"text-align:center\">Valor U</th>\r\n                        <th style=\"text-align:center\">Valor</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let act of datasolicitud.Balance.actividadNegRows; let cont=index\">\r\n                    <tr>\r\n                        <td *ngIf=\"act.detalle\">{{act.detalle}}</td>\r\n                        <td *ngIf=\"act.tipo\">{{act.tipo.name}}</td>\r\n                        <td>{{act.cantidad}}</td>\r\n                        <td style=\"text-align: right;\">{{act.vlrUni}}</td>\r\n                        <td align=\"right\">${{act.valor}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        <td align=\"right\" colspan=4>${{datasolicitud.Balance.actnegTotal}}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n        <!-- Activos Familiares -->\r\n        <div class=\"mediod\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=5>Activos Familiares</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Descripcion</th>\r\n                        <th style=\"text-align:center\">Tipo</th>\r\n                        <th style=\"text-align:center\">Cantidad</th>\r\n                        <th style=\"text-align:center\">Valor U</th>\r\n                        <th style=\"text-align:center\">Valor</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let act of datasolicitud.Balance.activosFamRows; let cont=index\">\r\n                    <tr>\r\n                        <td>{{act.detalle}}</td>\r\n                        <td *ngIf=\"act.tipo\">{{act.tipo.name}}</td>\r\n                        <td>{{act.cantidad}}</td>\r\n                        <td style=\"text-align: right;\">{{act.vlrUni}}</td>\r\n                        <td align=\"right\">${{act.valor}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        <td align=\"right\" colspan=4>${{datasolicitud.Balance.actfamTotal}}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n\r\n        </div>\r\n        <!-- Principales inversiones -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=4>Principales inversiones de la familia y el negocio en el último año</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Descripcion</th>\r\n                    <th style=\"text-align:center\">Mes</th>\r\n                    <th style=\"text-align:center\">Origen</th>\r\n                    <th style=\"text-align:right\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let inv of datasolicitud.Balance.inversiones; let cont=index\">\r\n                <tr>\r\n                    <td>{{inv.detalle}}</td>\r\n                    <td>{{MesNombre(inv.mes,'MesNombre')}}</td>\r\n                    <td>{{inv.origen}}</td>\r\n                    <td align=\"right\">${{inv.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td>Total</td>\r\n                    <td align=\"right\" colspan=3>${{datasolicitud.Balance.totalInversiones}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!--Créditos con Fundación delamujer -->\r\n        <div class=\"medioi\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Créditos con Fundación delamujer</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Valor</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let inv of datasolicitud.Balance.creditos; let cont=index\">\r\n                    <tr>\r\n                        <td align=\"right\">${{inv.valor}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td align=\"right\">Total: ${{datasolicitud.Balance.totalCreditos}}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n        <!--Créditos con proveedores -->\r\n        <div class=\"mediod\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Créditos con proveedor</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Valor</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let inv of datasolicitud.Balance.creditos; let cont=index\">\r\n                    <tr>\r\n                        <td align=\"right\">${{inv.valor}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td align=\"right\">Total: ${{datasolicitud.Balance.totalCreditos}}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n        <!-- pasivos del negocio -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=\"6\">Pasivos del negocio</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Acreedor</th>\r\n                    <th style=\"text-align:center\">Monto original</th>\r\n                    <th style=\"text-align:center\">Destino</th>\r\n                    <th style=\"text-align:center\">Cuota</th>\r\n                    <th style=\"text-align:center\">Corriente</th>\r\n                    <th style=\"text-align:center\">No corriente</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let pas of datasolicitud.Balance.pasivosRows; let cont=index\">\r\n                <tr *ngIf=\"pas.clase==2\">\r\n                    <td>{{pas.acreedor}}</td>\r\n                    <td>{{pas.monto}}</td>\r\n                    <td>{{pas.destino}}</td>\r\n                    <td>{{pas.cuotaN}}</td>\r\n                    <td>{{pas.corrienteN}}</td>\r\n                    <td>{{pas.nocorrienteN}}</td>\r\n                </tr>\r\n                <ng-container *ngIf=\"pas.clase==0\">\r\n                    <tr *ngIf=\"pas.negociovivienda\">\r\n                        <td>{{pas.acreedor}}</td>\r\n                        <td>{{pas.monto}}</td>\r\n                        <td>{{pas.destino}}</td>\r\n                        <td>{{pas.cuotaN}}</td>\r\n                        <td>{{pas.corrienteN}}</td>\r\n                        <td>{{pas.nocorrienteN}}</td>\r\n                    </tr>\r\n                </ng-container>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=\"3\">Total</td>\r\n                    <td>{{datasolicitud.Balance.tcuotan}}</td>\r\n                    <td>${{datasolicitud.Balance.tcorrienten}}</td>\r\n                    <td>{{datasolicitud.Balance.tnocorrienten}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- pasivos de la familia -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=\"6\">Pasivos de la familia</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Acreedor</th>\r\n                    <th style=\"text-align:center\">Monto original</th>\r\n                    <th style=\"text-align:center\">Destino</th>\r\n                    <th style=\"text-align:center\">Cuota</th>\r\n                    <th style=\"text-align:center\">Corriente</th>\r\n                    <th style=\"text-align:center\">No corriente</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let pas of datasolicitud.Balance.pasivosRows; let cont=index\">\r\n                <tr *ngIf=\"pas.clase==1\">\r\n\r\n                    <td>{{pas.acreedor}}</td>\r\n                    <td>{{pas.monto}}</td>\r\n                    <td>{{pas.destino}}</td>\r\n                    <td>{{pas.cuotaN}}</td>\r\n                    <td>{{pas.corrienteN}}</td>\r\n                    <td>{{pas.nocorrienteN}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=\"3\">Total</td>\r\n                    <td>{{datasolicitud.Balance.tcuotaf}}</td>\r\n                    <td>${{datasolicitud.Balance.tcorrientef}}</td>\r\n                    <td>{{datasolicitud.Balance.tnocorrientef}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n\r\n    </ng-container>\r\n    <ng-container *ngIf=\"datasolicitud.Gastos\">\r\n        <!-- gatos del negocio -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=\"9\">Gastos del Negocio</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>Alquiler</th>\r\n                    <th>Servicios</th>\r\n                    <th>Transporte</th>\r\n                    <th>Flete</th>\r\n                    <th>Impuestos</th>\r\n                    <th>Mantenimiento</th>\r\n                    <th>Imprevistos</th>\r\n                    <th>Otros</th>\r\n                    <th>Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <ng-container *ngIf=\"datasolicitud.Gastos\">\r\n                    <tr>\r\n                        <td style=\"text-align:right\">${{datasolicitud.Gastos.alquilerN}}</td>\r\n                        <td style=\"text-align:right\">${{datasolicitud.Gastos.serviciosN}}</td>\r\n                        <td style=\"text-align:right\">${{datasolicitud.Gastos.transporteN}}</td>\r\n                        <td style=\"text-align:right\">${{datasolicitud.Gastos.fletesN}}</td>\r\n                        <td style=\"text-align:right\">${{datasolicitud.Gastos.impuestosN}}</td>\r\n                        <td style=\"text-align:right\">${{datasolicitud.Gastos.mantenimientoN}}</td>\r\n                        <td style=\"text-align:right\">${{datasolicitud.Gastos.imprevistosN}}</td>\r\n                        <td style=\"text-align:right\">${{datasolicitud.Gastos.otrosN}}</td>\r\n                        <td style=\"text-align:right\">${{datasolicitud.Gastos.totalN}}</td>\r\n                    </tr>\r\n                </ng-container>\r\n            </tbody>\r\n        </table>\r\n        <!-- gatos de la familia -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=\"10\">Gastos de la Familia</th>\r\n                </tr>\r\n                <tr>\r\n                    <th>Arriendo</th>\r\n                    <th>Alimentación</th>\r\n                    <th>Educación</th>\r\n                    <th>Vestuario</th>\r\n                    <th>Salud</th>\r\n                    <th>Transporte</th>\r\n                    <th>Servicios</th>\r\n                    <th>Entretanimiento</th>\r\n                    <th>Otros</th>\r\n                    <th>Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>${{datasolicitud.Gastos.arriendoF}}</td>\r\n                    <td>${{datasolicitud.Gastos.alimentacionF}}</td>\r\n                    <td>${{datasolicitud.Gastos.educacionF}}</td>\r\n                    <td>${{datasolicitud.Gastos.vestuarioF}}</td>\r\n                    <td>${{datasolicitud.Gastos.saludF}}</td>\r\n                    <td>${{datasolicitud.Gastos.transporteF}}</td>\r\n                    <td>${{datasolicitud.Gastos.serviciosF}}</td>\r\n                    <td>${{datasolicitud.Gastos.entretenimientoF}}</td>\r\n                    <td>${{datasolicitud.Gastos.otrosF}}</td>\r\n                    <td>${{datasolicitud.Gastos.totalF}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <!-- Remuneración de personal -->\r\n        <div class=\"medioi\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=\"2\">Remuneración de personal</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Cargo</th>\r\n                        <th style=\"text-align:center\">Valor</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let rem of datasolicitud.Gastos.remuneracionRow; let cont=index\">\r\n                    <tr>\r\n                        <td>{{rem.cargo}}</td>\r\n                        <td style=\"text-align:right\">${{rem.valor}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        <td align=\"right\" colspan=3>${{datasolicitud.Gastos.totalRemuneracion}}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n        <!-- Otros Ingresos Familiares -->\r\n        <div class=\"mediod\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=\"3\">Otros Ingresos Familiares</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Concepto</th>\r\n                        <th style=\"text-align:center\">Valor</th>\r\n                        <th style=\"text-align:center\">Observacion</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let otr of datasolicitud.Gastos.otrosIngresosRow; let cont=index\">\r\n                    <tr>\r\n                        <td>{{TipoIngreso(otr.ingreso,'tipoingreso')}}</td>\r\n                        <td style=\"text-align:right\">${{otr.valor}}</td>\r\n                        <td>{{otr.observacion}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        <td style=\"text-align:right\" colspan=\"2\">${{datasolicitud.Gastos.totalOtros}}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n\r\n        </div>\r\n    </ng-container>\r\n    <mat-divider></mat-divider><br>\r\n    <div *ngFor=\"let act of datasolicitud.Cruces\" id=\"actividades\">\r\n        <!-- encabezdo -->\r\n        <table>\r\n            <tr>\r\n                <td style=\"text-align:center\">\r\n                    <ng-container [ngSwitch]=\"act.tipo\">\r\n                        <ng-container *ngSwitchCase=\"1\">\r\n                            <mat-icon>point_of_sale</mat-icon>\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"2\">\r\n                            <mat-icon>construction</mat-icon>\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"3\">\r\n                            <mat-icon>emoji_people</mat-icon>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </td>\r\n                <th style=\"text-align:center\">\r\n                    Actividad\r\n                    <ng-container [ngSwitch]=\"act.tipo\">\r\n                        <ng-container *ngSwitchCase=\"1\">\r\n                            Comercial\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"2\">\r\n                            de Produccion\r\n                        </ng-container>\r\n                        <ng-container *ngSwitchCase=\"3\">\r\n                            de Servicios\r\n                        </ng-container>\r\n                    </ng-container>\r\n\r\n                </th>\r\n                <td style=\"text-align:center\">{{act.nombre}}</td>\r\n            </tr>\r\n        </table>\r\n\r\n        <h3>Cruce #1 Ventas B R M</h3>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=\"2\" style=\"text-align:center\">Ventas</th>\r\n                    <th colspan=\"2\" style=\"text-align:center\">Valor</th>\r\n                    <th colspan=\"2\" style=\"text-align:center\">Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tr>\r\n                <td colspan=\"2\">{{diaNombre(act.diasB,act.periodoventas)}}</td>\r\n                <td colspan=\"2\" style=\"text-align:right\">${{act.valorB}}</td>\r\n                <td colspan=\"2\" style=\"text-align:right\">${{act.totalB}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=\"2\">{{diaNombre(act.diasR,act.periodoventas)}}</td>\r\n                <td colspan=\"2\" style=\"text-align:right\">${{act.valorR}}</td>\r\n                <td colspan=\"2\" style=\"text-align:right\">${{act.totalR}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=\"2\">{{diaNombre(act.diasM,act.periodoventas)}}</td>\r\n                <td colspan=\"2\" style=\"text-align:right\">${{act.valorM}}</td>\r\n                <td colspan=\"2\" style=\"text-align:right\">${{act.totalM}}</td>\r\n            </tr>\r\n            <tr>\r\n                <th colspan=\"2\">Total</th>\r\n                <td style=\"text-align:right\" colspan=\"4\">${{act.totalVentas}}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Promedio</th>\r\n                <td style=\"text-align:right\">{{act.promedio}}</td>\r\n                <th style=\"text-align:center\">Dias</th>\r\n                <td style=\"text-align:center\">{{act.totalDias}}</td>\r\n                <th style=\"text-align:center\">Total Promedio</th>\r\n                <td style=\"text-align:right\">${{act.totalPromedio}}</td>\r\n            </tr>\r\n        </table>\r\n\r\n        <h3>Cruce #2</h3>\r\n        <ng-container *ngIf=\"act.ventasHis\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <ng-container *ngIf=\"act.periodohistoricas\">\r\n                            <th colspan=2>Ventas Historicas {{act.periodohistoricas.name}}</th>\r\n                        </ng-container>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Semana</th>\r\n                        <th style=\"text-align:center\">Valor</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let his of act.ventasHis; let cont=index\">\r\n                    <tr>\r\n                        <td>{{cont + 1}}</td>\r\n                        <td style=\"text-align:right\"> ${{his.valor}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Total</td>\r\n                        <td style=\"text-align:right\">${{act.totalVentasHis}}</td>\r\n                    </tr>\r\n                </tfoot>\r\n\r\n            </table>\r\n\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"act.tipo ==2\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=\"4\">Producción</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Nombre</th>\r\n                        <th style=\"text-align:center\">Cantidad</th>\r\n                        <th style=\"text-align:center\">Frecuencia</th>\r\n                        <th style=\"text-align:center\">Valor</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let prod of act.produccion\">\r\n                    <tr>\r\n                        <td>{{prod.nombre}}</td>\r\n                        <td>{{prod.cantidad}}</td>\r\n                        <td>\r\n                            <ng-container *ngIf=\"prod.frecuencia\"> {{prod.frecuencia.name}}</ng-container>\r\n                        </td>\r\n                        <td>${{prod.valor}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td colspan=\"3\">Total</td>\r\n                        <td>${{act.totalProduccion}}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </ng-container>\r\n\r\n        <h3>Cruce #3</h3>\r\n        <ng-container *ngIf=\"act.tipo ==1\">\r\n            <!-- costo de venta -->\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=\"5\">\r\n                            Costo de venta\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Producto</th>\r\n                        <th>Precio Compra</th>\r\n                        <th>Precio Venta</th>\r\n                        <th>%Participación</th>\r\n                        <th>Margen</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngFor=\"let cos of act.costoventa; let cont=index\">\r\n                    <tr>\r\n                        <td style=\"text-align:center\"> {{cos.nombre}}</td>\r\n                        <td style=\"text-align:right\">${{cos.precioCompra}}</td>\r\n                        <td style=\"text-align:right\">${{cos.precioVenta}}</td>\r\n                        <td style=\"text-align:center\">{{cos.participacion}} %</td>\r\n                        <td style=\"text-align:center\">{{cos.porcentaje}} %</td>\r\n                    </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td colspan=\"4\">Margen Total</td>\r\n                        <td style=\"text-align:center\">{{act.margen}}%</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </ng-container>\r\n        <!-- materia prima -->\r\n        <ng-container *ngIf=\"act.tipo ==2\">\r\n            <!-- materia prima -->\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th [attr.colspan]=\"act.materiaprima.length + 1\">Costo de Venta</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Nombre Producto</th>\r\n                        <td style=\"text-align: center;\" *ngFor=\"let item of act.materiaprima\">\r\n                            {{item.producto}}\r\n                        </td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Materia Prima 1</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: left;\">{{item.materiaprimapri}}</div>\r\n                            <div style=\"float: right;\">${{item.valorMatPri}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Materia Prima 2</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: left;\">{{item.matPrima2}}</div>\r\n                            <div style=\"float: right;\">${{item.valorMatPri2}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Materia Prima 3</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: left;\">{{item.matPrima3}}</div>\r\n                            <div style=\"float: right;\">${{item.valorMatPri3}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Materia Prima 4</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: left;\">{{item.matPrima4}}</div>\r\n                            <div style=\"float: right;\">${{item.valorMatPri4}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Materia Prima 5</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: left;\">{{item.matPrima5}}</div>\r\n                            <div style=\"float: right;\">${{item.valorMatPri5}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Mano de Obra</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: right;\">${{item.valorMao}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>CIF</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: right;\">${{item.valorCif}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Precio de venta</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: right;\">${{item.precioVenta}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Cantidad</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: right;\">{{item.cantidad}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Precio de Compra</td>\r\n                        <td *ngFor=\"let item of act.materiaprima\">\r\n                            <div style=\"float: right;\">${{item.precioCompra}}</div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Participacion</td>\r\n                        <td style=\"text-align: center;\" *ngFor=\"let item of act.materiaprima\">\r\n                            {{item.participacion}} %\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Margen de Utilidad</td>\r\n                        <td style=\"text-align: center;\" *ngFor=\"let item of act.materiaprima\">\r\n                            {{item.porcentaje}} %\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <!-- materia prima -->\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=\"6\">Materia Prima</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Unidad</th>\r\n                        <th>Cantidad</th>\r\n                        <th>Frecuencia</th>\r\n                        <th>Materia Prima</th>\r\n                        <th>Valor Unitario</th>\r\n                        <th>Valor Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{{act.rendUnidad}}</td>\r\n                        <td>{{act.rendCantidad}}</td>\r\n                        <td *ngIf=\"act.rendFrecuencia\">{{act.rendFrecuencia.name}}</td>\r\n                        <td>{{act.rendMateriaprima}}</td>\r\n                        <td style=\"text-align: right;\">${{act.rendValorU}}</td>\r\n                        <td style=\"text-align: right;\">${{act.rendValorT}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            \r\n        </ng-container>\r\n\r\n        <!-- ventas maximas -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=\"5\">\r\n                        <ng-container *ngIf=\"act.tipo ==2\">\r\n                            Compras\r\n                        </ng-container>\r\n                        <ng-container *ngIf=\"act.tipo ==1\">\r\n                            Ventas Maximas\r\n                        </ng-container>\r\n\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th>Cantidad</th>\r\n                    <th>Descripcion</th>\r\n                    <th>Frecuencia</th>\r\n                    <th>Valor Unitario</th>\r\n                    <th>Valor Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let con of act.compras; let cont=index\">\r\n                <tr>\r\n                    <td>{{con.cantidad}}</td>\r\n                    <td>{{con.descripcion}}</td>\r\n                    <td *ngIf=\"con.frecuencia\">{{con.frecuencia.name}}</td>\r\n                    <td style=\"text-align:right\">${{con.valor}}</td>\r\n                    <td style=\"text-align:right\">${{con.total}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <th colspan=\"2\">Total</th>\r\n                    <td colspan=\"3\" style=\"text-align:right\">${{act.totalCompras}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th colspan=\"2\">%Costo</th>\r\n                    <td colspan=\"3\" style=\"text-align:right\">{{act.costo}}%</td>\r\n                </tr>\r\n                <tr>\r\n                    <th colspan=\"2\">Total Cruce</th>\r\n                    <td colspan=\"3\" style=\"text-align:right\">{{act.totalCruce3 | currency:'$': 'symbol' : '1.0-0' }}\r\n                    </td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <mat-divider></mat-divider>\r\n        <br>\r\n    </div>\r\n\r\n</div>","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Solicitud } from 'src/app/model/solicitud';\r\nimport { IdbSolicitudService } from '../admin/idb-solicitud.service';\r\nimport DataSelect from '../../data-select/dataselect.json';\r\n\r\n@Component({\r\n  selector: 'app-analisis',\r\n  templateUrl: './analisis.component.html',\r\n  styleUrls: ['./analisis.component.scss']\r\n})\r\nexport class AnalisisComponent implements OnInit {\r\n  @ViewChild('reporte') reporte: ElementRef\r\n  @Input() datossol: Solicitud\r\n\r\n  constructor(\r\n    private activeRoute: ActivatedRoute,\r\n    public srvSol: IdbSolicitudService,\r\n  ) { }\r\n\r\n  datasolicitud: Solicitud = new Solicitud()\r\n  tipoAsesor: number;\r\n  fechahoy: string;\r\n\r\n  ngOnInit(): void {\r\n\r\n    let hoy = new Date()\r\n    let mes: number = hoy.getMonth() + 1\r\n    this.fechahoy = hoy.getDate() + \"/\" + mes + \"/\" + hoy.getFullYear()\r\n\r\n    if (!this.datossol) {\r\n      this.activeRoute.queryParamMap.subscribe((params) => {\r\n        let ced = params.get('cedula')\r\n        this.srvSol.getSol(ced).subscribe((datasol) => {\r\n          this.datasolicitud = datasol as Solicitud;\r\n          this.tipoAsesor = this.datasolicitud.asesor;\r\n        })\r\n      });\r\n    } else {\r\n      this.datasolicitud = this.datossol\r\n      this.tipoAsesor = this.datasolicitud.asesor;\r\n    }\r\n  }\r\n\r\n  MesNombre(id: string, lista: string) {\r\n    if (lista == 'MesNombre') {\r\n      if (id != \"\") {\r\n        let Mes = DataSelect.Meses.filter(i => i.id == id);\r\n        return Mes[0].name\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n  }\r\n  diaNombre(dias: [], periodo: number) {\r\n    let nombres = \"\"\r\n    let aNombre = []\r\n    \r\n    if (!periodo)\r\n      return \"\"\r\n    if (!dias)\r\n      return \"\"\r\n\r\n    if (periodo == 1) {\r\n      aNombre = DataSelect.DiasSemana\r\n    } else if (periodo == 2) {\r\n      aNombre = DataSelect.Semanas\r\n    } else if (periodo == 3) {\r\n      aNombre = DataSelect.Quince\r\n    }\r\n    for (let d = 0; d < dias.length; d++) {\r\n      nombres += \" \" + aNombre.find(a => a.id == dias[d]).name;\r\n    }\r\n    return nombres\r\n  }\r\n\r\n\r\n  TipoIngreso(id: number, lista: string) {\r\n    if (lista == 'tipoingreso') {\r\n      let tipo = DataSelect.OtrosIngresosFamiliar.filter(i => i.id == id);\r\n      return tipo[0].name\r\n    }\r\n  }\r\n\r\n}\r\n","<div #reporte class=\"content\" id=\"contentPDF\">\r\n    <!-- Encabezado -->\r\n    <table>\r\n        <tr>\r\n            <td rowspan=\"3\" style=\"text-align:center;width: 200px;\">\r\n                <img src=\"assets/pictures/Logo.png\">\r\n            </td>\r\n            <td rowspan=\"3\" style=\"text-align:center\">Analisis de credito agropecuario</td>\r\n            <td style=\"text-align:center\">COL-FO-006</td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"text-align:center\">Versión 11</td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"text-align:center\">Fecha</td>\r\n        </tr>\r\n    </table>\r\n\r\n    <!-- Documento y solicitud -->\r\n    <table>\r\n        <tr>\r\n            <td>Documento de identidad del cliente</td>\r\n            <td>{{datasolicitud.cedula}}</td>\r\n            <td>solicitud</td>\r\n            <td>{{datasolicitud.solicitud}}</td>\r\n        </tr>\r\n    </table>\r\n\r\n    <!-- Mapa de ubicacion -->\r\n    <ng-container *ngIf=\"datasolicitud.Ubicacion\">\r\n        <table>\r\n            <tr>\r\n                <th style=\"text-align:center\" colspan=4> Mapa de ubicación (como llegar al predio)</th>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=1>tiempo recorrido</td>\r\n                <td colspan=3>\r\n                    {{datasolicitud.Ubicacion.tiempohora}}:{{datasolicitud.Ubicacion.tiempomin}}:{{datasolicitud.Ubicacion.tiemposeg}}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=1>Punto de partida</td>\r\n                <td colspan=1>{{datasolicitud.Ubicacion.puntopartida}}</td>\r\n                <td colspan=1>Punto de llegada</td>\r\n                <td colspan=1>{{datasolicitud.Ubicacion.puntollegada}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td colspan=1>Descripción punto de partida</td>\r\n                <td colspan=1>{{datasolicitud.Ubicacion.descripcionppartida}}</td>\r\n                <td colspan=1>Descripción punto de llegada</td>\r\n                <td colspan=1>{{datasolicitud.Ubicacion.descripcionpllegada}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td rowspan=\"3\" colspan=2>\r\n                    <img [src]='transform(datasolicitud.Ubicacion.fotoppartida)' width=\"500px\" height=\"400px\">\r\n                </td>\r\n                <td rowspan=\"3\" colspan=2>\r\n                    <img [src]='transform(datasolicitud.Ubicacion.fotopllegada)' width=\"500px\" height=\"400px\">\r\n            </tr>\r\n        </table>\r\n    </ng-container>\r\n    <!-- Balance general -->\r\n    <ng-container *ngIf=\"datasolicitud.Balance\">\r\n\r\n        <table>\r\n            <tr>\r\n                <th align=\"center\" colspan=10>Balance general</th>\r\n            </tr>\r\n            <tr>\r\n                <td>Efectivo disponible</td>\r\n                <td style=\"text-align:right;\" colspan=8>${{datasolicitud.Balance.efectivo}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Cuentas por cobrar</td>\r\n                <td>N. de clientes</td>\r\n                <td>{{datasolicitud.Balance.clienteCobrar}}</td>\r\n                <td>Valor</td>\r\n                <td style=\"width: 10%;text-align: right;\">${{datasolicitud.Balance.valorCobrar}}</td>\r\n                <td>Incobrable</td>\r\n                <td style=\"text-align: right;\">${{datasolicitud.Balance.incobrableCobrar}}</td>\r\n                <td>Total</td>\r\n                <td style=\"text-align: right;\">${{datasolicitud.Balance.cobrarTotal}}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Observaciones</td>\r\n                <td colspan=8>{{datasolicitud.Balance.observacionesCobrar}}</td>\r\n            </tr>\r\n            <tbody *ngFor=\"let recu of datasolicitud.Balance.recuperacion; let cont=index\">\r\n                <tr>\r\n                    <td>Recuperación de cartera</td>\r\n                    <td style=\"text-align: right;\" colspan=6>${{recu.valor}}</td>\r\n                    <td>Mes de recuperación</td>\r\n                    <td>{{equivalencia(recu.mes,'MesNombre')}}</td>\r\n\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <!-- Inventarios -->\r\n        <table>\r\n            <tr>\r\n                <th align=\"center\" colspan=10>Inventarios</th>\r\n            </tr>\r\n            <tr>\r\n                <th style=\"width: 20%;\">Tipo</th>\r\n                <th style=\"width: 30%;\">Descripción</th>\r\n                <th style=\"width: 20%;\">Cantidad</th>\r\n                <th style=\"width: 20%;\">Valor unitario</th>\r\n                <th>Valor</th>\r\n            </tr>\r\n            <tbody *ngFor=\"let inven of datasolicitud.Balance.inventarioRow; let cont=index\">\r\n                <tr>\r\n                    <td *ngIf=\"inven.tipo\" style=\"width: 20%;\">{{inven.tipo.name}}</td>\r\n                    <td style=\"width: 30%;\">{{inven.descripcion}}</td>\r\n                    <td style=\"width: 20%;\">{{inven.cantidad}}</td>\r\n                    <td style=\"width: 20%;text-align:right;\">${{inven.vlrUni}}</td>\r\n                    <td align=\"right\">${{inven.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tr>\r\n                <td colspan=4>Total</td>\r\n                <td align=\"right\">${{datasolicitud.Balance.inventarioTotal}}</td>\r\n            </tr>\r\n        </table>\r\n        <!-- Activos del negocio -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=10>Activos Negocio</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"width: 20%;text-align:center\">Tipo</th>\r\n                    <th style=\"width: 30%;text-align:center\">Descripcion</th>\r\n                    <th style=\"width: 20%;text-align:center\">Cantidad</th>\r\n                    <th style=\"width: 20%;text-align:center\">Valor unitario</th>\r\n                    <th style=\"text-align:center\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let act of datasolicitud.Balance.actividadNegRows; let cont=index\">\r\n                <tr>\r\n                    <td *ngIf=\"act.tipo\" style=\"width: 20%;\"> {{act.tipo.name}}</td>\r\n                    <td style=\"width: 30%;\">{{act.detalle}}</td>\r\n                    <td style=\"width: 20%;\">{{act.cantidad}}</td>\r\n                    <td style=\"width: 20%;text-align:right\">${{act.vlrUni}}</td>\r\n                    <td align=\"right\">${{act.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=4>Total</td>\r\n                    <td align=\"right\">${{datasolicitud.Balance.actnegTotal}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- Activos de la familia -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=10>Activos de la familia</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"width: 20%;\" style=\"text-align:center\">Tipo</th>\r\n                    <th style=\"width: 30%;\" style=\"text-align:center\">Descripción</th>\r\n                    <th style=\"width: 20%;\" style=\"text-align:center\">Cantidad</th>\r\n                    <th style=\"width: 20%;\" style=\"text-align:center\">Valor unitario</th>\r\n                    <th style=\"text-align:center\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let inv of datasolicitud.Balance.activosFamRows; let cont=index\">\r\n                <tr>\r\n                    <td *ngIf=\"inv.tipo\" style=\"width: 20%;\">{{inv.tipo.name}}</td>\r\n                    <td style=\"width: 30%;\">{{inv.detalle}}</td>\r\n                    <td style=\"width: 20%;\">{{inv.cantidad}}</td>\r\n                    <td style=\"width: 20%;text-align:right\">${{inv.vlrUni}}</td>\r\n                    <td align=\"right\">${{inv.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=4>Total</td>\r\n                    <td align=\"right\">${{datasolicitud.Balance.actfamTotal}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- Principales inversiones de la familia y el negocio en el ultimo año -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=4>Principales inversiones de la familia y el negocio en el ultimo año</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Descripción</th>\r\n                    <th style=\"text-align:center\">Mes de compra</th>\r\n                    <th style=\"text-align:center\">Origen de los recursos</th>\r\n                    <th style=\"text-align:center\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let inv of datasolicitud.Balance.inversiones; let cont=index\">\r\n                <tr>\r\n                    <td>{{inv.detalle}}</td>\r\n                    <td>{{equivalencia(inv.mes,'MesNombre')}}</td>\r\n                    <td>{{inv.origen}}</td>\r\n                    <td align=\"right\">${{inv.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td>Total</td>\r\n                    <td align=\"right\" colspan=3>${{datasolicitud.Balance.totalInversiones}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- Creditos con fundacion dela mujer -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=2>Créditos con Fundación delamujer</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:right\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let cred of datasolicitud.Balance.creditos; let cont=index\">\r\n                <tr>\r\n                    <td align=\"right\">${{cred.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td align=\"right\"> Total ${{datasolicitud.Balance.totalCreditos}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- Creditos con proveedor -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=12>Créditos con proveedor</th>\r\n                </tr>\r\n                <tr *ngIf=\"datasolicitud.Balance.proveedoresRow.length+1==0\">\r\n                    <td colspan=3>¿Cuenta actualmete con créditos con proveedores?</td>\r\n                    <td style=\"text-align:center\">NO</td>\r\n                    <td colspan=3>¿Cuantos?</td>\r\n                    <td>{{datasolicitud.Balance.proveedoresRow.length+1}}</td>\r\n                    <td colspan=3>Total</td>\r\n                    <td style=\"text-align:right\">${{datasolicitud.Balance.proveedoresTotal}}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datasolicitud.Balance.proveedoresRow.length+1!==0\">\r\n                    <td colspan=3>¿Cuenta actualmete con créditos con proveedores?</td>\r\n                    <td style=\"text-align:center\">SI</td>\r\n                    <td colspan=3>¿Cuantos?</td>\r\n                    <td>{{datasolicitud.Balance.proveedoresRow.length+1}}</td>\r\n                    <td colspan=3>Total:</td>\r\n                    <td style=\"text-align:right\">${{datasolicitud.Balance.proveedoresTotal}}</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let credpro of datasolicitud.Balance.proveedoresEstacionales; let cont=index\">\r\n                <tr>\r\n                    <td style=\"text-align:center\">Proveedor</td>\r\n                    <td>{{credpro.nombre}}</td>\r\n                    <td style=\"text-align:center\">Numero de cuotas</td>\r\n                    <td>{{credpro.numcuotas}}</td>\r\n                    <td colspan=4 style=\"text-align:center\">Total Proveedor</td>\r\n                    <td colspan=4 align=\"right\">${{credpro.total}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let credproMes of credpro.cuotas; let cont=index\">\r\n                    <td>Mes</td>\r\n                    <td colspan=2>{{equivalencia(credproMes.mes,'MesNombre')}}</td>\r\n                    <td>Valor</td>\r\n                    <td colspan=8 style=\"text-align:right\">${{credproMes.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n\r\n        </table>\r\n        <!-- Pasivo del negocio -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=8>Pasivo del Negocio</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Acreedor</th>\r\n                    <th style=\"text-align:center\">Monto inicial</th>\r\n                    <th style=\"text-align:center\">Saldo actual</th>\r\n                    <th style=\"text-align:center\">Destino</th>\r\n                    <th style=\"text-align:center\">Periodicidad</th>\r\n                    <th style=\"text-align:center\">Valor cuota</th>\r\n                    <th style=\"text-align:center\">Pasivo Corriente</th>\r\n                    <th style=\"text-align:center\">Pasivo no Corriente</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let pasNeg of datasolicitud.Balance.pasivosRows; let cont=index\">\r\n                <tr *ngIf=\"pasNeg.clase==2\">\r\n\r\n                    <td>{{pasNeg.acreedor}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.monto}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.saldo}}</td>\r\n                    <td>{{pasNeg.destino}}</td>\r\n                    <td *ngIf=\"pasNeg.periodo\">{{pasNeg.periodo.name}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.valor}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.corrienteN}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.nocorrienteN}}</td>\r\n                </tr>\r\n                <tr *ngIf=\"pasNeg.negociovivienda\">\r\n\r\n                    <td>{{pasNeg.acreedor}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.monto}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.saldo}}</td>\r\n                    <td>{{pasNeg.destino}}</td>\r\n                    <td *ngIf=\"pasNeg.periodo\">{{pasNeg.periodo.name}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.valor}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.corrienteN}}</td>\r\n                    <td style=\"text-align:right\">${{pasNeg.nocorrienteN}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=5>Total</td>\r\n                    <td style=\"text-align:right\" colspan=1>{{ datasolicitud.Balance.tcuotan|currency:'$': 'symbol' :\r\n                        '1.0-0'}}</td>\r\n                    <td style=\"text-align:right\" colspan=1>{{datasolicitud.Balance.tcorrienten|currency:'$': 'symbol' :\r\n                        '1.0-0'}}</td>\r\n                    <td style=\"text-align:right\" colspan=1>{{datasolicitud.Balance.tnocorrienten|currency:'$': 'symbol'\r\n                        : '1.0-0'}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- Pasivo de la familia -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=8>Pasivo de la familia</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Acreedor</th>\r\n                    <th style=\"text-align:center\">Monto inicial</th>\r\n                    <th style=\"text-align:center\">Saldo actual</th>\r\n                    <th style=\"text-align:center\">Destino</th>\r\n                    <th style=\"text-align:center\">Periodicidad</th>\r\n                    <th style=\"text-align:center\">Valor cuota</th>\r\n                    <th style=\"text-align:center\">Pasivo Corriente</th>\r\n                    <th style=\"text-align:center\">Pasivo no Corriente</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let pasfa of datasolicitud.Balance.pasivosRows; let cont=index\">\r\n                <tr *ngIf=\"pasfa.clase==1\">\r\n                    <td>{{pasfa.acreedor}}</td>\r\n                    <td style=\"text-align:right\">${{pasfa.monto}}</td>\r\n                    <td style=\"text-align:right\">${{pasfa.saldo}}</td>\r\n                    <td>{{pasfa.destino}}</td>\r\n                    <td>\r\n                        <ng-container *ngIf=\"pasfa.periodo\"> {{pasfa.periodo.name}}</ng-container>\r\n                    </td>\r\n                    <td style=\"text-align:right\">${{pasfa.valor}}</td>\r\n                    <td style=\"text-align:right\">${{pasfa.corrienteF}}</td>\r\n                    <td style=\"text-align:right\">${{pasfa.nocorrienteF}}</td>\r\n                </tr>\r\n\r\n                <tr *ngIf=\"pasfa.negociovivienda\">\r\n                    <td>{{pasfa.acreedor}}</td>\r\n                    <td style=\"text-align:right\">${{pasfa.monto}}</td>\r\n                    <td style=\"text-align:right\">${{pasfa.saldo}}</td>\r\n                    <td>{{pasfa.destino}}</td>\r\n                    <td>\r\n                        <ng-container *ngIf=\"pasfa.periodo\"> {{pasfa.periodo.name}}</ng-container>\r\n                    </td>\r\n                    <td style=\"text-align:right\">${{pasfa.valor}}</td>\r\n                    <td style=\"text-align:right\">${{pasfa.corrienteF}}</td>\r\n                    <td style=\"text-align:right\">${{pasfa.nocorrienteF}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=5>Total</td>\r\n                    <td align=\"right\" colspan=1>{{datasolicitud.Balance.tcuotaf|currency:'$': 'symbol' : '1.0-0'}}</td>\r\n                    <td align=\"right\" colspan=1>{{datasolicitud.Balance.tcorrientef|currency:'$': 'symbol' : '1.0-0'}}\r\n                    </td>\r\n                    <td align=\"right\" colspan=1>{{datasolicitud.Balance.tnocorrientef|currency:'$': 'symbol' : '1.0-0'}}\r\n                    </td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"datasolicitud.Gastos\">\r\n\r\n        <!-- Remuneracion del personal -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=4>Remuneración del personal</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Proveedor</th>\r\n                    <th style=\"text-align:center\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let remu of datasolicitud.Gastos.remuneracionRow; let cont=index\">\r\n                <tr>\r\n                    <td>{{remu.cargo}}</td>\r\n                    <td align=\"right\">${{remu.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td>Total</td>\r\n                    <td align=\"right\" colspan=3>${{datasolicitud.Gastos.totalRemuneracion}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- Gastos del Negocio Mensual -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=9>Gastos del Negocio Mensual</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Alquiler</th>\r\n                    <th style=\"text-align:center\">Servicios</th>\r\n                    <th style=\"text-align:center\">Transporte</th>\r\n                    <th style=\"text-align:center\">Flete</th>\r\n                    <th style=\"text-align:center\">Impuestos</th>\r\n                    <th style=\"text-align:center\">Mantenimiento</th>\r\n                    <th style=\"text-align:center\">Imprevistos</th>\r\n                    <th style=\"text-align:center\">Otros</th>\r\n                    <th style=\"text-align:center\">Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tr>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.alquilerN}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.serviciosN}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.transporteN}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.fletesN}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.imprevistosN}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.mantenimientoN}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.imprevistosN}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.otrosN}}</td>\r\n                <td align=\"right\">${{datasolicitud.Gastos.totalN}}</td>\r\n            </tr>\r\n        </table>\r\n        <!-- Gastos del Negocio Estacional -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=3>Gastos del Negocio Estacional</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Concepto</th>\r\n                    <th style=\"text-align:center\">Mes</th>\r\n                    <th style=\"text-align:center\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let GasEst of datasolicitud.Gastos.estacionalesN; let cont=index\">\r\n                <tr>\r\n                    <td>{{GasEst.concepto}}</td>\r\n                    <td>{{Mes(GasEst.mes)}}</td>\r\n                    <td align=\"right\">${{GasEst.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=2>Total</td>\r\n                    <td align=\"right\">${{datasolicitud.Gastos.totalEstacionalesN}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- Gastos de la Familia -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=10>Gastos de la Familia</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Arriendo</th>\r\n                    <th style=\"text-align:center\">Alimentación</th>\r\n                    <th style=\"text-align:center\">Educación</th>\r\n                    <th style=\"text-align:center\">Vestuario</th>\r\n                    <th style=\"text-align:center\">Salud</th>\r\n                    <th style=\"text-align:center\">Transporte</th>\r\n                    <th style=\"text-align:center\">Servicios</th>\r\n                    <th style=\"text-align:center\">Entretimiento</th>\r\n                    <th style=\"text-align:center\">Otros</th>\r\n                    <th style=\"text-align:center\">Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tr>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.arriendoF}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.alimentacionF}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.educacionF}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.vestuarioF}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.saludF}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.transporteF}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.serviciosF}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.entretenimientoF}}</td>\r\n                <td style=\"text-align:right\">${{datasolicitud.Gastos.otrosF}}</td>\r\n                <td align=\"right\">${{datasolicitud.Gastos.totalF}}</td>\r\n            </tr>\r\n\r\n\r\n        </table>\r\n        <!-- Gastos de la familia Estacional -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=4>Gastos de la familia Estacional</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Concepto</th>\r\n                    <th style=\"text-align:center\">Mes</th>\r\n                    <th style=\"text-align:center\">Valor</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let gastF of datasolicitud.Gastos.estacionalesF; let cont=index\">\r\n                <tr>\r\n                    <td>{{gastF.concepto}}</td>\r\n                    <td>{{Mes(gastF.mes)}}</td>\r\n                    <td align=\"right\">${{gastF.valor}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td colspan=2>Total</td>\r\n                    <td align=\"right\">${{datasolicitud.Gastos.totalEstacionalesF}}</td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n        <!-- Otros Ingresos Familiares -->\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan=4>Otros Ingresos Familiares</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style=\"text-align:center\">Concepto</th>\r\n                    <th style=\"text-align:center\">Valor</th>\r\n                    <th style=\"text-align:center\">Observación</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody *ngFor=\"let OtrosIn of datasolicitud.Gastos.otrosIngresosRow; let cont=index\">\r\n                <tr>\r\n                    <td>{{equivalencia(OtrosIn.ingreso,'tipoingreso')}}</td>\r\n                    <td style=\"text-align:right\">${{OtrosIn.valor}}</td>\r\n                    <td align=\"right\">{{OtrosIn.observacion}}</td>\r\n                </tr>\r\n            </tbody>\r\n            <tfoot>\r\n                <tr>\r\n                    <td> Total</td>\r\n                    <td align=\"right\">${{datasolicitud.Gastos.totalOtros}}</td>\r\n                    <td></td>\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n    </ng-container>\r\n\r\n    <br>\r\n    <mat-divider></mat-divider>\r\n    <br>\r\n\r\n    <table>\r\n        <thead>\r\n            <tr>\r\n                <th style=\"text-align: center;height: 40px;\"><b>Actividades del cliente</b></th>\r\n            </tr>\r\n        </thead>\r\n    </table>\r\n\r\n    <!-- Actividades del cliente -->\r\n    <div *ngFor=\"let act of datasolicitud.CrucesAgro\" id=\"actividades\">\r\n\r\n        <!--\r\n        ....###.....######...########..####..######...#######..##..........###...\r\n        ...##.##...##....##..##.....##..##..##....##.##.....##.##.........##.##..\r\n        ..##...##..##........##.....##..##..##.......##.....##.##........##...##.\r\n        .##.....##.##...####.########...##..##.......##.....##.##.......##.....##\r\n        .#########.##....##..##...##....##..##.......##.....##.##.......#########\r\n        .##.....##.##....##..##....##...##..##....##.##.....##.##.......##.....##\r\n        .##.....##..######...##.....##.####..######...#######..########.##.....##\r\n        -->\r\n        <ng-container *ngIf=\"act.tipo==1\">\r\n            <!-- Transitorio -->\r\n            <div *ngIf=\"act.nombre.tipoproducto=='Transitorio'\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td style=\"text-align: center;\">\r\n                                <mat-icon class=\"mat-18\">local_florist</mat-icon>\r\n                            </td>\r\n                            <td *ngIf=\"act.nombre\" colspan=\"5\">\r\n                                Actividad {{equivalencia(act.tipo,'TipoActividad')}} de <b>{{act.nombre.name}}</b>\r\n                            </td>\r\n                            <td *ngIf=\"act.nombre\" style=\"text-align:center\">\r\n                                Tipo de producción: <b>{{act.nombre.tipoproducto}}</b>\r\n                            </td>\r\n                            <th style=\"text-align:center\">Ingreso</th>\r\n                            <td style=\"text-align:right\">${{totalingreso(act)}}</td>\r\n                            <th style=\"text-align:center\">Egreso</th>\r\n                            <td style=\"text-align:right\">${{totalegreso(act)}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"text-align:center\">Unidad de venta</td>\r\n                            <td colspan=3 *ngIf=\"act.unidadventa\" style=\"text-align:center\">{{act.unidadventa.name}}\r\n                            </td>\r\n                            <td style=\"text-align:center\">Precio minimo</td>\r\n                            <td style=\"text-align:center\">${{act.preciomin}}</td>\r\n                            <td style=\"text-align:center\">Precio actual</td>\r\n                            <td style=\"text-align:center\">${{act.precioactual}}</td>\r\n                            <td style=\"text-align:center\">Precio promedio</td>\r\n                            <td style=\"text-align:center\">${{act.preciopromedio}}</td>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n\r\n                <!-- Lote 1 -->\r\n                <div *ngFor=\"let lt of act.lotesAgro; let cont=index\">\r\n                    <table>\r\n                        <tr>\r\n                            <th colspan=12>Lote {{cont+1}}</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"text-align:center\">Edad del cultivo</td>\r\n                            <td style=\"text-align:center\">{{lt.edadcult}} {{equivalencia(lt.periodoedad,'PeriodoEdad')}}\r\n                            </td>\r\n                            <td style=\"text-align:center\">Área cultivada</td>\r\n                            <td style=\"text-align:center\">{{lt.areacult}} m²</td>\r\n                            <td style=\"text-align:center\">Distacia entre surcos</td>\r\n                            <td style=\"text-align:center\">{{lt.dsurcos}}</td>\r\n                            <td style=\"text-align:center\">Distacia entre plantas</td>\r\n                            <td style=\"text-align:center\">{{lt.dplantas}}</td>\r\n                            <td style=\"text-align:center\">Distacia entre siembra</td>\r\n                            <td style=\"text-align:center\">{{lt.diastancia}}</td>\r\n                            <td style=\"text-align:center\"># plantas/semillas del lote</td>\r\n                            <td style=\"text-align:center\">{{lt.numplantas}}</td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <!-- INGRESO Ciclo de la producción Transitorias -->\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colspan=7>Ingreso Lote\r\n                                    <ng-container *ngIf=\"cont==0\">Principal</ng-container>\r\n                                    <ng-container *ngIf=\"cont>0\">{{cont+1}}</ng-container>\r\n                                    <ng-container *ngIf=\"act.nombre\">\r\n                                        {{act.nombre.name}}\r\n                                    </ng-container>\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td *ngIf=\"act.unidadventa\" style=\"text-align:center\">Rendimiento por lote\r\n                                    {{act.unidadventa.name}}</td>\r\n                                <td *ngIf=\"act.unidadventa\" style=\"text-align:center\">\r\n                                    Unidades Totales para la Venta {{act.unidadventa.name}}\r\n                                </td>\r\n                                <td style=\"text-align:center\">% de perdida / consumo familiar</td>\r\n                                <td style=\"text-align:center\">Próxima cosecha</td>\r\n                                <td style=\"text-align:center\">Meses de producción</td>\r\n                                <td style=\"text-align:center\">Meses de no producción</td>\r\n                                <th style=\"text-align:center\">Total</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <td align=\"right\">${{lt.rendiemientolote}}</td>\r\n                                <td align=\"right\">${{lt.unidadestotales}}</td>\r\n                                <td align=\"right\">{{lt.perdida}}%</td>\r\n                                <td align=\"right\">{{equivalencia(lt.proxcocecha,'MesNombre')}}</td>\r\n                                <td align=\"right\">{{lt.cantmesescocecha}}</td>\r\n                                <td align=\"right\">{{lt.cantmesesnoproduccion}}</td>\r\n                                <td align=\"right\">${{lt.totalIngreso}}</td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n\r\n                    <!-- Egresos Transitorios -->\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colspan=12>Egresos Transitorios</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style=\"text-align:center\">Fase</th>\r\n                                <th style=\"text-align:center\">Descripción</th>\r\n                                <th style=\"text-align:center\">Detalle</th>\r\n                                <th style=\"text-align:center\">Cantidad</th>\r\n                                <th style=\"text-align:center\">Valor unitario</th>\r\n                                <th style=\"text-align:center\">Valor total mes</th>\r\n                                <th style=\"text-align:center\">Mes</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngFor=\"let egTrans of lt.egresosAdecuacion; let cont=index\">\r\n                            <tr>\r\n                                <th style=\"text-align:center\">Adecuación- preparación terreno</th>\r\n                                <td style=\"text-align:center\">\r\n                                    {{equivalencia(egTrans.descripcion,'descripcionegreso')}}\r\n                                </td>\r\n                                <td align=\"right\">{{egTrans.detalle}}</td>\r\n                                <td align=\"right\">{{egTrans.cantidad}}</td>\r\n                                <td align=\"right\">${{egTrans.valorunitario}}</td>\r\n                                <td align=\"right\">${{egTrans.total}}</td>\r\n                                <td align=\"right\">{{Mes(egTrans.mes)}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tbody *ngFor=\"let egTransSiem of lt.egresosSiembra; let cont=index\">\r\n                            <tr>\r\n                                <th style=\"text-align:center\">Siembra</th>\r\n                                <td style=\"text-align:center\">\r\n                                    {{equivalencia(egTransSiem.descripcion,'descripcionegreso')}}\r\n                                </td>\r\n                                <td align=\"right\">{{egTransSiem.detalle}}</td>\r\n                                <td align=\"right\">{{egTransSiem.cantidad}}</td>\r\n                                <td align=\"right\">${{egTransSiem.valorunitario}}</td>\r\n                                <td align=\"right\">${{egTransSiem.total}}</td>\r\n                                <td align=\"right\">{{Mes(egTransSiem.mes)}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tbody *ngFor=\"let egTransMan of lt.egresosMante; let cont=index\">\r\n                            <tr>\r\n                                <th style=\"text-align:center\">Mantenimiento</th>\r\n                                <td align=\"right\">{{equivalencia(egTransMan.descripcion,'descripcionegreso')}}</td>\r\n                                <td align=\"right\">{{egTransMan.detalle}}</td>\r\n                                <td align=\"right\">{{egTransMan.cantidad}}</td>\r\n                                <td align=\"right\">${{egTransMan.valorunitario}}</td>\r\n                                <td align=\"right\">${{egTransMan.total}}</td>\r\n                                <td align=\"right\">{{Mes(egTransMan.mes)}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tbody *ngFor=\"let egTransCos of lt.egresosCocecha; let cont=index\">\r\n                            <tr>\r\n                                <th style=\"text-align:center\">Cosecha y recolección</th>\r\n                                <td align=\"right\">{{equivalencia(egTransCos.descripcion,'descripcionegreso')}}</td>\r\n                                <td align=\"right\">{{egTransCos.detalle}}</td>\r\n                                <td align=\"right\">{{egTransCos.cantidad}}</td>\r\n                                <td align=\"right\">${{egTransCos.valorunitario}}</td>\r\n                                <td align=\"right\">${{egTransCos.total}}</td>\r\n                                <td align=\"right\">{{Mes(egTransCos.mes)}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tr>\r\n                            <th style=\"text-align:center\" colspan=5>Total</th>\r\n                            <td align=\"right\">${{totalegreso(act)}}</td>\r\n                            <td></td>\r\n\r\n                        </tr>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <!-- Permanente -->\r\n            <div *ngIf=\"act.nombre.tipoproducto=='Permanente'\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td style=\"text-align: center;\">\r\n                                <mat-icon class=\"mat-18\">local_florist</mat-icon>\r\n                            </td>\r\n                            <td colspan=\"5\">\r\n                                Actividad {{equivalencia(act.tipo,'TipoActividad')}} de <b>{{act.nombre.name}}</b>\r\n                            </td>\r\n                            <td style=\"text-align:center\">\r\n                                Tipo de producción: <b>{{act.nombre.tipoproducto}}</b>\r\n                            </td>\r\n                            <td style=\"text-align:center\"><b>Ingreso</b></td>\r\n                            <td style=\"text-align:center\">${{totalingreso(act)}}</td>\r\n                            <td style=\"text-align:center\"><b>Egreso</b></td>\r\n                            <td style=\"text-align:center\">${{totalegreso(act)}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"text-align:center\"><b>Unidad de venta</b></td>\r\n                            <td *ngIf=\"act.unidadventa\" colspan=3 style=\"text-align:center\">{{act.unidadventa.name}}</td>\r\n                            <td style=\"text-align:center\"><b>Precio minimo</b></td>\r\n                            <td style=\"text-align:center\">${{act.preciomin}}</td>\r\n                            <td style=\"text-align:center\"><b>Precio actual</b></td>\r\n                            <td colspan=2 style=\"text-align:center\">${{act.precioactual}}</td>\r\n                            <td style=\"text-align:center\"><b>Precio promedio</b></td>\r\n                            <td colspan=2 style=\"text-align:center\">${{act.preciopromedio}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style=\"text-align:center\">Cosecha</th>\r\n                            <td colspan=4 style=\"text-align:center\">{{Mes(act.mesCos)}}</td>\r\n                            <th style=\"text-align:center\">Traviesa</th>\r\n                            <td colspan=3 style=\"text-align:center\">{{Mes(act.mesTra)}}</td>\r\n                            <th style=\"text-align:center\">Pepeo</th>\r\n                            <td colspan=2 style=\"text-align:center\">{{Mes(act.mesPepeo)}}</td>\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n                <div *ngFor=\"let lte of act.lotesAgro; let cont=index\">\r\n                    <table>\r\n                        <tr>\r\n                            <th colspan=12>Lote {{cont+1}} </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style=\"text-align:center\">Edad del cultivo</th>\r\n                            <td style=\"text-align:center\">{{lte.edadcult}} {{equivalencia(lte.periodoedad,'Periodo')}}\r\n                            </td>\r\n                            <td style=\"text-align:center\"><b>Area cultivada</b></td>\r\n                            <td style=\"text-align:center\">{{lte.areacult}} m²</td>\r\n                            <td style=\"text-align:center\"><b>Distancia entre surcos</b></td>\r\n                            <td style=\"text-align:center\">{{lte.dsurcos}}</td>\r\n                            <td style=\"text-align:center\"><b>Distancia entre plantas</b></td>\r\n                            <td style=\"text-align:center\">{{lte.dplantas}}</td>\r\n                            <td style=\"text-align:center\"><b>Distancia entre siembra</b></td>\r\n                            <td style=\"text-align:center\">{{lte.diastancia}}</td>\r\n                            <td style=\"text-align:center\"><b># plantas/semillas del lote</b></td>\r\n                            <td style=\"text-align:center\">{{lte.planatasinformacli}}</td>\r\n                        </tr>\r\n                    </table>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th colspan=7>Ingreso Lote\r\n                                    <ng-container *ngIf=\"cont==0\">Principal</ng-container>\r\n                                    <ng-container *ngIf=\"cont>0\">{{cont+1}}</ng-container>\r\n                                    {{act.nombre.name}}\r\n                                </th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th style=\"text-align:center\">Ciclo</th>\r\n                                <th style=\"text-align:center\">Rendimiento por lote</th>\r\n                                <th style=\"text-align:center\">Unidades totales para la venta</th>\r\n                                <th style=\"text-align:center\">% de perdida/consumo familiar</th>\r\n                                <th style=\"text-align:center\">% ciclo</th>\r\n                                <th style=\"text-align:center\">TOTAL COSECHA</th>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td style=\"text-align:center\">Cosecha</td>\r\n                                <td style=\"text-align:center\">{{lte.rendimientoCos}}</td>\r\n                                <td style=\"text-align:center\">{{lte.unidadesCos}}</td>\r\n                                <td style=\"text-align:center\">{{lte.perdidaCos}}</td>\r\n                                <td style=\"text-align:center\">{{lte.procentageCos}}</td>\r\n                                <td style=\"text-align:right\">${{lte.totalCos}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center\">Traviesa</td>\r\n                                <td style=\"text-align:center\">{{lte.rendimientoTra}}</td>\r\n                                <td style=\"text-align:center\">{{lte.unidadesTra}}</td>\r\n                                <td style=\"text-align:center\">{{lte.perdidaTra}}</td>\r\n                                <td style=\"text-align:center\">{{lte.procentageTra}}</td>\r\n                                <td style=\"text-align:right\">${{lte.totalTra}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center\">Pepeo</td>\r\n                                <td style=\"text-align:center\">{{lte.rendimientoPepeo}}</td>\r\n                                <td style=\"text-align:center\">{{lte.unidadesPepeo}}</td>\r\n                                <td style=\"text-align:center\">{{lte.perdidaPepeo}}</td>\r\n                                <td style=\"text-align:center\">{{lte.procentagePepeo}}</td>\r\n                                <td style=\"text-align:right\">${{lte.totalPepeo}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td style=\"text-align:center\">Total anual</td>\r\n                                <td style=\"text-align:center\">{{lte.totalUnidades}}</td>\r\n                                <td style=\"text-align:center\">\r\n                                    {{totales(lte.unidadesPepeo,lte.unidadesTra,lte.unidadesCos)}}\r\n                                </td>\r\n                                <td style=\"text-align:center\">\r\n                                    {{totales(lte.perdidaPepeo,lte.perdidaTra,lte.perdidaCos)}}\r\n                                </td>\r\n                                <td style=\"text-align:center\">100</td>\r\n                                <td style=\"text-align:right\">${{lte.totalLoteAunual}}</td>\r\n                            </tr>\r\n\r\n                        </thead>\r\n                    </table>\r\n                    <!-- Egresos permanentes -->\r\n                    <table>\r\n                        <tr>\r\n                            <th colspan=7>Egresos Lote\r\n                                <ng-container *ngIf=\"cont==0\">Principal</ng-container>\r\n                                <ng-container *ngIf=\"cont>0\">{{cont+1}}</ng-container>\r\n                                {{act.nombre.name}}\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style=\"text-align:center\">Fase</th>\r\n                            <th style=\"text-align:center\">Descripcion</th>\r\n                            <th style=\"text-align:center\">Detalle</th>\r\n                            <th style=\"text-align:center\">Cantidad</th>\r\n                            <th style=\"text-align:center\">Vlr unitario</th>\r\n                            <th style=\"text-align:center\">Vlr total mes</th>\r\n                            <th style=\"text-align:center\">Mes</th>\r\n                        </tr>\r\n                        <tbody *ngFor=\"let egre of lte.egresosMante; let cont=index\">\r\n                            <tr>\r\n                                <td style=\"text-align:center\">Mantenimiento</td>\r\n                                <td style=\"text-align:center\">{{equivalencia(egre.descripcion,'descripcionegreso')}}\r\n                                </td>\r\n                                <td style=\"text-align:center\">{{egre.detalle}}</td>\r\n                                <td style=\"text-align:center\">{{egre.cantidad}}</td>\r\n                                <td style=\"text-align:right\">${{egre.valorunitario}}</td>\r\n                                <td style=\"text-align:right\">${{egre.total}}</td>\r\n                                <td style=\"text-align:center\">{{Mes(egre.mes)}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                        <tbody *ngFor=\"let egreCos of lte.egresosCocecha; let cont=index\">\r\n                            <tr>\r\n                                <td style=\"text-align:center\">Cosecha y recoleccion</td>\r\n                                <td style=\"text-align:center\">{{equivalencia(egreCos.descripcion,'descripcionegreso')}}\r\n                                </td>\r\n                                <td style=\"text-align:center\">{{egreCos.detalle}}</td>\r\n                                <td style=\"text-align:center\">{{egreCos.cantidad}}</td>\r\n                                <td style=\"text-align:right\">${{egreCos.valorunitario}}</td>\r\n                                <td style=\"text-align:right\">${{egreCos.total}}</td>\r\n                                <td style=\"text-align:center\">{{Mes(egreCos.mes)}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tr>\r\n                            <td colspan=\"5\" style=\"text-align:right\">Total</td>\r\n                            <td colspan=\"2\" style=\"text-align:right\">${{lte.totalEgresos}}</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <!--\r\n        .########..########..######..##.....##....###....########..####..#######.\r\n        .##.....##.##.......##....##.##.....##...##.##...##.....##..##..##.....##\r\n        .##.....##.##.......##.......##.....##..##...##..##.....##..##..##.....##\r\n        .########..######...##.......##.....##.##.....##.########...##..##.....##\r\n        .##........##.......##.......##.....##.#########.##...##....##..##.....##\r\n        .##........##.......##....##.##.....##.##.....##.##....##...##..##.....##\r\n        .##........########..######...#######..##.....##.##.....##.####..#######.\r\n        -->\r\n        <div *ngIf=\"act.tipo==2\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td style=\"text-align: center;\">\r\n                            <mat-icon class=\"mat-18\">pets</mat-icon>\r\n                        </td>\r\n                        <td colspan=\"4\">\r\n                            Actividad {{equivalencia(act.tipo,'TipoActividad')}} de <b>{{act.nombre.name}}</b>\r\n                        </td>\r\n                        <td style=\"text-align:center\">\r\n                            Tipo de producción: <b>{{act.nombre.tipoproducto}}</b>\r\n                        </td>\r\n                        <th style=\"text-align:center\">Ingreso</th>\r\n                        <td style=\"text-align:center\">{{totalingresoP(act)}}</td>\r\n                        <th style=\"text-align:center\">Egreso</th>\r\n                        <td style=\"text-align:center\">{{totalegresoP(act)}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Unidad de venta</th>\r\n                        <td colspan=\"3\" *ngIf=\"act.unidadventa\" style=\"text-align:center\">{{act.unidadventa.name}}</td>\r\n                        <th style=\"text-align:center\">Precio minimo</th>\r\n                        <td style=\"text-align:center\">${{act.preciomin}}</td>\r\n                        <th style=\"text-align:center\">Precio actual</th>\r\n                        <td style=\"text-align:center\">${{act.precioactual}}</td>\r\n                        <th style=\"text-align:center\">Precio promedio</th>\r\n                        <td style=\"text-align:center\">${{act.preciopromedio}}</td>\r\n\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <div *ngFor=\"let ltePec of act.lotesPecuario; let cont=index\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colspan=11>Lote\r\n                                <ng-container *ngIf=\"cont==0\">Principal</ng-container>\r\n                                <ng-container *ngIf=\"cont>0\">{{cont+1}}</ng-container>\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th colspan=11>Ingresos Lote\r\n                                <ng-container *ngIf=\"cont==0\">Principal</ng-container>\r\n                                <ng-container *ngIf=\"cont>0\">{{cont+1}}</ng-container>\r\n                                <ng-container *ngIf=\"act.nombre\">{{cont+1}}\r\n                                    {{act.nombre.name}}\r\n                                </ng-container>\r\n\r\n                            </th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th style=\"text-align:center\">Producto derivado</th>\r\n                            <th style=\"text-align:center\">Número de animales por lote</th>\r\n                            <th *ngIf=\"act.unidadventa\" style=\"text-align:center\">Cantidad producida por animal\r\n                                {{act.unidadventa.name}}</th>\r\n                            <th style=\"text-align:center\">Frecuencia</th>\r\n                            <th *ngIf=\"act.unidadventa\" style=\"text-align:center\">Cantidad producida total\r\n                                {{act.unidadventa.name}}</th>\r\n                            <th *ngIf=\"act.unidadventa\" style=\"text-align:center\">Unidades totales para la venta\r\n                                {{act.unidadventa.name}}</th>\r\n                            <th style=\"text-align:center\">% de mortalidad /perdida/consumo familiar</th>\r\n                            <th style=\"text-align:center\">Proximo mes de ingreso</th>\r\n                            <th style=\"text-align:center\">Meses de producción</th>\r\n                            <th style=\"text-align:center\">Meses de no produccion</th>\r\n                            <th style=\"text-align:center\">Total</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"text-align:center\">{{ltePec.prodderivado}}</td>\r\n                            <td style=\"text-align:center\">{{ltePec.numanimales}}</td>\r\n                            <td style=\"text-align:center\">{{ltePec.cantidadxanimal}}</td>\r\n                            <td style=\"text-align:center\" *ngIf=\"ltePec.frecuencia\">{{ltePec.frecuencia.name}}</td>\r\n                            <td style=\"text-align:center\">{{ltePec.cantproducida}}</td>\r\n                            <td style=\"text-align:center\">{{ltePec.unitotalesventa}}</td>\r\n                            <td style=\"text-align:center\">{{ltePec.perdida}}%</td>\r\n                            <td style=\"text-align:center\">{{equivalencia(ltePec.mesingreso,'MesNombre')}}</td>\r\n                            <td style=\"text-align:center\">{{ltePec.produccion}}</td>\r\n                            <td style=\"text-align:center\">{{ltePec.noproduccion}}</td>\r\n                            <td style=\"text-align:center\">{{ltePec.unitotalesventa}}</td>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                </table>\r\n                <!-- Egreso -->\r\n                <table>\r\n                    <tr>\r\n                        <th colspan=6>Egresos Lote\r\n                            <ng-container *ngIf=\"cont==0\">Principal</ng-container>\r\n                            <ng-container *ngIf=\"cont>0\">{{cont+1}}</ng-container>\r\n                            {{act.nombre.name}}\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Descripción</th>\r\n                        <th style=\"text-align:center\">Detalle</th>\r\n                        <th style=\"text-align:center\">Cantidad</th>\r\n                        <th style=\"text-align:center\">Valor unitario</th>\r\n                        <th style=\"text-align:center\">Valor total mes</th>\r\n                        <th style=\"text-align:center\">Mes</th>\r\n                    </tr>\r\n                    <tbody *ngFor=\"let egrePec of ltePec.egresos; let cont=index\">\r\n                        <tr>\r\n                            <td style=\"text-align:center\">\r\n                                {{equivalencia(egrePec.descripcion,'DescripcionEgresosPec')}}\r\n                            </td>\r\n                            <td style=\"text-align:center\">{{egrePec.detalle}}</td>\r\n                            <td style=\"text-align:center\">{{egrePec.cantidad}}</td>\r\n                            <td style=\"text-align:right\">${{egrePec.valorunitario}}</td>\r\n                            <td style=\"text-align:right\">${{egrePec.total}}</td>\r\n                            <td style=\"text-align:center\">{{Mes(egrePec.mes)}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tr>\r\n                        <th colspan=4 style=\"text-align:right\">Total</th>\r\n                        <td style=\"text-align:right\">${{ltePec.totalEgresos}}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n        <!--ventas buenas -->\r\n        <ng-container *ngIf=\"act.tipo==3\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <td style=\"text-align:center\">Actividad</td>\r\n                        <td style=\"text-align:center\">{{act.tipo}}</td>\r\n                        <td style=\"text-align:center\">Nombre de la actividad</td>\r\n                        <td style=\"text-align:center\">{{act.nombre}}</td>\r\n                        <td style=\"text-align:center\">Tipo de producción</td>\r\n                        <td style=\"text-align:center\">{{act.tipoproduccion}}</td>\r\n                        <td style=\"text-align:center\">Ingreso</td>\r\n                        <td style=\"text-align:center\">Mirar este 0</td>\r\n                        <td style=\"text-align:center\">Egreso</td>\r\n                        <td style=\"text-align:center\">;Mirar este 0</td>\r\n                    </tr>\r\n                </thead>\r\n            </table>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th colspan=10>Ventas buenas/ regulares/ malas</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align:center\">Ventas</td>\r\n                        <td style=\"text-align:center\">Dias</td>\r\n                        <td style=\"text-align:center\">Numero</td>\r\n                        <td style=\"text-align:center\">Dias</td>\r\n                        <td style=\"text-align:center\">Valor</td>\r\n                        <td style=\"text-align:center\">Total</td>\r\n                        <td style=\"text-align:center\">Total compras</td>\r\n                        <td colspan=3 style=\"text-align:center\"></td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td style=\"text-align:center\">Buenas</td>\r\n                        <td style=\"text-align:center\">{{act.diasB}}</td>\r\n                        <td style=\"text-align:center\"></td>\r\n                        <td style=\"text-align:center\">{{act.diasB}}</td>\r\n                        <td style=\"text-align:center\">${{act.valorB}}</td>\r\n                        <td style=\"text-align:center\">${{act.totalB}}</td>\r\n                        <td style=\"text-align:center\">Ventas estimadas</td>\r\n                        <td colspan=3 style=\"text-align:center\">{{act.ventasEstimadas}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align:center\">Regulares</td>\r\n                        <td style=\"text-align:center\">{{act.diasR}}</td>\r\n                        <td style=\"text-align:center\"></td>\r\n                        <td style=\"text-align:center\">{{act.diasR}}</td>\r\n                        <td style=\"text-align:center\">${{act.valorR}}</td>\r\n                        <td style=\"text-align:center\">${{act.totalR}}</td>\r\n                        <td style=\"text-align:center\">Margen bruto</td>\r\n                        <td colspan=3 style=\"text-align:center\">{{act.margenBruto}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style=\"text-align:center\">Malas</td>\r\n                        <td style=\"text-align:center\">{{act.diasM}}</td>\r\n                        <td style=\"text-align:center\"></td>\r\n                        <td style=\"text-align:center\">{{act.diasM}}</td>\r\n                        <td style=\"text-align:center\">${{act.valorM}}</td>\r\n                        <td style=\"text-align:center\">${{act.totalM}}</td>\r\n                        <td style=\"text-align:center\">Otros gastos</td>\r\n                        <td colspan=3 style=\"text-align:center\">{{act.otrosGastos}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th style=\"text-align:center\">Total</th>\r\n                        <td style=\"text-align:center\"></td>\r\n                        <td style=\"text-align:center\">{{act.totalDias}}</td>\r\n                        <td style=\"text-align:center\"></td>\r\n                        <td style=\"text-align:center\"></td>\r\n                        <td style=\"text-align:center\">${{act.totalVentas}}</td>\r\n                        <td style=\"text-align:center\">Ingreso liquido estimado</td>\r\n                        <td colspan=3 style=\"text-align:center\">{{act.ingresoLiquido}}</td>\r\n                    </tr>\r\n\r\n                </thead>\r\n            </table>\r\n        </ng-container>\r\n\r\n        <br>\r\n        <mat-divider></mat-divider>\r\n        <br>\r\n    </div>\r\n</div>","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Solicitud } from 'src/app/model/solicitud';\r\nimport { IdbSolicitudService } from '../admin/idb-solicitud.service';\r\nimport DataSelect from '../../data-select/dataselect.json';\r\nimport Utils from '../../utils';\r\nimport { CrucesAgro } from 'src/app/model/crucesagro';\r\n\r\n@Component({\r\n  selector: 'app-analisisagro',\r\n  templateUrl: './analisisagro.component.html',\r\n  styleUrls: ['./analisisagro.component.scss']\r\n})\r\nexport class AnalisisagroComponent implements OnInit {\r\n\r\n  @ViewChild('reporte') reporte: ElementRef\r\n  @Input() datossol: Solicitud\r\n\r\n  constructor(\r\n    private activeRoute: ActivatedRoute,\r\n    private sanitizer: DomSanitizer,\r\n    public srvSol: IdbSolicitudService\r\n  ) { }\r\n\r\n  datasolicitud: Solicitud = new Solicitud();\r\n  tipoAsesor: number;\r\n  fechahoy: string;\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    let hoy = new Date()\r\n    let mes: number = hoy.getMonth() + 1\r\n    this.fechahoy = hoy.getDate() + \"/\" + mes + \"/\" + hoy.getFullYear()\r\n\r\n    if (!this.datossol) {\r\n      this.activeRoute.queryParamMap.subscribe((params) => {\r\n        let ced = params.get('cedula')\r\n        this.srvSol.getSol(ced).subscribe((datasol) => {\r\n          this.datasolicitud = datasol as Solicitud;\r\n          this.tipoAsesor = this.datasolicitud.asesor;\r\n        })\r\n      });\r\n    } else {\r\n      this.datasolicitud = this.datossol\r\n      this.tipoAsesor = this.datasolicitud.asesor;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  transform(base) {\r\n    if (base != \"\") {\r\n      return this.sanitizer.bypassSecurityTrustResourceUrl(base);\r\n    } else {\r\n      return \"\"\r\n    }\r\n  }\r\n\r\n  equivalencia(id: string, lista: string) {\r\n\r\n    if (id == \"\") {\r\n      return \"\"\r\n    }\r\n    let texto = \"\"\r\n    switch (lista) {\r\n      case 'tipoinventario':\r\n        let inventario = DataSelect.TipoInventarioAgro.filter(i => i.id == id);\r\n        texto = inventario[0].name\r\n        break;\r\n      case 'MesNombre':\r\n        let Mes = DataSelect.Meses.filter(i => i.id == id);        \r\n        texto = Mes[0].name\r\n        break;\r\n      case 'TipoActividad':\r\n        let act = DataSelect.TipoActividadRural.filter(i => i.id == id);\r\n        texto = act[0].name\r\n        break;\r\n      case 'Periodo':\r\n        let periodo = DataSelect.PeriodoEdad.filter(i => i.id == id);\r\n        texto = periodo[0].name\r\n        break;\r\n      case 'Unidades':\r\n        let uni = DataSelect.Unidades.filter(i => i.id == id);\r\n        texto = uni[0].name\r\n        break;\r\n      case 'PeriodoEdad':\r\n        let priodo = DataSelect.PeriodoEdad.filter(i => i.id == id);\r\n        texto = priodo[0].name\r\n        break;\r\n      case 'tipoingreso':\r\n        let tipo = DataSelect.OtrosIngresosFamiliar.filter(i => i.id == id);\r\n        texto = tipo[0].name\r\n        break;\r\n      case 'descripcionegreso':\r\n        let deta = DataSelect.DetalleAgricola.filter(i => i.id == id);\r\n        texto = deta[0].name\r\n        break;\r\n      case 'DescripcionEgresosPec':\r\n        let descripcion = DataSelect.DetallePecuario.filter(i => i.id == id);\r\n        texto = descripcion[0].name\r\n        break;\r\n      default:\r\n        texto = \"\"\r\n        break;\r\n    }\r\n    return texto\r\n\r\n  }\r\n\r\n  totales(perdidaPepeo, perdidaTra, perdidaCos) {\r\n    return Utils.formatNumber(perdidaPepeo) + Utils.formatNumber(perdidaCos) + Utils.formatNumber(perdidaTra)\r\n  }\r\n\r\n  totalegreso(act: CrucesAgro) {\r\n    let totalegreso = 0\r\n    act.lotesAgro.forEach(loteA => {\r\n      loteA.egresosAdecuacion.forEach(eg => {\r\n        totalegreso += Utils.formatNumber(eg.total)\r\n      });\r\n      loteA.egresosCocecha.forEach(eg => {\r\n        totalegreso += Utils.formatNumber(eg.total)\r\n      });\r\n      loteA.egresosMante.forEach(eg => {\r\n        totalegreso += Utils.formatNumber(eg.total)\r\n      });\r\n      loteA.egresosSiembra.forEach(eg => {\r\n        totalegreso += Utils.formatNumber(eg.total)\r\n      });\r\n    });\r\n    return totalegreso.toLocaleString()\r\n  }\r\n  totalegresoP(act: CrucesAgro) {\r\n\r\n    let totalegreso = 0\r\n    act.lotesPecuario.forEach(loteP => {\r\n      loteP.egresos.forEach(eg => {\r\n        totalegreso += Utils.formatNumber(eg.total)\r\n      });\r\n    });\r\n    return totalegreso\r\n  }\r\n\r\n  totalingreso(act: CrucesAgro) {\r\n    let totalingreso = 0\r\n    act.lotesAgro.forEach(LoteA => {\r\n      totalingreso += Utils.formatNumber(LoteA.totalIngreso)\r\n    });\r\n    return totalingreso.toLocaleString()\r\n  }\r\n  totalingresoP(act: CrucesAgro) {\r\n    let totalingreso = 0\r\n    act.lotesPecuario.forEach(lotP => {\r\n      totalingreso += Utils.formatNumber(lotP.ingresomes)\r\n    });\r\n    return totalingreso.toLocaleString()\r\n  }\r\n\r\n  Mes(mes: []) {\r\n    let mesTexto = []\r\n    if (mes.length > 0) {\r\n      if (mes.length > 11) {\r\n        return \"Todo el Año\"\r\n      } else {\r\n        mes.forEach(m => {\r\n          mesTexto.push(Utils.changeMonth(m))\r\n        });\r\n        return mesTexto\r\n      }\r\n    } else {\r\n      return \"\"\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"content\" #reporte id=\"contentFlujo\">\r\n\r\n    <table>\r\n        <tr>\r\n            <td style=\"width: 200px;\" rowspan=\"3\" style=\"text-align:center\">\r\n                <img src=\"assets/pictures/Logo.png\">\r\n            </td>\r\n            <td colspan=\"5\" rowspan=\"3\" style=\"text-align:center\">Flujo de caja proyectado Agropecuario</td>\r\n            <td colspan=\"2\" style=\"text-align:center\">COL-FO-017</td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"2\" style=\"text-align:center\">Version 11</td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"2\" style=\"text-align:center\">12/04/2021</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Numero de solicitud</td>\r\n            <td>{{datasolicitud.solicitud}}</td>\r\n            <td>Numero de cedula</td>\r\n            <td>{{datasolicitud.cedula}}</td>\r\n            <td>Actividad Principal</td>\r\n            <td>{{actividadPrincipal}}</td>\r\n            <td>Fecha de estudio</td>\r\n            <td>{{fechahoy}}</td>\r\n        </tr>\r\n    </table>\r\n\r\n    <table class=\"salto\">\r\n        <thead>\r\n            <tr>\r\n                <th [attr.colspan]=\"cantidadTotalAct\" style=\"text-align:center\">Resumen proyectado de Ingresos y Egresos\r\n                    Agropecuarios</th>\r\n            </tr>\r\n            <tr>\r\n                <th rowspan=\"3\" colspan=\"3\">Producto</th>\r\n                <th [attr.colspan]=\"cantidadActividades\">Ingresos Act Agropecuaria</th>\r\n                <th rowspan=\"3\">Total Mensual</th>\r\n                <th [attr.colspan]=\"cantidadActividades\">Egresos Act Agropecuaria</th>\r\n                <th rowspan=\"3\">Total Mensual</th>\r\n            </tr>\r\n            <tr>\r\n\r\n                <th *ngFor=\"let act of datosCruces;let ac=index\">Actividad {{ac}}</th>\r\n                <th *ngFor=\"let act of datosCruces;let ac=index\">Costo {{ac}}</th>\r\n            </tr>\r\n            <tr>\r\n                <th *ngFor=\"let act of datosCruces\">{{act.nombre.name}}</th>\r\n                <th *ngFor=\"let act of datosCruces\">{{act.nombre.name}}</th>\r\n            </tr>\r\n        </thead>\r\n        <tr *ngFor=\"let item of dataFlujo;let j=index\">\r\n\r\n            <td *ngFor=\"let col of dataFlujo[0];let i=index \">\r\n                <ng-container *ngIf=\"i > 2\">\r\n                    {{item[i] | currency:'$': 'symbol' : '1.0-0'}}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"i <= 2\">\r\n                    {{item[i]}}\r\n                </ng-container>\r\n            </td>\r\n\r\n\r\n        </tr>\r\n    </table>\r\n    <table>\r\n        <tr>\r\n            <th style=\"text-align:center\">Flujo de caja acumulado</th>\r\n        </tr>\r\n    </table>\r\n    <ng-container *ngIf=\"datasolicitud.Propuesta\">\r\n\r\n        <table>\r\n            <tr>\r\n                <td>Plazo Total del Crédito Actual(MESES)</td>\r\n                <td>{{datasolicitud.Propuesta.plazo}}</td>\r\n                <td>Forma de Pago</td>\r\n                <td>\r\n                    <ng-container *ngIf=\"datasolicitud.Propuesta.tipocuota==1\">\r\n                        <ng-container *ngIf=\"datasolicitud.Propuesta.formapgo\">\r\n                            {{datasolicitud.Propuesta.formapgo.name}}\r\n                        </ng-container>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"datasolicitud.Propuesta.tipocuota==2\">\r\n                        Irregular\r\n                    </ng-container>\r\n                </td>\r\n                <td>Monto recomendado</td>\r\n                <td>{{datasolicitud.Propuesta.montorecomendado}}</td>\r\n                <td>Efectivo Disponible</td>\r\n                <td *ngIf=\"datasolicitud.Balance\"> {{datasolicitud.Balance.efectivo}} </td>\r\n                <td>Plan de Inversión (Activos Fijos)</td>\r\n                <td>{{datasolicitud.Propuesta.valor}}</td>\r\n                <td>{{datasolicitud.Propuesta.detalle}}</td>\r\n                <td>Plan de Inversión (capital de trabajo)</td>\r\n                <td>{{datasolicitud.Propuesta.valorcapital}}</td>\r\n                <td>{{datasolicitud.Propuesta.detallecapital}}</td>\r\n            </tr>\r\n        </table>\r\n    </ng-container>\r\n\r\n    <table class=\"salto\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 9%;\" colspan=\"3\">Proyección</th>\r\n                <th style=\"width: 13%;\">In. Agro Efectivo</th>\r\n                <th style=\"width: 13%;\">Recuperación de cartera (cuentas por cobrar)</th>\r\n                <th style=\"width: 13%;\">Costos Agro</th>\r\n                <th style=\"width: 13%;\">Remuneración personal</th>\r\n                <th style=\"width: 13%;\">Gastos del negocio</th>\r\n                <th style=\"width: 13%;\">Imprevistos Operativos</th>\r\n                <th style=\"width: 13%;\">Obligaciones Finacieras</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of dataFlujoAcumulado1\">\r\n                <td [ngClass]=\"{'error': i >2 && item[i] <0}\" *ngFor=\"let col of dataFlujoAcumulado1[0];let i=index\">\r\n                    <ng-container *ngIf=\"i > 2\">\r\n                        {{item[i] | currency:'$': 'symbol' : '1.0-0'}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"i <= 2\">\r\n                        {{item[i]}}\r\n                    </ng-container>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n\r\n    <table class=\"salto\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 9%;\" colspan=\"3\">Proyección</th>\r\n                <th style=\"width: 9%;\">Ingresos Líquidos Agropecuarios</th>\r\n                <th style=\"width: 9%;\">Ingresos Líquidos Otras actividades comerciales </th>\r\n                <th style=\"width: 9%;\">Otros Ingresos familiares (Independientes)</th>\r\n                <th style=\"width: 9%;\">Gastos y obligaciones familiares</th>\r\n                <th style=\"width: 9%;\">Flujo de caja antes financiación (sin acumular)</th>\r\n                <th style=\"width: 9%;\">Flujo de caja antes financiación acumulable 85%</th>\r\n                <th style=\"width: 9%;\">Cuota del crédito</th>\r\n                <th style=\"width: 9%;\">Flujo de caja descontando cuota de crédito</th>\r\n                <th style=\"width: 9%;\">Flujo de caja con financiación</th>\r\n                <th style=\"width: 9%;\">Relación cuota liquidez</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of dataFlujoAcumulado2\">\r\n                <td [ngClass]=\"{'error': i >2 && item[i] <0}\" *ngFor=\"let col of dataFlujoAcumulado2[0];let i=index\">\r\n                    <ng-container *ngIf=\"i > 2  && i < 12\">\r\n                        {{item[i] | currency:'$': 'symbol' : '1.0-0'}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"i <= 2\">\r\n                        {{item[i]}}\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"i == 12\">\r\n                        {{item[i]}} %\r\n                    </ng-container>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n\r\n</div>","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Solicitud } from 'src/app/model/solicitud';\r\nimport { IdbSolicitudService } from '../admin/idb-solicitud.service';\r\nimport DataSelect from '../../data-select/dataselect.json';\r\nimport { LoteAgro } from 'src/app/model/loteAgro';\r\nimport { CrucesAgro } from 'src/app/model/crucesagro';\r\nimport { LotePecuario } from 'src/app/model/lotePecuario';\r\nimport Utils from '../../utils';\r\nimport { utils } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-flujocaja',\r\n  templateUrl: './flujocaja.component.html',\r\n  styleUrls: ['./flujocaja.component.scss']\r\n})\r\n\r\nexport class FlujocajaComponent implements OnInit {\r\n\r\n  @Input() datossol: Solicitud\r\n  @ViewChild('reporte') reporte: ElementRef\r\n\r\n  constructor(\r\n    private activeRoute: ActivatedRoute,\r\n    public srvSol: IdbSolicitudService,\r\n  ) { }\r\n\r\n  datasolicitud: Solicitud = new Solicitud()\r\n  actividadPrincipal: string = \"\"\r\n  fechahoy: string;\r\n  dataFlujo: any[] = []\r\n  dataFlujoAcumulado: any[] = []\r\n  dataFlujoAcumulado1: any[] = []\r\n  dataFlujoAcumulado2: any[] = []\r\n  cantidadActividades: number = 0;\r\n  cantidadTotalAct: number = 0;\r\n  meses: any = DataSelect.Meses;\r\n  datosCruces: CrucesAgro[]\r\n\r\n  ced: string;\r\n  datasol: any;\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.activeRoute.queryParamMap\r\n      .subscribe(\r\n        (params) => {\r\n          this.ced = params.get('cedula')\r\n        }\r\n      )\r\n\r\n    const obtenerSol = () => {\r\n      if (!this.datossol) {\r\n        return new Promise(resolve => {\r\n          this.srvSol.getSol(this.ced).subscribe(\r\n            (datasol) => {\r\n              return resolve(datasol)\r\n            }\r\n          )\r\n        })\r\n      } else {\r\n        this.ced = this.datossol.solicitud.toString()\r\n        return this.datossol\r\n      }\r\n    }\r\n\r\n    const afterInit = async () => {\r\n      let hoy = new Date()\r\n      let meshoy: number = hoy.getMonth() + 1\r\n      this.fechahoy = hoy.getDate() + \"/\" + meshoy + \"/\" + hoy.getFullYear()\r\n      this.datasolicitud = await obtenerSol() as Solicitud\r\n      if (this.datasolicitud.CrucesAgro) {\r\n        this.actividadPrincipal = this.datasolicitud.CrucesAgro[0].nombre.name\r\n        this.cantidadActividades = this.datasolicitud.CrucesAgro.filter(cr => cr.tipo != 3 && cr.tipo != 0).length\r\n        this.datosCruces = this.datasolicitud.CrucesAgro.filter(cr => cr.tipo != 3 && cr.tipo != 0)\r\n      }\r\n\r\n      let mesingreso = this.meses.slice();\r\n      mesingreso.splice(0, meshoy);\r\n\r\n      if (this.datasolicitud.Propuesta) {\r\n        let planinversion = Utils.formatNumber(this.datasolicitud.Propuesta.valorcapital)\r\n        let cantidadValores = []\r\n        this.datasolicitud.CrucesAgro.forEach(act => {\r\n          if (act.tipo != 0 && act.tipo != 3) {\r\n            cantidadValores.push(0)\r\n          }\r\n        });\r\n        this.datasolicitud.CrucesAgro.forEach(act => {\r\n          if (act.tipo != 0 && act.tipo != 3) {\r\n            cantidadValores.push(0)\r\n          }\r\n        });\r\n\r\n        //-Construccion de la proyeccion segun el plazo\r\n        for (let i = 1; i <= this.datasolicitud.Propuesta.plazo; i++) {\r\n          let mes: any = mesingreso.shift();\r\n          let columnas = [i, mes.id, mes.name, 0, 0].concat(cantidadValores)\r\n          let columnasAcomu = [i, mes.id, mes.name, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n          this.dataFlujo.push(columnas)\r\n          this.dataFlujoAcumulado.push(columnasAcomu)\r\n          if (mesingreso.length == 0) {\r\n            mesingreso = this.meses.slice();\r\n          }\r\n        }\r\n\r\n        this.cantidadTotalAct = this.dataFlujo.length\r\n        //-Actividades\r\n        for (let cr = 0; cr < this.datasolicitud.CrucesAgro.length; cr++) {\r\n          let cruce: CrucesAgro = this.datasolicitud.CrucesAgro[cr];\r\n          if (cruce.tipo != 0 && cruce.tipo != 3) {\r\n            let totalingresos = 0\r\n            let totalegresos = 0\r\n\r\n            //-Posicion de las columnas ingresos\r\n            let columnIngreso = cr + 3\r\n            let columnaTotalIngresos = this.cantidadActividades + 3\r\n\r\n            //-Posicion de las columnas Egresos\r\n            let columnEgresos = columnaTotalIngresos + cr + 1\r\n            let columnaTotalEgreos = columnaTotalIngresos + this.cantidadActividades + 1\r\n\r\n            for (let flujocaja = 0; flujocaja < this.dataFlujo.length; flujocaja++) {\r\n              const flujo = this.dataFlujo[flujocaja];\r\n              totalingresos = 0\r\n              // ---------------- pecuario ----------------------------------\r\n              for (let lote = 0; lote < cruce.lotesPecuario.length; lote++) {\r\n                let lotesP: LotePecuario = cruce.lotesPecuario[lote];\r\n                totalegresos = 0\r\n                //----------------------------Egresos---------------------------------\r\n                if (lotesP.egresos) {\r\n                  for (let eg = 0; eg < lotesP.egresos.length; eg++) {\r\n                    const egreso = lotesP.egresos[eg];\r\n\r\n                    for (let me = 0; me < egreso.mes.length; me++) {\r\n                      const mes = egreso.mes[me];\r\n                      if (flujo[1] == mes) {\r\n\r\n                        totalegresos = Utils.formatNumber(egreso.total)\r\n                        let egresospas = Utils.formatNumber(this.dataFlujo[flujocaja][columnEgresos])\r\n                        this.dataFlujo[flujocaja][columnEgresos] = totalegresos + egresospas;\r\n\r\n                        let totalMesegresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalEgreos])\r\n                        this.dataFlujo[flujocaja][columnaTotalEgreos] = (totalMesegresos + totalegresos)\r\n\r\n\r\n                        let totalEgAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][5])\r\n                        this.dataFlujoAcumulado[flujocaja][5] = (totalEgAcumu + totalegresos)\r\n\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n\r\n              // ---------------- agricola ----------------------------------\r\n              //-Permanente\r\n              if (cruce.nombre.tipoproducto == \"Permanente\") {\r\n                let totalCosecha = 0\r\n                let totalTraviesa = 0\r\n                let totalPepeo = 0\r\n\r\n                //-------------------Ingresos---------------------------------\r\n                for (let index = 0; index < cruce.lotesAgro.length; index++) {\r\n                  const lote = cruce.lotesAgro[index];\r\n                  totalCosecha += Utils.formatNumber(lote.totalCos);\r\n                  totalTraviesa += Utils.formatNumber(lote.totalTra);\r\n                  totalPepeo += Utils.formatNumber(lote.totalPepeo);\r\n                }\r\n\r\n                let cantMesCos = cruce.mesCos.length\r\n                let cantMesTra = cruce.mesTra.length\r\n                let cantMesPepeo = cruce.mesPepeo.length\r\n\r\n                let valorMesCos = totalCosecha / cantMesCos\r\n                let valorMesTra = totalTraviesa / cantMesTra\r\n                let valorMesPepeo = totalPepeo / cantMesPepeo\r\n\r\n                if (cruce.mesCos) {\r\n                  cruce.mesCos.forEach(mesC => {\r\n                    if (flujo[1] == mesC) {\r\n                      let totalmes = Utils.formatNumber(this.dataFlujo[flujocaja][columnIngreso])\r\n                      this.dataFlujo[flujocaja][columnIngreso] = (totalmes + valorMesCos)\r\n\r\n                      let totalMesingresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalIngresos])\r\n                      this.dataFlujo[flujocaja][columnaTotalIngresos] = (totalMesingresos + valorMesCos)\r\n\r\n                      let totalIngAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][3])\r\n                      this.dataFlujoAcumulado[flujocaja][3] = (valorMesCos + totalIngAcumu)\r\n                    }\r\n                  });\r\n                }\r\n                if (cruce.mesTra) {\r\n                  cruce.mesTra.forEach(mes => {\r\n                    if (flujo[1] == mes) {\r\n                      let totalmes = Utils.formatNumber(this.dataFlujo[flujocaja][columnIngreso])\r\n                      this.dataFlujo[flujocaja][columnIngreso] = (totalmes + valorMesTra)\r\n\r\n                      let totalMesingresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalIngresos])\r\n                      this.dataFlujo[flujocaja][columnaTotalIngresos] = (totalMesingresos + valorMesTra)\r\n\r\n                      let totalIngAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][3])\r\n                      this.dataFlujoAcumulado[flujocaja][3] = (valorMesTra + totalIngAcumu)\r\n                    }\r\n                  });\r\n                }\r\n                if (cruce.mesPepeo) {\r\n                  cruce.mesPepeo.forEach(mes => {\r\n                    if (flujo[1] == mes) {\r\n                      let totalmes = Utils.formatNumber(this.dataFlujo[flujocaja][columnIngreso])\r\n                      this.dataFlujo[flujocaja][columnIngreso] = (totalmes + valorMesPepeo)\r\n\r\n                      let totalMesingresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalIngresos])\r\n                      this.dataFlujo[flujocaja][columnaTotalIngresos] = (totalMesingresos + valorMesPepeo)\r\n\r\n                      let totalIngAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][3])\r\n                      this.dataFlujoAcumulado[flujocaja][3] = (valorMesPepeo + totalIngAcumu)\r\n                    }\r\n                  });\r\n                }\r\n\r\n                // -------------------Egresos------------------------------------\r\n                for (let index = 0; index < cruce.lotesAgro.length; index++) {\r\n                  const lote = cruce.lotesAgro[index];\r\n                  totalegresos = 0\r\n                  //-Adecuacion\r\n                  if (lote.egresosAdecuacion) {\r\n                    for (let eg = 0; eg < lote.egresosAdecuacion.length; eg++) {\r\n                      const egreso = lote.egresosAdecuacion[eg];\r\n                      for (let me = 0; me < egreso.mes.length; me++) {\r\n                        const mes = egreso.mes[me];\r\n                        if (flujo[1] == mes) {\r\n\r\n                          totalegresos = Utils.formatNumber(egreso.total);\r\n                          this.dataFlujo[flujocaja][columnEgresos] = totalegresos;\r\n\r\n                          let totalMesegresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalEgreos])\r\n                          this.dataFlujo[flujocaja][columnaTotalEgreos] = (totalMesegresos + totalegresos)\r\n\r\n                          let totalIngAcumu = Utils.formatNumber(this.dataFlujo[flujocaja][3])\r\n                          this.dataFlujoAcumulado[flujocaja][3] = (totalegresos + totalIngAcumu)\r\n\r\n                          let totalEgAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][5])\r\n                          this.dataFlujoAcumulado[flujocaja][5] = (totalEgAcumu + totalegresos)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  //-Mantenimiento\r\n                  if (lote.egresosMante) {\r\n                    for (let eg = 0; eg < lote.egresosMante.length; eg++) {\r\n                      const egreso = lote.egresosMante[eg];\r\n                      for (let me = 0; me < egreso.mes.length; me++) {\r\n                        const mes = egreso.mes[me];\r\n                        if (flujo[1] == mes) {\r\n                          totalegresos = Utils.formatNumber(egreso.total)\r\n                          this.dataFlujo[flujocaja][columnEgresos] = totalegresos\r\n\r\n                          let totalMesegresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalEgreos])\r\n                          this.dataFlujo[flujocaja][columnaTotalEgreos] = (totalMesegresos + totalegresos)\r\n\r\n                          let totalEgAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][5])\r\n                          this.dataFlujoAcumulado[flujocaja][5] = (totalegresos + totalEgAcumu)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  //-Siembra\r\n                  if (lote.egresosSiembra) {\r\n                    for (let eg = 0; eg < lote.egresosSiembra.length; eg++) {\r\n                      const egreso = lote.egresosSiembra[eg];\r\n                      for (let me = 0; me < egreso.mes.length; me++) {\r\n                        const mes = egreso.mes[me];\r\n                        if (flujo[1] == mes) {\r\n                          totalegresos = Utils.formatNumber(egreso.total)\r\n                          this.dataFlujo[flujocaja][columnEgresos] = totalegresos\r\n\r\n                          let totalMesegresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalEgreos])\r\n                          this.dataFlujo[flujocaja][columnaTotalEgreos] = (totalMesegresos + totalegresos)\r\n\r\n                          let totalEgAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][5])\r\n                          this.dataFlujoAcumulado[flujocaja][5] = (totalegresos + totalEgAcumu)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  //-Cosecha\r\n                  if (lote.egresosCocecha) {\r\n                    for (let eg = 0; eg < lote.egresosCocecha.length; eg++) {\r\n                      const egreso = lote.egresosCocecha[eg];\r\n                      for (let me = 0; me < egreso.mes.length; me++) {\r\n                        const mes = egreso.mes[me];\r\n                        if (flujo[1] == mes) {\r\n                          totalegresos = Utils.formatNumber(egreso.total)\r\n                          this.dataFlujo[flujocaja][columnEgresos] = totalegresos\r\n\r\n                          let totalMesegresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalEgreos])\r\n                          this.dataFlujo[flujocaja][columnaTotalEgreos] = (totalMesegresos + totalegresos)\r\n\r\n                          let totalEgAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][5])\r\n                          this.dataFlujoAcumulado[flujocaja][5] = (totalegresos + totalEgAcumu)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n\r\n              }\r\n            }\r\n            //Agricola transitorio\r\n            if (cruce.nombre.tipoproducto == \"Transitorio\") {\r\n\r\n              for (let lote = 0; lote < cruce.lotesAgro.length; lote++) {\r\n                let lotesA: LoteAgro = cruce.lotesAgro[lote];\r\n\r\n                let mesprod = 0\r\n                let mesnoprod = 0\r\n                let flag = true\r\n\r\n                for (let flujocaja = 0; flujocaja < this.dataFlujo.length; flujocaja++) {\r\n                  const flujo = this.dataFlujo[flujocaja];\r\n                  // -------------------Ingresos------------------------------------\r\n                  let totalingresos = Utils.formatNumber(lotesA.totalIngreso)\r\n                  let proxcosecha = Utils.formatNumber(lotesA.proxcocecha)\r\n                  let cantcosecha = Utils.formatNumber(lotesA.cantmesescocecha)\r\n\r\n                  if (flujo[1] >= proxcosecha && flag) {\r\n                    mesprod = Utils.formatNumber(lotesA.cantmesescocecha)\r\n                    mesnoprod = Utils.formatNumber(lotesA.cantmesesnoproduccion)\r\n                    flag = false\r\n                  }\r\n                  let totalmes = totalingresos / cantcosecha\r\n\r\n\r\n                  if (!flag) {\r\n                    if (mesprod > 0) {\r\n\r\n                      let sumatoriaTotalmes = Utils.formatNumber(this.dataFlujo[flujocaja][columnIngreso])\r\n                      this.dataFlujo[flujocaja][columnIngreso] = (sumatoriaTotalmes + totalmes)\r\n\r\n                      let totalMesingresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalIngresos])\r\n                      this.dataFlujo[flujocaja][columnaTotalIngresos] = (totalMesingresos + totalmes)\r\n\r\n                      let totalIngAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][3])\r\n                      this.dataFlujoAcumulado[flujocaja][3] = (totalmes + totalIngAcumu)\r\n\r\n                      mesprod--\r\n                    } else if (mesnoprod > 0) {\r\n                      let sumatoriaTotalmes = Utils.formatNumber(this.dataFlujo[flujocaja][columnIngreso])\r\n                      this.dataFlujo[flujocaja][columnIngreso] = (sumatoriaTotalmes)\r\n                      mesnoprod--\r\n                      if (mesprod == 0 && mesnoprod == 0) {\r\n                        mesprod = Utils.formatNumber(lotesA.cantmesescocecha)\r\n                        mesnoprod = Utils.formatNumber(lotesA.cantmesesnoproduccion)\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  // -------------------Egresos------------------------------------\r\n                  let columnEgresos = columnaTotalIngresos + cr + 1\r\n                  let columnaTotalEgreos = columnaTotalIngresos + this.cantidadActividades + 1\r\n                  //-Adecuacion\r\n                  if (lotesA.egresosAdecuacion) {\r\n                    for (let eg = 0; eg < lotesA.egresosAdecuacion.length; eg++) {\r\n                      const egreso = lotesA.egresosAdecuacion[eg];\r\n                      for (let me = 0; me < egreso.mes.length; me++) {\r\n                        const mes = egreso.mes[me];\r\n                        if (flujo[1] == mes) {\r\n                          totalegresos += Utils.formatNumber(egreso.total);\r\n                          this.dataFlujo[flujocaja][columnEgresos] = totalegresos;\r\n                          let totalMesegresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalEgreos])\r\n                          this.dataFlujo[flujocaja][columnaTotalEgreos] = (totalMesegresos + totalegresos)\r\n\r\n                          let totalEgAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][5])\r\n                          this.dataFlujoAcumulado[flujocaja][5] = (totalegresos + totalEgAcumu)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  //-Mantenimiento\r\n                  if (lotesA.egresosMante) {\r\n                    for (let eg = 0; eg < lotesA.egresosMante.length; eg++) {\r\n                      const egreso = lotesA.egresosMante[eg];\r\n                      for (let me = 0; me < egreso.mes.length; me++) {\r\n                        const mes = egreso.mes[me];\r\n                        if (flujo[1] == mes) {\r\n                          totalegresos += Utils.formatNumber(egreso.total)\r\n                          this.dataFlujo[flujocaja][columnEgresos] = totalegresos\r\n                          let totalMesegresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalEgreos])\r\n                          this.dataFlujo[flujocaja][columnaTotalEgreos] = (totalMesegresos + totalegresos)\r\n\r\n                          let totalEgAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][5])\r\n                          this.dataFlujoAcumulado[flujocaja][5] = (totalegresos + totalEgAcumu)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  //-Siembra\r\n                  if (lotesA.egresosSiembra) {\r\n                    for (let eg = 0; eg < lotesA.egresosSiembra.length; eg++) {\r\n                      const egreso = lotesA.egresosSiembra[eg];\r\n                      for (let me = 0; me < egreso.mes.length; me++) {\r\n                        const mes = egreso.mes[me];\r\n                        if (flujo[1] == mes) {\r\n                          totalegresos += Utils.formatNumber(egreso.total)\r\n                          this.dataFlujo[flujocaja][columnEgresos] = totalegresos\r\n                          let totalMesegresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalEgreos])\r\n                          this.dataFlujo[flujocaja][columnaTotalEgreos] = (totalMesegresos + totalegresos)\r\n\r\n                          let totalEgAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][5])\r\n                          this.dataFlujoAcumulado[flujocaja][5] = (totalegresos + totalEgAcumu)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                  //-Cosecha\r\n                  if (lotesA.egresosCocecha) {\r\n                    for (let eg = 0; eg < lotesA.egresosCocecha.length; eg++) {\r\n                      const egreso = lotesA.egresosCocecha[eg];\r\n                      for (let me = 0; me < egreso.mes.length; me++) {\r\n                        const mes = egreso.mes[me];\r\n                        if (flujo[1] == mes) {\r\n                          totalegresos += Utils.formatNumber(egreso.total)\r\n                          this.dataFlujo[flujocaja][columnEgresos] = totalegresos\r\n                          let totalMesegresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalEgreos])\r\n                          this.dataFlujo[flujocaja][columnaTotalEgreos] = (totalMesegresos + totalegresos)\r\n\r\n                          let totalEgAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][5])\r\n                          this.dataFlujoAcumulado[flujocaja][5] = (totalegresos + totalEgAcumu)\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n\r\n              }\r\n            }\r\n\r\n            //Pecuario Ingresos\r\n            // -------------------Ingresos------------------------------------\r\n            for (let lote = 0; lote < cruce.lotesPecuario.length; lote++) {\r\n              let lotesP: LotePecuario = cruce.lotesPecuario[lote];\r\n              let flagp = true\r\n\r\n              let produccion = 0\r\n              let noproduccion = 0\r\n\r\n              for (let flujocaja = 0; flujocaja < this.dataFlujo.length; flujocaja++) {\r\n                const flujo = this.dataFlujo[flujocaja];\r\n\r\n                let totalingresos = Utils.formatNumber(lotesP.ingresomes)\r\n                let mesingreso = Utils.formatNumber(lotesP.mesingreso)\r\n\r\n                if (flujo[1] >= mesingreso && flagp) {\r\n                  produccion = Utils.formatNumber(lotesP.produccion)\r\n                  noproduccion = Utils.formatNumber(lotesP.noproduccion)\r\n                  flagp = false\r\n                }\r\n\r\n                if (!flagp) {\r\n                  if (produccion > 0) {\r\n\r\n                    let sumatoriaTotalmes = Utils.formatNumber(this.dataFlujo[flujocaja][columnIngreso])\r\n                    this.dataFlujo[flujocaja][columnIngreso] = (sumatoriaTotalmes + totalingresos)\r\n\r\n                    let totalMesingresos = Utils.formatNumber(this.dataFlujo[flujocaja][columnaTotalIngresos])\r\n                    this.dataFlujo[flujocaja][columnaTotalIngresos] = (totalMesingresos + totalingresos)\r\n\r\n                    let totalIngAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][3])\r\n                    this.dataFlujoAcumulado[flujocaja][3] = (totalingresos + totalIngAcumu)\r\n\r\n                    produccion--\r\n                  } else if (noproduccion > 0) {\r\n\r\n                    let sumatoriaTotalmes = Utils.formatNumber(this.dataFlujo[flujocaja][columnIngreso])\r\n                    this.dataFlujo[flujocaja][columnIngreso] = sumatoriaTotalmes\r\n\r\n                    let totalIngAcumu = Utils.formatNumber(this.dataFlujoAcumulado[flujocaja][3])\r\n                    this.dataFlujoAcumulado[flujocaja][3] = (totalIngAcumu)\r\n\r\n                    noproduccion--\r\n                    if (produccion == 0 && noproduccion == 0) {\r\n                      produccion = Utils.formatNumber(lotesP.produccion)\r\n                      noproduccion = Utils.formatNumber(lotesP.noproduccion)\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        let primerano: boolean = true\r\n        let totalRec = 0\r\n\r\n        let totalRemuneracion = 0\r\n        let efectivo = 0\r\n        let totalGastosN = 0\r\n        let totalGastosF = 0\r\n        let totalObligaciones = 0\r\n        let totalObligacionesF = 0\r\n        let totalOtrosIngresos = 0\r\n        //Existe gastos\r\n        if (this.datasolicitud.Gastos) {\r\n          totalRemuneracion = Utils.formatNumber(this.datasolicitud.Gastos.totalRemuneracion)\r\n          totalGastosN = Utils.formatNumber(this.datasolicitud.Gastos.totalN)\r\n          totalGastosF = Utils.formatNumber(this.datasolicitud.Gastos.totalF)\r\n          totalOtrosIngresos = Utils.formatNumber(this.datasolicitud.Gastos.totalOtros)\r\n          totalRec = this.datasolicitud.Balance.recuperacion.length - 1\r\n        }\r\n        //-Existe Balance\r\n        if (this.datasolicitud.Balance) {\r\n          efectivo = Utils.formatNumber(this.datasolicitud.Balance.efectivo)\r\n          totalObligaciones = Utils.formatNumber(this.datasolicitud.Balance.tcuotan)\r\n          totalObligacionesF = Utils.formatNumber(this.datasolicitud.Balance.tcuotaf)\r\n        }\r\n\r\n        //-Ingresos Líquidos Otras actividades comerciales\r\n        let totalIngresos = 0\r\n        if (this.datasolicitud.CrucesAgro) {\r\n          for (let cru = 0; cru < this.datasolicitud.CrucesAgro.length; cru++) {\r\n            const cruce = this.datasolicitud.CrucesAgro[cru];\r\n            if (cruce.tipo == 3) {\r\n              totalIngresos += Utils.formatNumber(cruce.ingresoLiquido)\r\n            }\r\n          }\r\n        }\r\n        if (this.datasolicitud.Balance) {\r\n\r\n          for (let p = 0; p < this.datasolicitud.Balance.pasivosRows.length; p++) {\r\n            const pas = this.datasolicitud.Balance.pasivosRows[p];\r\n            if (pas.tipo && pas.clase) {\r\n\r\n              let periodoint = pas.periodoint\r\n              let periodocap = pas.periodocap\r\n              let cantida = pas.plazo - pas.cuota\r\n              let primermesint = false\r\n              let primermescap = false\r\n\r\n              if (pas.clase == 2 && pas.tipo.id == 7) {\r\n                if (pas.pago == 1) {\r\n\r\n                  for (let f = 0; f < this.dataFlujoAcumulado.length; f++) {\r\n                    if (cantida > 0) {\r\n                      cantida--\r\n                      let addmonth = f + 1\r\n                      var fechahyo = new Date()\r\n                      var fechacrece = new Date(fechahyo.setMonth(fechahyo.getMonth() + addmonth));\r\n\r\n                      let mesFlujo = fechacrece.getMonth()\r\n                      let anoFlujo = fechacrece.getFullYear()\r\n\r\n                      let mesint = pas.fechaproxint.getMonth()\r\n                      var calculoint = Utils.formatNumber(pas.calculoint)\r\n                      let totalint = Utils.formatNumber(this.dataFlujoAcumulado[f][9])\r\n\r\n                      if (!primermesint) {\r\n                        if (mesFlujo >= mesint) {\r\n                          primermesint = true\r\n                        }\r\n                      }\r\n                      if (primermesint) {\r\n                        if (periodoint.id == 1) {\r\n                          this.dataFlujoAcumulado[f][9] = totalint + calculoint\r\n                        } else if (periodoint.id == 2 && f % 2 == 0) {\r\n                          this.dataFlujoAcumulado[f][9] = totalint + calculoint\r\n                        } else if (periodoint.id == 3 && f % 3 == 0) {\r\n                          this.dataFlujoAcumulado[f][9] = totalint + calculoint\r\n                        }\r\n                      }\r\n\r\n                      let totalcap = Utils.formatNumber(this.dataFlujoAcumulado[f][9])\r\n                      let mescap = pas.fechaproxcap.getMonth()\r\n                      var calculocap = Utils.formatNumber(pas.calculocap)\r\n                      if (!primermescap) {\r\n                        if (mesFlujo >= mescap) {\r\n                          primermescap = true\r\n                        }\r\n                      }\r\n\r\n                      if (primermescap) {\r\n                        if (periodocap.id == 1) {\r\n                          this.dataFlujoAcumulado[f][9] = totalcap + calculocap\r\n                        } else if (periodocap.id == 2 && f % 2 == 0) {\r\n                          this.dataFlujoAcumulado[f][9] = totalcap + calculocap\r\n                        } else if (periodocap.id == 3 && f % 3 == 0) {\r\n                          this.dataFlujoAcumulado[f][9] = totalcap + calculocap\r\n                        }\r\n                      }\r\n\r\n                    }\r\n                  }\r\n                } else if (pas.pago == 2) {\r\n\r\n                  for (let f = 0; f < this.dataFlujoAcumulado.length; f++) {\r\n\r\n                    let addmonth = f + 1\r\n                    var fechahyo = new Date()\r\n                    var fechacrece = new Date(fechahyo.setMonth(fechahyo.getMonth() + addmonth));\r\n                    let totalacomula = Utils.formatNumber(this.dataFlujoAcumulado[f][9])\r\n                    let mesFlujo = fechacrece.getMonth()\r\n                    let anoFlujo = fechacrece.getFullYear()\r\n\r\n                    for (let ir = 0; ir < pas.cuotasRow.length; ir++) {\r\n                      const item = pas.cuotasRow[ir];\r\n                      if (item.fecha) {\r\n                        let mes = item.fecha.getMonth()\r\n                        let ano = item.fecha.getFullYear()\r\n\r\n                        if (mesFlujo == mes && ano == anoFlujo) {\r\n                          console.log(mes)\r\n                          this.dataFlujoAcumulado[f][9] = Utils.formatNumber(item.cuota) + totalacomula\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        let primermes = true;\r\n        let primermes1 = true;\r\n        let primermes2 = true;\r\n        for (let f = 0; f < this.dataFlujoAcumulado.length; f++) {\r\n          const flujo = this.dataFlujoAcumulado[f];\r\n\r\n          let addmonth = f + 1\r\n          var fechahyo = new Date()\r\n          var fechacrece = new Date(fechahyo.setMonth(fechahyo.getMonth() + addmonth));\r\n\r\n          //-Existe Balance\r\n          if (this.datasolicitud.Balance) {\r\n            //Solo aplica para el primer año\r\n            if (primerano) {\r\n              for (let b = 0; b < this.datasolicitud.Balance.recuperacion.length; b++) {\r\n                const recuperacion = this.datasolicitud.Balance.recuperacion[b];\r\n                if (recuperacion.mes == flujo[1]) {\r\n                  this.dataFlujoAcumulado[f][4] = Utils.formatNumber(recuperacion.valor)\r\n                  if (totalRec == b) {\r\n                    primerano = false\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n          }\r\n\r\n          //Remuneracion de personal\r\n          this.dataFlujoAcumulado[f][6] = totalRemuneracion\r\n\r\n          //Existe gastos\r\n          if (this.datasolicitud.Gastos) {\r\n            //-gastos estacionales del negocio\r\n            let totalEstacionalN = 0\r\n            for (let g = 0; g < this.datasolicitud.Gastos.estacionalesN.length; g++) {\r\n              const estacional = this.datasolicitud.Gastos.estacionalesN[g];\r\n\r\n              for (let i = 0; i < estacional.mes.length; i++) {\r\n                const me = estacional.mes[i]\r\n                if (me == flujo[1]) {\r\n                  totalEstacionalN += Utils.formatNumber(estacional.valor);\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            //-gastos estacionales de familiares\r\n            let totalEstacionalF = 0\r\n            for (let g = 0; g < this.datasolicitud.Gastos.estacionalesF.length; g++) {\r\n              const estacional = this.datasolicitud.Gastos.estacionalesF[g];\r\n              for (let i = 0; i < estacional.mes.length; i++) {\r\n                const me = estacional.mes[i]\r\n                if (me == flujo[1]) {\r\n                  totalEstacionalF += Utils.formatNumber(estacional.valor);\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n\r\n            this.dataFlujoAcumulado[f][7] = (totalEstacionalN + totalGastosN)\r\n            this.dataFlujoAcumulado[f][13] = (totalEstacionalF + totalGastosF + totalObligacionesF)\r\n          }\r\n\r\n          //Imprevistos Operativos\r\n          let costos = Utils.formatNumber(this.dataFlujoAcumulado[f][5])\r\n          let imprevistos = costos * 0.1\r\n          this.dataFlujoAcumulado[f][8] = imprevistos\r\n\r\n          //Obligaciones Finacieras\r\n          let valorObligaciones = Utils.formatNumber(this.dataFlujoAcumulado[f][9])\r\n          this.dataFlujoAcumulado[f][9] = valorObligaciones + totalObligaciones\r\n\r\n          let ingreso = Utils.formatNumber(this.dataFlujoAcumulado[f][3])\r\n          let recuperacion = Utils.formatNumber(this.dataFlujoAcumulado[f][4])\r\n          let costo = Utils.formatNumber(this.dataFlujoAcumulado[f][5])\r\n          let remuneracion = Utils.formatNumber(this.dataFlujoAcumulado[f][6])\r\n          let gastosneg = Utils.formatNumber(this.dataFlujoAcumulado[f][7])\r\n          let imprevistosag = Utils.formatNumber(this.dataFlujoAcumulado[f][8])\r\n          let obligaciones = Utils.formatNumber(this.dataFlujoAcumulado[f][9])\r\n          let gastosfam = Utils.formatNumber(this.dataFlujoAcumulado[f][13])\r\n\r\n          let ingresoLiquido = ingreso + recuperacion - costo - remuneracion - gastosneg - imprevistosag - obligaciones\r\n          this.dataFlujoAcumulado[f][10] = ingresoLiquido\r\n\r\n          //-Ingresos Líquidos Otras actividades comerciales\r\n          this.dataFlujoAcumulado[f][11] = totalIngresos\r\n\r\n          //-Otros Ingresos  familiares (Independientes)\r\n          this.dataFlujoAcumulado[f][12] = totalOtrosIngresos\r\n\r\n          //Flujo de caja antes financiación (sin acumular)\r\n          let flujoantes = ingresoLiquido + totalIngresos + totalOtrosIngresos - gastosfam\r\n          this.dataFlujoAcumulado[f][14] = flujoantes\r\n\r\n          //Flujo de caja antes financiación acumulable 85%\r\n          let flujoantesacumu = 0\r\n\r\n          if (primermes2) {\r\n            if (flujoantes < 0) {\r\n              flujoantesacumu = flujoantes + efectivo\r\n            } else {\r\n              flujoantesacumu = (flujoantes * 0.85) + efectivo\r\n            }\r\n            this.dataFlujoAcumulado[f][15] = flujoantesacumu\r\n            primermes2 = false\r\n          } else {\r\n            let flujoantesantes = Utils.formatNumber(this.dataFlujoAcumulado[f - 1][15])\r\n\r\n            if (flujoantes < 0) {\r\n              flujoantesacumu = flujoantes + flujoantesantes\r\n            } else {\r\n              flujoantesacumu = flujoantesantes + (flujoantes * 0.85)\r\n            }\r\n            this.dataFlujoAcumulado[f][15] = flujoantesacumu\r\n\r\n          }\r\n\r\n          this.dataFlujoAcumulado[f][15] = flujoantesacumu\r\n\r\n          let tipocuota = this.datasolicitud.Propuesta.tipocuota\r\n          if (tipocuota == 1) {\r\n            let cuota = Utils.formatNumber(this.datasolicitud.Propuesta.valorcouta)\r\n            let periodo = this.datasolicitud.Propuesta.formapgo\r\n\r\n            if (periodo.id == 1) {\r\n              this.dataFlujoAcumulado[f][16] = cuota\r\n            } else if (periodo.id == 2 && f % 2 == 0) {\r\n              this.dataFlujoAcumulado[f][16] = cuota\r\n            } else if (periodo.id == 3 && f % 3 == 0) {\r\n              this.dataFlujoAcumulado[f][16] = cuota\r\n            }\r\n          } else if (tipocuota == 2) {\r\n            for (let ir = 0; ir < this.datasolicitud.Propuesta.irregular.length; ir++) {\r\n              const item = this.datasolicitud.Propuesta.irregular[ir];\r\n              if (item.fechacuota) {\r\n                let mes = item.fechacuota.getMonth()\r\n                let ano = item.fechacuota.getFullYear()\r\n                let mesFlujo = fechacrece.getMonth()\r\n                let anoFlujo = fechacrece.getFullYear()\r\n\r\n                if (mesFlujo == mes && ano == anoFlujo) {\r\n                  this.dataFlujoAcumulado[f][16] = Utils.formatNumber(item.valorcuota)\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          //Flujo de caja descontando cuota de crédito\r\n          let cuotacredito = Utils.formatNumber(this.dataFlujoAcumulado[f][16])\r\n          let flujodescontando = 0\r\n          if (primermes) {\r\n            if (flujoantes < 0) {\r\n              flujodescontando = flujoantes + efectivo - cuotacredito\r\n            } else {\r\n              flujodescontando = (flujoantes * 0.85) + efectivo - cuotacredito\r\n            }\r\n\r\n            this.dataFlujoAcumulado[f][17] = flujodescontando\r\n            primermes = false;\r\n          } else {\r\n            let flujodescAnterior = this.dataFlujoAcumulado[f - 1][17]\r\n            if (flujoantes < 0) {\r\n              flujodescontando = flujoantes + flujodescAnterior - cuotacredito\r\n            } else {\r\n              flujodescontando = flujodescAnterior + (flujoantes * 0.85) - cuotacredito\r\n            }\r\n            this.dataFlujoAcumulado[f][17] = flujodescontando\r\n          }\r\n\r\n          //Flujo de caja con financiación\r\n          let flujofinan = 0\r\n          if (primermes1) {\r\n            if (flujoantes < 0) {\r\n              flujofinan = planinversion + efectivo - cuotacredito\r\n            } else {\r\n              flujofinan = (flujoantes * 0.85) + efectivo - cuotacredito\r\n            }\r\n            primermes1 = false\r\n            this.dataFlujoAcumulado[f][18] = flujofinan\r\n          } else {\r\n            let flujofinanantes = Utils.formatNumber(this.dataFlujoAcumulado[f - 1][18])\r\n            if (flujoantes < 0) {\r\n              flujofinan = flujoantes + flujofinanantes - cuotacredito\r\n            } else {\r\n              flujofinan = flujofinanantes + (flujoantes * 0.85) - cuotacredito\r\n            }\r\n            this.dataFlujoAcumulado[f][18] = flujofinan\r\n          }\r\n\r\n          //Relación cuota liquidez\r\n          let relacionculiq = 0\r\n          if (cuotacredito > 0) {\r\n            relacionculiq = (cuotacredito / flujoantesacumu) * 100\r\n            this.dataFlujoAcumulado[f][19] = relacionculiq.toFixed(2)\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n      this.datasolicitud.Flujo = this.dataFlujoAcumulado\r\n      this.srvSol.saveSol(this.ced, this.datasolicitud)\r\n\r\n      this.dataFlujoAcumulado1 = this.dataFlujoAcumulado.map(function (val) {\r\n        return val.slice(0, -10);\r\n      });\r\n\r\n      this.dataFlujoAcumulado2 = this.dataFlujoAcumulado.map(function (val) {\r\n        let flujo = val.slice(10, 20);\r\n        let consol = val.slice(0, -17);\r\n        consol = consol.concat(flujo)\r\n\r\n        return consol\r\n      });\r\n    }\r\n\r\n    afterInit()\r\n  }\r\n}\r\n","<form [formGroup]=\"propuestaForm\">\r\n    <mat-card class=\"mat-card-content\">\r\n        <mat-card-header>\r\n            <mat-card-title>Monto y destino de crédito</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <div fxLayout=\"row wrap\">\r\n                <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput placeholder=\"Monto Recomendado\" id=\"monto\"\r\n                            formControlName=\"montorecomendado\" autocomplete=\"off\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n                    Plazo: <span>{{propuestaForm.value.plazo}}</span> meses\r\n                    <mat-slider thumbLabel formControlName=\"plazo\" min=\"6\" max=\"60\" step=\"1\">\r\n                    </mat-slider>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n                    <b>Activo Fijo</b>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"60%\" fxFlex.xs=\"60%\" fxFlex.sm=\"60%\">\r\n                    <mat-form-field>\r\n                        <input type=\"tel\" matInput placeholder=\"Detalle\" autocomplete=\"off\" formControlName=\"detalle\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"40%\" fxFlex.xs=\"40%\" fxFlex.sm=\"40%\">\r\n                    <mat-form-field>\r\n                        <input type=\"tel\" matInput placeholder=\"Valor\" autocomplete=\"off\" formControlName=\"valor\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n                    <b>Capital de trabajo</b>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"60%\" fxFlex.xs=\"60%\" fxFlex.sm=\"60%\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput placeholder=\"Detalle\" formControlName=\"detallecapital\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"40%\" fxFlex.xs=\"40%\" fxFlex.sm=\"40%\">\r\n                    <mat-form-field>\r\n                        <input type=\"tel\" matInput placeholder=\"Valor capital\" formControlName=\"valorcapital\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"mat-card-content\">\r\n        <mat-card-content>\r\n            <div fxLayout=\"row wrap\">\r\n                <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n                    <b>Propuesta de crédito</b>\r\n                </div>\r\n                <mat-radio-group fxLayout=\"row wrap\" class=\"radio-group\" formControlName=\"tipocuota\">\r\n                    <mat-radio-button fxFlex=\"80%\" fxFlex.xs=\"70%\" class=\"radio-button\" value=\"1\">\r\n                        Cuota fija\r\n                    </mat-radio-button>\r\n                    <mat-radio-button fxFlex=\"20%\" fxFlex.xs=\"30%\" class=\"radio-button\" value=\"2\">\r\n                        Cuota Irregular\r\n                    </mat-radio-button>\r\n                </mat-radio-group>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <ng-container *ngIf=\"propuestaForm.value.tipocuota==1\">\r\n        <mat-card class=\"mat-card-content\">\r\n            <mat-card-header>\r\n                <mat-card-title>Cuota Fija</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n                <div fxLayout=\"row wrap\">\r\n                    <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"50%\" fxFlex.sm=\"50%\">\r\n                        <mat-form-field>\r\n                            <mat-label>Forma Pago</mat-label>\r\n                            <mat-select formControlName=\"formapgo\" required>\r\n                                <mat-option>-Seleccione-</mat-option>\r\n                                <mat-option *ngFor=\"let pe of periodo\" [value]=\"pe\">\r\n                                    {{pe.name}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"50%\" fxFlex.sm=\"50%\">\r\n                        <mat-form-field>\r\n                            <input type=\"tel\" matInput placeholder=\"Valor Cuota\" formControlName=\"valorcouta\"\r\n                                autocomplete=\"off\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"propuestaForm.value.tipocuota==2\">\r\n\r\n        <mat-card class=\"mat-card-content\">\r\n            <mat-card-header>\r\n                <mat-card-title>Cuota Irregular</mat-card-title>\r\n            </mat-card-header>\r\n            <mat-card-content>\r\n\r\n                <div fxLayout=\"row wrap\">\r\n                    <div class=\"gr\" fxFlex=\"80%\" fxFlex.xs=\"80%\" fxFlex.sm=\"80%\">\r\n                        <mat-form-field>\r\n                            <input type=\"number\" matInput placeholder=\"Numero Cuotas\" formControlName=\"numerocuotas\"\r\n                                autocomplete=\"off\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"gr\" fxFlex=\"20%\" fxFlex.xs=\"20%\" fxFlex.sm=\"20%\">\r\n                        <button mat-mini-fab color=\"primary\"\r\n                            (click)=\"initCuotas(propuestaForm.value.numerocuotas,propuestaForm.value.plazo)\">\r\n                            <mat-icon>expand_more</mat-icon>\r\n                        </button>\r\n                    </div>\r\n\r\n\r\n                    <div formArrayName=\"irregular\" class=\"alternate\">\r\n                        <div fxLayout=\"row wrap\" class=\"content\"\r\n                            *ngFor=\"let itemrow of cuotas().controls; let inv=index\" [formGroupName]=\"inv\">\r\n\r\n                            <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"50%\" fxFlex.sm=\"50%\">\r\n                                <mat-form-field>\r\n                                    <mat-label>Fecha Pago</mat-label>\r\n                                    <input matInput [matDatepicker]=\"fechacuota\" autocomplete=\"off\"\r\n                                        formControlName=\"fechacuota\" [min]=\"minDate\">\r\n                                    <mat-datepicker-toggle matSuffix [for]=\"fechacuota\"></mat-datepicker-toggle>\r\n                                    <mat-datepicker #fechacuota disabled=\"false\"></mat-datepicker>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"50%\" fxFlex.sm=\"50%\">\r\n                                <mat-form-field>\r\n                                    <input type=\"tel\" matInput placeholder=\"Valor Cuota\" formControlName=\"valorcuota\"\r\n                                        autocomplete=\"off\">\r\n                                </mat-form-field>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </ng-container>\r\n\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Propuesta } from 'src/app/model/propuesta';\r\nimport { Solicitud } from 'src/app/model/solicitud';\r\nimport { IdbSolicitudService } from '../admin/idb-solicitud.service';\r\nimport DataSelect from '../../data-select/dataselect.json';\r\nimport Utils from '../../utils'\r\nimport { type } from 'os';\r\n\r\n@Component({\r\n  selector: 'app-propuesta',\r\n  templateUrl: './propuesta.component.html',\r\n  styleUrls: ['./propuesta.component.scss']\r\n})\r\nexport class PropuestaComponent implements OnInit {\r\n\r\n  ced: string;\r\n  tipoSol: number;\r\n  dataSolicitud: Solicitud;\r\n  dataPropuesta: Propuesta;\r\n  meses: any = DataSelect.Meses;\r\n  periodo: any = DataSelect.Periodo.filter((pe) => pe.id < 4);\r\n  minDate = new Date();\r\n\r\n  constructor(\r\n    public srvSol: IdbSolicitudService,\r\n    private route: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private _snackBar: MatSnackBar\r\n  ) { }\r\n\r\n  propuestaForm: FormGroup = this.fb.group({\r\n    montorecomendado: '',\r\n    plazo: '',\r\n    destino: '',\r\n    detalle: '',\r\n    valor: 0,\r\n    detallecapital: '',\r\n    valorcapital: '',\r\n    tipocuota: 0,\r\n    formapgo: '',\r\n    valorcouta: '',\r\n    numerocuotas: '',\r\n    irregular: this.fb.array([])\r\n  })\r\n\r\n  cuotas(): FormArray {\r\n    return this.propuestaForm.get('irregular') as FormArray;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParamMap.subscribe((params) => {\r\n      this.ced = params.get('cedula')\r\n    });\r\n\r\n    this.srvSol.getSol(this.ced).subscribe((datasol) => {\r\n\r\n      if (this.ced) {\r\n        this.tipoSol = datasol.asesor\r\n        this.dataSolicitud = datasol as Solicitud\r\n        if (this.dataSolicitud.Propuesta) {\r\n          this.loadPropuesta(this.dataSolicitud.Propuesta)\r\n        }\r\n      }\r\n      this.propuestaForm.valueChanges.subscribe(form => {\r\n\r\n        let montorecomentado = Utils.formatNumber(form.montorecomendado)\r\n        let valor = Utils.formatNumber(form.valor)\r\n        let valorcapital = Utils.formatNumber(form.valorcapital)\r\n\r\n        if (valor > montorecomentado) {\r\n          valor = 0\r\n          this._snackBar.open(\"El valor no puede superar el monto recomendado\", \"Ok!\", {\r\n            duration: 6000,\r\n          });\r\n        }\r\n        if (valorcapital > montorecomentado) {\r\n          valorcapital = 0\r\n          this._snackBar.open(\"El valor no puede superar el monto recomendado\", \"Ok!\", {\r\n            duration: 6000,\r\n          });\r\n        }\r\n        let totalmonto = valor + valorcapital\r\n        if (totalmonto > montorecomentado) {\r\n          valorcapital = 0\r\n          this._snackBar.open(\"La suma de los valores no puede superar el monto recomentado\", \"Ok!\", {\r\n            duration: 9000,\r\n          });\r\n        }\r\n        const irregular = <FormArray>this.propuestaForm.controls['irregular'];\r\n        let arrDate = []\r\n\r\n        irregular.controls.forEach(x => {\r\n\r\n          let valorcuota = Utils.formatNumber(x.get('valorcuota').value)\r\n          let fecha = x.get('fechacuota').value\r\n\r\n          if (fecha != \"\" || fecha != null) {\r\n\r\n            if (fecha == \"\") {\r\n              console.log(\"No tiene mes\")\r\n            } else {\r\n              fecha as Date\r\n\r\n              let ano = fecha.getMonth()\r\n              let mes = fecha.getFullYear()\r\n              let fulldate = ano + \"-\" + mes\r\n\r\n              if (arrDate.indexOf(fulldate) >= 0) {\r\n                this._snackBar.open(\"La cuota del mes ya se ingreso\", \"Ok!\", {\r\n                  duration: 9000,\r\n                });\r\n                fecha = \"\"\r\n              }\r\n              arrDate.push(fulldate)\r\n            }\r\n          }\r\n          x.patchValue({\r\n            valorcuota: isFinite(valorcuota) ? valorcuota.toLocaleString() : 0,\r\n            fechacuota: fecha\r\n          }, { emitEvent: false })\r\n        });\r\n\r\n        this.propuestaForm.patchValue({\r\n          montorecomendado: isFinite(montorecomentado) ? montorecomentado.toLocaleString() : 0,\r\n          valor: isFinite(valor) ? valor.toLocaleString() : 0,\r\n          valorcapital: isFinite(valorcapital) ? valorcapital.toLocaleString() : 0\r\n        }, { emitEvent: false })\r\n\r\n        this.dataPropuesta = this.propuestaForm.value\r\n        this.dataSolicitud.Propuesta = this.dataPropuesta\r\n        this.srvSol.saveSol(this.ced, this.dataSolicitud)\r\n      })\r\n    })\r\n  }\r\n  itemsCuotas() {\r\n    return this.fb.group({\r\n      fechacuota: [''],\r\n      valorcuota: [''],\r\n    });\r\n  }\r\n  initCuotas(numcuotas, maxcuotas) {\r\n\r\n    let num = 0\r\n    if (numcuotas == \"\" || numcuotas == null) {\r\n      this._snackBar.open(\"Ingrese el valor de las cuotas\", \"Ok!\", {\r\n        duration: 6000,\r\n      });\r\n\r\n    } else {\r\n      if (numcuotas > maxcuotas) {\r\n        this.cuotas().clear();\r\n        this._snackBar.open(\"No puede superar el plazo\", \"Ok!\", {\r\n          duration: 6000,\r\n        });\r\n      } else {\r\n        num = Utils.formatNumber(numcuotas)\r\n        this.cuotas().clear();\r\n        for (let i = 0; i < num; i++) {\r\n          this.cuotas().push(this.itemsCuotas());\r\n        }\r\n      }\r\n    }\r\n  }\r\n  loadCuotas(irregular) {\r\n    let array = this.fb.array([])\r\n    irregular.forEach(ir => {\r\n      array.push(this.fb.group({\r\n        fechacuota: ir.fechacuota,\r\n        valorcuota: ir.valorcuota,\r\n      }))\r\n    });\r\n    return array\r\n  }\r\n\r\n\r\n  loadPropuesta(propuestas: Propuesta) {\r\n    return this.propuestaForm = this.fb.group({\r\n      montorecomendado: propuestas.montorecomendado,\r\n      plazo: propuestas.plazo,\r\n      destino: propuestas.destino,\r\n      detalle: propuestas.detalle,\r\n      valor: propuestas.valor,\r\n      detallecapital: propuestas.detalle,\r\n      valorcapital: propuestas.valorcapital,\r\n      tipocuota: propuestas.tipocuota,\r\n      formapgo: propuestas.formapgo,\r\n      valorcouta: propuestas.valorcouta,\r\n      numerocuotas: propuestas.numerocuotas,\r\n      irregular: this.loadCuotas(propuestas.irregular)\r\n    })\r\n  }\r\n}\r\n","<mat-card>\r\n    <mat-card-title-group>\r\n        <mat-card-title>Valores Formiik</mat-card-title>\r\n        <mat-card-subtitle>Los valores que se vinculan con formiik</mat-card-subtitle>\r\n    </mat-card-title-group>\r\n\r\n    <mat-card-content>\r\n        <table class=\"striped\">\r\n            <tbody>\r\n                <tr>\r\n                    <td>2- Efectivo/Balance</td>\r\n                    <td>\r\n                        <mat-chip-list>\r\n                            <mat-chip>${{efectivo}}</mat-chip>\r\n                        </mat-chip-list>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>3- Cuentas por cobrar</td>\r\n                    <td>\r\n                        <mat-chip-list>\r\n                            <mat-chip>${{totalcuentascobrar}}</mat-chip>\r\n                        </mat-chip-list>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>4-Total Inventarios </td>\r\n                    <td>\r\n                        <mat-chip-list>\r\n                            <mat-chip>${{totalinventarios}}</mat-chip>\r\n                        </mat-chip-list>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>6- Total Activo fijo</td>\r\n                    <td>\r\n                        <mat-chip-list>\r\n                            <mat-chip>${{totalactivosneg}}</mat-chip>\r\n                        </mat-chip-list>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>8- Créditos con proveedores</td>\r\n                    <td>\r\n                        <mat-chip-list>\r\n                            <mat-chip>${{creditosproveedores}}</mat-chip>\r\n                        </mat-chip-list>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>10- Otros pasivos corrientes</td>\r\n                    <td>\r\n                        <mat-chip-list>\r\n                            <mat-chip>{{otraspasivoscor| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                        </mat-chip-list>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>13- Otros pasivos no corrientes</td>\r\n                    <td>\r\n                        <mat-chip-list>\r\n                            <mat-chip>{{otraspasivosNocor| currency:'$' : 'symbol' : '1.0-0'}} </mat-chip>\r\n                        </mat-chip-list>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>17- Total Activos familiar </td>\r\n                    <td>\r\n                        <mat-chip-list>\r\n                            <mat-chip>${{totalactivosfam}}</mat-chip>\r\n                        </mat-chip-list>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>18- Total pasivos familiar </td>\r\n                    <td>\r\n                        <mat-chip-list>\r\n                            <mat-chip>{{totalpasivosfam| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                        </mat-chip-list>\r\n                    </td>\r\n                </tr>\r\n                <!-- comercial -->\r\n                <ng-container *ngIf=\"tiposol==1\">\r\n                    <tr>\r\n                        <td>21- Ventas de contado</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{VentasContado| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>22-Recuperación de cartera</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{recuperacion| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>23-costo de venta</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{Costodeventa| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>24-salarios</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>${{salarios}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>25-Gastos generales </td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>${{gastosgenerales}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>26- Obligaciones Financieras</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>${{obligacionesfin}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>28- Otros ingresos familiares </td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>${{totalotrosingresosfam}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>29- Gastos y obligaciones familiares</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>${{totalgastosfam}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                </ng-container>\r\n                <!-- agropecuario -->\r\n                <ng-container *ngIf=\"tiposol==2\">\r\n                    <tr>\r\n                        <td>21- Ventas de contado</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{totalingreosflujo| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>22-Recuperación de cartera</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{totalrecuperacioncartera| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>23-costo de venta</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{costodeventaA| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>24-salarios</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{salariosA| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>25-Gastos generales </td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{gastosGeneralesA| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>26- Obligaciones Financieras</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{obligacionesA| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>28- Otros ingresos familiares </td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{otrosIngresosA| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>29- Gastos y obligaciones familiares</td>\r\n                        <td>\r\n                            <mat-chip-list>\r\n                                <mat-chip>{{gastosFamiliaresA| currency:'$' : 'symbol' : '1.0-0'}}</mat-chip>\r\n                            </mat-chip-list>\r\n                        </td>\r\n                    </tr>\r\n                </ng-container>\r\n            </tbody>\r\n        </table>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Solicitud } from 'src/app/model/solicitud';\r\nimport Utils from 'src/app/utils';\r\nimport { IdbSolicitudService } from '../admin/idb-solicitud.service';\r\n\r\n@Component({\r\n  selector: 'app-resultado',\r\n  templateUrl: './resultado.component.html',\r\n  styleUrls: ['./resultado.component.scss']\r\n})\r\nexport class ResultadoComponent implements OnInit {\r\n\r\n  datasolicitud: Solicitud = new Solicitud()\r\n  tiposol: number;\r\n  ced: string;\r\n  efectivo: number = 0;\r\n  totalcuentascobrar: number = 0;\r\n  recuperacion: number = 0;\r\n  otraspasivoscor: number = 0;\r\n  otraspasivosNocor: number = 0;\r\n  salarios: number = 0;\r\n  totalinventarios: number = 0;\r\n  totalactivosneg: number = 0;\r\n  totalactivosfam: number = 0;\r\n  totalgastosfam: number = 0;\r\n  totalotrosingresosfam: number = 0;\r\n  totalpasivosfam: number;\r\n  obligacionesfin: number = 0;\r\n  gastosgenerales: number = 0;\r\n  creditosproveedores: number = 0;\r\n  totalingreosflujo: number = 0;\r\n  totalrecuperacioncartera: number = 0;\r\n  costodeventaA: number = 0;\r\n  salariosA: number = 0;\r\n  gastosGeneralesA: number = 0;\r\n  obligacionesA: number = 0;\r\n  otrosIngresosA: number = 0;\r\n  gastosFamiliaresA: number = 0;\r\n  Costodeventa: number = 0;\r\n  VentasContado: number = 0;\r\n\r\n  constructor(\r\n    private activeRoute: ActivatedRoute,\r\n    public srvSol: IdbSolicitudService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.activeRoute.queryParamMap\r\n      .subscribe((params) => {\r\n        this.ced = params.get('cedula')\r\n      });\r\n\r\n    this.srvSol.getSol(this.ced)\r\n      .subscribe((datasol) => {\r\n\r\n        this.datasolicitud = datasol as Solicitud\r\n        this.tiposol = this.datasolicitud.asesor\r\n        let totalrecuperacion = 0\r\n        let otrosingresos = 0\r\n        if (this.datasolicitud.Gastos) {\r\n          this.salarios = this.datasolicitud.Gastos.totalRemuneracion\r\n          this.totalgastosfam = this.datasolicitud.Gastos.totalF\r\n          this.totalotrosingresosfam = this.datasolicitud.Gastos.totalOtros\r\n          this.gastosgenerales = this.datasolicitud.Gastos.totalN\r\n          otrosingresos = Utils.formatNumber(this.datasolicitud.Gastos.totalOtros)\r\n        }\r\n        if (this.datasolicitud.Balance) {\r\n          this.efectivo = this.datasolicitud.Balance.efectivo\r\n          this.totalcuentascobrar = this.datasolicitud.Balance.cobrarTotal\r\n          this.totalinventarios = this.datasolicitud.Balance.inventarioTotal\r\n          this.totalactivosneg = this.datasolicitud.Balance.actnegTotal\r\n          this.totalactivosfam = this.datasolicitud.Balance.actfamTotal\r\n          this.obligacionesfin = this.datasolicitud.Balance.totalCreditos\r\n          this.recuperacion = Utils.formatNumber(this.datasolicitud.Balance.recuperacionCobrar)\r\n          this.creditosproveedores = this.datasolicitud.Balance.proveedoresTotal\r\n          this.otraspasivoscor = Utils.formatNumber(this.datasolicitud.Balance.tcorrienten)\r\n          this.otraspasivosNocor = Utils.formatNumber(this.datasolicitud.Balance.tnocorrienten)\r\n          this.totalpasivosfam = Utils.formatNumber(this.datasolicitud.Balance.tnocorrientef) + Utils.formatNumber(this.datasolicitud.Balance.tcorrientef)\r\n\r\n          if (this.datasolicitud.Balance.recuperacion) {\r\n            let cantidadre = this.datasolicitud.Balance.recuperacion.length\r\n            let totalre = this.datasolicitud.Balance.totalRecuperacion\r\n            totalrecuperacion = totalre / cantidadre\r\n          }\r\n\r\n        }\r\n        this.VentasContado = 0\r\n\r\n        let costoscruce = []\r\n        if (this.datasolicitud.Cruces) {\r\n          for (let j = 0; j < this.datasolicitud.Cruces.length; j++) {\r\n            const cru = this.datasolicitud.Cruces[j];\r\n            let cruces = []\r\n            if (cru.totalCruce1 > 0)\r\n              cruces.push(cru.totalCruce1)\r\n            if (cru.totalCruce2 > 0)\r\n              cruces.push(cru.totalCruce2)\r\n            if (cru.totalCruce3 > 0)\r\n              cruces.push(cru.totalCruce3)\r\n\r\n            let mincruces = Math.min.apply(null, cruces)\r\n            costoscruce.push([mincruces, cru.costo])\r\n            this.VentasContado += mincruces\r\n          }\r\n        }\r\n\r\n        let costototal = 0\r\n        for (let c = 0; c < costoscruce.length; c++) {\r\n          const item = costoscruce[c];\r\n          const crucemin = parseInt(item[0])\r\n          const costo = parseInt(item[1]) / 100\r\n          let participacion = crucemin / this.VentasContado\r\n          let porcentaje = costo * participacion\r\n          costototal += porcentaje\r\n        }\r\n        let ventastotales = this.recuperacion + this.VentasContado\r\n        this.Costodeventa = ventastotales * costototal;\r\n\r\n\r\n        if (this.datasolicitud.Flujo) {\r\n          let formapago = 0\r\n          let plazo = 0\r\n          if (this.datasolicitud.Propuesta) {\r\n            if (this.datasolicitud.Propuesta.tipocuota == 2) {\r\n              formapago = 3\r\n            } else {\r\n              formapago = this.datasolicitud.Propuesta.formapgo.period\r\n            }\r\n            plazo = Utils.formatNumber(this.datasolicitud.Propuesta.plazo)\r\n          }\r\n          let totalingreso = 0\r\n          let totalegresos = 0\r\n          let totalgastos = 0\r\n          let totalobligaciones = 0\r\n          let totalgastosyobfam = 0\r\n\r\n          for (let i = 0; i < this.datasolicitud.Flujo.length; i++) {\r\n            const flujo = this.datasolicitud.Flujo[i]\r\n            let ingresosagro = flujo[3]\r\n            let egresosagro = flujo[5]\r\n            let gastosneg = flujo[7]\r\n            let obligaciones = flujo[9]\r\n            let gastosyobfam = flujo[13]\r\n\r\n            totalingreso += Utils.formatNumber(ingresosagro)\r\n            totalegresos += Utils.formatNumber(egresosagro)\r\n            totalgastos += Utils.formatNumber(gastosneg)\r\n            totalobligaciones += Utils.formatNumber(obligaciones)\r\n            totalgastosyobfam += Utils.formatNumber(gastosyobfam)\r\n          }\r\n          this.totalingreosflujo = (totalingreso / plazo) * formapago\r\n          this.costodeventaA = (totalegresos / plazo) * formapago\r\n          this.totalrecuperacioncartera = totalrecuperacion * formapago\r\n          this.salariosA = Utils.formatNumber(this.salarios) * formapago\r\n          this.gastosGeneralesA = (totalgastos / plazo) * formapago\r\n          this.obligacionesA = (totalobligaciones / plazo) * formapago\r\n          this.otrosIngresosA = otrosingresos * formapago\r\n          this.gastosFamiliaresA = (totalgastosyobfam / plazo) * formapago\r\n        }\r\n\r\n      })\r\n\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"ubicacionForm\">\r\n    <mat-card class=\"mat-card-fases\">\r\n        <mat-card-header>\r\n            <mat-card-title>Ubicacion</mat-card-title>\r\n            <mat-card-subtitle>Descripcion de la ubicacion del terreno</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n            <div fxLayout=\"row wrap\">\r\n                <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n                    Duracion del Recorrido\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"33%\" fxFlex.xs=\"33%\" fxFlex.sm=\"25%\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Hora</mat-label>\r\n                        <input type=\"number\" matInput placeholder=\"Hora\" id=\"tiempohora\" formControlName=\"tiempohora\">\r\n                        <mat-icon matSuffix>access_time</mat-icon>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"33%\" fxFlex.xs=\"33%\" fxFlex.sm=\"25%\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Minutos</mat-label>\r\n                        <input type=\"number\" matInput placeholder=\"Minuto\" id=\"tiempomin\" formControlName=\"tiempomin\">\r\n                        <mat-icon matSuffix>access_time</mat-icon>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"33%\" fxFlex.xs=\"33%\" fxFlex.sm=\"25%\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Segundos</mat-label>\r\n                        <input type=\"number\" matInput placeholder=\"Segundo\" id=\"tiemposeg\" formControlName=\"tiemposeg\">\r\n                        <mat-icon matSuffix>access_time</mat-icon>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"25%\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput placeholder=\"Punto de partida\" id=\"puntopartida\"\r\n                            formControlName=\"puntopartida\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"25%\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput placeholder=\"Descripcion punto partida\" id=\"descripcionppartida-\"\r\n                            formControlName=\"descripcionppartida\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"25%\">\r\n                    <ng-container *ngIf=\"ubicacionForm.controls.fotoppartida.value == ''\">\r\n                        <mat-form-field>\r\n                            <div class=\"myfilebrowser\">\r\n                                <mat-toolbar>\r\n                                    <input matInput value=\"{{myfilename1}}\" readonly formControlName=\"fotoppartida\" />\r\n                                    <button mat-mini-fab color=\"accent\" aria-label=\"Fotico\">\r\n                                        <mat-icon>camera_alt</mat-icon>\r\n                                    </button>\r\n                                </mat-toolbar>\r\n                                <input type=\"file\" #UploadFileInput1 id=\"fileUpload1\"\r\n                                    (change)=\"fileChangeEvent1($event)\" name=\"fileUpload1\"\r\n                                    accept=\"image/x-png,image/jpeg,image/gif\" />\r\n                            </div>\r\n                        </mat-form-field>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"ubicacionForm.controls.fotoppartida.value != ''\">\r\n                        <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\r\n                            <div fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n                                <mat-card class=\"mat-elevation-z4\">\r\n                                    <mat-card-header>\r\n                                        <mat-card-title>{{ubicacionForm.controls.puntopartida.value}}</mat-card-title>\r\n                                    </mat-card-header>\r\n                                    <img mat-card-image [src]=\"transform(ubicacionForm.controls.fotoppartida.value)\">\r\n                                    <mat-card-content>\r\n                                        <p>\r\n                                            {{ubicacionForm.controls.descripcionppartida.value}}\r\n                                        </p>\r\n                                    </mat-card-content>\r\n                                    <mat-card-actions>\r\n                                        <button (click)=\"quitar1()\" mat-button>Quitar</button>\r\n                                    </mat-card-actions>\r\n                                </mat-card>\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"25%\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput placeholder=\"Punto de Llegada\" id=\"puntollegada\"\r\n                            formControlName=\"puntollegada\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"25%\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput placeholder=\"Descripcion punto llegada\" id=\"descripcionpllegada-\"\r\n                            formControlName=\"descripcionpllegada\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"gr\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"25%\">\r\n                    <ng-container *ngIf=\"ubicacionForm.controls.fotopllegada.value == ''\">\r\n                        <mat-form-field>\r\n                            <div class=\"myfilebrowser\">\r\n                                <mat-toolbar>\r\n                                    <input matInput value=\"{{myfilename2}}\" readonly formControlName=\"fotopllegada\" />\r\n                                    <button mat-mini-fab color=\"accent\" aria-label=\"Fotico\">\r\n                                        <mat-icon>camera_alt</mat-icon>\r\n                                    </button>\r\n                                </mat-toolbar>\r\n                                <input type=\"file\" #UploadFileInput id=\"fileUpload\" (change)=\"fileChangeEvent2($event)\"\r\n                                    name=\"fileUpload\" multiple=\"multiple\" accept=\"image/x-png,image/jpeg,image/gif\" />\r\n                            </div>\r\n                        </mat-form-field>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"ubicacionForm.controls.fotopllegada.value != ''\">\r\n\r\n                        <div class=\"content\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\r\n                            <div fxFlex=\"100%\" fxFlex.xs=\"100%\" fxFlex.sm=\"100%\">\r\n                                <mat-card class=\"mat-elevation-z4\">\r\n                                    <mat-card-header>\r\n                                        <mat-card-title>{{ubicacionForm.controls.puntollegada.value}}</mat-card-title>\r\n                                    </mat-card-header>\r\n                                    <img mat-card-image [src]=\"transform(ubicacionForm.controls.fotopllegada.value)\">\r\n                                    <mat-card-content>\r\n                                        <p>\r\n                                            {{ubicacionForm.controls.descripcionpllegada.value}}\r\n                                        </p>\r\n                                    </mat-card-content>\r\n                                    <mat-card-actions>\r\n                                        <button (click)=\"quitar2()\" mat-button>Quitar</button>\r\n                                    </mat-card-actions>\r\n                                </mat-card>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </ng-container>\r\n                   \r\n                </div>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n</form>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Solicitud } from 'src/app/model/solicitud';\r\nimport { Ubicacion } from 'src/app/model/ubicacion';\r\nimport { IdbSolicitudService } from '../admin/idb-solicitud.service';\r\n\r\n@Component({\r\n  selector: 'app-ubicacion',\r\n  templateUrl: './ubicacion.component.html',\r\n  styleUrls: ['./ubicacion.component.scss']\r\n})\r\n\r\nexport class UbicacionComponent implements OnInit {\r\n\r\n  @ViewChild('UploadFileInput') uploadFileInput: ElementRef;\r\n  @ViewChild('UploadFileInput1') uploadFileInput1: ElementRef;\r\n  myfilename2 = 'Seleccione Imagen';\r\n  myfilename1 = 'Seleccione Imagen';\r\n  ced: string;\r\n\r\n  dataSolicitud: Solicitud = new Solicitud();\r\n  dataUbicacion: Ubicacion = new Ubicacion();\r\n\r\n  ubicacionForm: FormGroup = this.fb.group({\r\n    tiempohora: [''],\r\n    tiempomin: [''],\r\n    tiemposeg: [''],\r\n    puntopartida: [''],\r\n    descripcionppartida: [''],\r\n    fotoppartida: '',\r\n    puntollegada: '',\r\n    descripcionpllegada: '',\r\n    fotopllegada: '',\r\n  })\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public srvSol: IdbSolicitudService,\r\n    private activeRoute: ActivatedRoute,\r\n    private _snackBar: MatSnackBar,\r\n    private sanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.activeRoute.queryParamMap.subscribe((params) => {\r\n      this.ced = params.get('cedula')\r\n    });\r\n\r\n    this.srvSol.getSol(this.ced).subscribe((datasol) => {\r\n      if (this.ced) {\r\n\r\n        this.dataSolicitud = datasol as Solicitud\r\n        if (this.dataSolicitud.Ubicacion) {\r\n          this.loadUbicacion(this.dataSolicitud.Ubicacion)\r\n        }\r\n      }\r\n\r\n      this.ubicacionForm.valueChanges.subscribe(form => {\r\n\r\n        let hora = this.formatNumber(this.ubicacionForm.controls.tiempohora.value)\r\n        let minuto = this.formatNumber(this.ubicacionForm.controls.tiempomin.value)\r\n        let segundo = this.formatNumber(this.ubicacionForm.controls.tiemposeg.value)\r\n\r\n        if (hora >= 12) {\r\n          hora = 0\r\n          this._snackBar.open(\"Muchas horas de recorrido\", \"Ok!\", {\r\n            duration: 3000,\r\n          });\r\n        }\r\n        if (minuto >= 60) {\r\n          minuto = 0\r\n          this._snackBar.open(\"No puede superar 60 minutos\", \"Ok!\", {\r\n            duration: 3000,\r\n          });\r\n        }\r\n        if (segundo >= 60) {\r\n          segundo = 0\r\n          this._snackBar.open(\"No puede superar 60 segundos\", \"Ok!\", {\r\n            duration: 3000,\r\n          });\r\n        }\r\n\r\n        this.ubicacionForm.patchValue({\r\n          tiempohora: hora,\r\n          tiempomin: minuto,\r\n          tiemposeg: segundo\r\n        }, { emitEvent: false })\r\n\r\n        this.dataUbicacion = this.ubicacionForm.value\r\n        this.dataSolicitud.Ubicacion = this.dataUbicacion\r\n        this.srvSol.saveSol(this.ced, this.dataSolicitud)\r\n\r\n      })\r\n    })\r\n  }\r\n\r\n  loadUbicacion(ubicaciones: Ubicacion) {\r\n\r\n    return this.ubicacionForm = this.fb.group({\r\n      tiempohora: ubicaciones.tiempohora,\r\n      tiempomin: ubicaciones.tiempomin,\r\n      tiemposeg: ubicaciones.tiemposeg,\r\n      puntopartida: ubicaciones.puntopartida,\r\n      descripcionppartida: ubicaciones.descripcionppartida,\r\n      fotoppartida: ubicaciones.fotoppartida,\r\n      puntollegada: ubicaciones.puntollegada,\r\n      descripcionpllegada: ubicaciones.descripcionpllegada,\r\n      fotopllegada: ubicaciones.fotopllegada,\r\n    })\r\n\r\n  }\r\n\r\n  transform(base) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(base);\r\n  }\r\n\r\n  fileChangeEvent1(fileInput: any) {\r\n\r\n    this.dataUbicacion = this.ubicacionForm.value\r\n    this.dataSolicitud.Ubicacion = this.dataUbicacion\r\n\r\n    if (fileInput.target.files && fileInput.target.files[0]) {\r\n      this.myfilename1 = '';\r\n      Array.from(fileInput.target.files).forEach((file: File) => {\r\n        this.myfilename1 += file.name;\r\n      });\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        const image = new Image();\r\n        image.src = e.target.result;\r\n        image.onload = rs => {\r\n          const imgBase64Path = e.target.result;\r\n          this.ubicacionForm.patchValue({\r\n            fotoppartida: imgBase64Path\r\n          }, { emitEvent: false })\r\n\r\n          this.dataUbicacion.fotoppartida = imgBase64Path\r\n          this.dataSolicitud.Ubicacion.fotoppartida = this.dataUbicacion.fotoppartida\r\n          this.srvSol.saveSol(this.ced, this.dataSolicitud)\r\n        };\r\n      };\r\n      reader.readAsDataURL(fileInput.target.files[0]);\r\n      this.uploadFileInput1.nativeElement.value = \"\";\r\n    } else {\r\n      this.myfilename1 = 'Seleccione Imagen';\r\n    }\r\n  }\r\n\r\n  fileChangeEvent2(fileInput: any) {\r\n    this.dataUbicacion = this.ubicacionForm.value\r\n    this.dataSolicitud.Ubicacion = this.dataUbicacion\r\n\r\n    if (fileInput.target.files && fileInput.target.files[0]) {\r\n      this.myfilename2 = '';\r\n      Array.from(fileInput.target.files).forEach((file: File) => {\r\n        this.myfilename2 += file.name;\r\n      });\r\n      const reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        const image = new Image();\r\n        image.src = e.target.result;\r\n        image.onload = rs => {\r\n          const imgBase64Path = e.target.result;\r\n          this.ubicacionForm.patchValue({\r\n            fotopllegada: imgBase64Path\r\n          }, { emitEvent: false })\r\n\r\n          this.dataUbicacion.fotopllegada = imgBase64Path\r\n          this.dataSolicitud.Ubicacion.fotopllegada = this.dataUbicacion.fotopllegada\r\n          this.srvSol.saveSol(this.ced, this.dataSolicitud)\r\n        };\r\n      };\r\n      reader.readAsDataURL(fileInput.target.files[0]);\r\n      this.uploadFileInput.nativeElement.value = \"\";\r\n    } else {\r\n      this.myfilename2 = 'Seleccione Imagen';\r\n    }\r\n  }\r\n\r\n  quitar1() {\r\n    this.myfilename1 = 'Seleccione Imagen';\r\n    this.ubicacionForm.patchValue({\r\n      fotoppartida: \"\"\r\n    }, { emitEvent: false })\r\n    this.dataUbicacion.fotoppartida = \"\"\r\n    this.dataSolicitud.Ubicacion.fotoppartida = this.dataUbicacion.fotoppartida\r\n    this.srvSol.saveSol(this.ced, this.dataSolicitud)\r\n  }\r\n  quitar2() {\r\n    this.myfilename2 = 'Seleccione Imagen';\r\n    this.ubicacionForm.patchValue({\r\n      fotopllegada: \"\"\r\n    }, { emitEvent: false })\r\n    this.dataUbicacion.fotopllegada = \"\"\r\n    this.dataSolicitud.Ubicacion.fotopllegada = this.dataUbicacion.fotopllegada\r\n    this.srvSol.saveSol(this.ced, this.dataSolicitud)\r\n  }\r\n\r\n  formatNumber(num) {\r\n    if (typeof (num) == \"number\") {\r\n      return num\r\n    } else {\r\n      return parseInt(num == \"0\" || num == \"\" || num == null ? \"0\" : num.replace(/\\D/g, '').replace(/^0+/, ''))\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { TokenStorageService } from '../services/token-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private tknServ: TokenStorageService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.tknServ.getUser()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/auth']);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HTTP_INTERCEPTORS,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { TokenStorageService } from '../services/token-storage.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CarpetadigitalService } from '../services/carpetadigital.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private token: TokenStorageService,\r\n    private carpetaSrv: CarpetadigitalService,\r\n    private route: Router,\r\n    public dialog: MatDialog,\r\n    private _snackBar: MatSnackBar,\r\n  ) { }\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const token = this.token.getToken();\r\n    if (token != null) {\r\n      request = request.clone({\r\n        url: request.url.replace('http://', 'https://'),\r\n        headers: request.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token)\r\n      });\r\n    }\r\n\r\n\r\n    return next.handle(request).pipe(\r\n      map((event: HttpEvent<any>) => {\r\n        if (event instanceof HttpResponse) {\r\n          console.log('event--->>>', event);\r\n        }\r\n        return event;\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        let data = {};\r\n        data = {\r\n          reason: error && error.error && error.error.reason ? error.error.reason : '',\r\n          status: error.status\r\n        };\r\n        if (error.status == 401) {\r\n          this.token.signOut()\r\n          this.route.navigate(['auth'])\r\n          this._snackBar.open(\"Epa! Debe volver a iniciar sesion para enviar el analisis\", \"Ok!\", {\r\n            duration: 10000,\r\n          });\r\n        }\r\n        return throwError(data);\r\n      }));\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatChipsModule } from \"@angular/material/chips\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\n\r\n\r\nconst myCompm = [\r\n  MatCardModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatStepperModule,\r\n  MatDividerModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatChipsModule,\r\n  MatSelectModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatTabsModule,\r\n  MatExpansionModule,\r\n  MatTableModule,\r\n  MatPaginatorModule,\r\n  MatDialogModule,\r\n  MatButtonToggleModule,\r\n  MatCheckboxModule,\r\n  MatProgressSpinnerModule,\r\n  MatTooltipModule,\r\n  MatAutocompleteModule,\r\n  MatSliderModule,\r\n  MatBottomSheetModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule, myCompm],\r\n  exports: [myCompm]\r\n})\r\nexport class MaterialModule { }","export class Email {\r\n    To: string;\r\n    Base64Pdf: string;\r\n    Base64PdfAgro: string;\r\n    Subject: string;\r\n    Body: string;\r\n}","import { Balance } from './balance';\r\nimport { Cruces } from './cruces';\r\nimport { CrucesAgro } from './crucesagro';\r\nimport { Gastos } from './gastos';\r\nimport { Propuesta } from './propuesta';\r\nimport { Ubicacion } from './ubicacion';\r\n\r\nexport class Solicitud {\r\n    solicitud: number;\r\n    cedula: number;\r\n    asesor: number;\r\n    oficina:string;\r\n    usuario:string;\r\n    fechacreacion: Date;\r\n    Balance: Balance;\r\n    Cruces: Cruces[];\r\n    CrucesAgro: CrucesAgro[];\r\n    Gastos: Gastos;\r\n    Ubicacion:Ubicacion;\r\n    Propuesta:Propuesta;\r\n    Flujo:any[];\r\n}\r\n","export class Ubicacion {\r\n    tiempohora: string;\r\n    tiempomin:string;\r\n    tiemposeg:string;\r\n    puntopartida:string;\r\n    descripcionppartida:string;\r\n    fotoppartida:string;\r\n    puntollegada:string;\r\n    descripcionpllegada:string;\r\n    fotopllegada:string;\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Solicitud } from '../model/solicitud';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalisisService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  insert(solicitud:Solicitud) {\r\n    return this.http.post(environment.AUTH_API + 'Analisis', {      \r\n      Solicitud: solicitud.solicitud,\r\n      Identificacion: solicitud.cedula,\r\n      Oficina: solicitud.oficina,\r\n      Fecha_Inicio: solicitud.fechacreacion,\r\n      Fecha_Fin: new Date(),\r\n      Usuario: solicitud.usuario\r\n    }, httpOptions);\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Solicitud } from '../model/solicitud';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CarpetadigitalService {\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n\r\n  get(sol) {\r\n    return this.http.post(environment.AUTH_API + 'Carpetadig/GetSol', {\r\n      NumSolicitud: sol\r\n    }, httpOptions);\r\n  }\r\n\r\n  insert(solicitud:Solicitud,fileBase64:string) {\r\n\r\n    return this.http.post(environment.AUTH_API + 'Carpetadig/InsertFile', {\r\n      NumDocCli: solicitud.cedula,\r\n      NumSolicitud: solicitud.solicitud,\r\n      Usuario: \"imglatam@fundaciondelamujer.com\",\r\n      lstMetadata: [],\r\n      lstSoporte: [\r\n        {\r\n          TipoDocumento: \"COL-FO-001 Análisis de crédito (PDF Generado Asesor Agil)\",\r\n          NombreArchivo: \"Analisis de credito.pdf\",\r\n          UrlArchivo: \"\",\r\n          FileBase64: fileBase64\r\n        }\r\n      ]\r\n    }, httpOptions);\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Email } from '../model/email';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  Send(email: Email): Observable<any> {  \r\n      return this.http.post(environment.AUTH_API + 'Envios/Send', {\r\n          To: email.To,\r\n          Base64Pdf: email.Base64Pdf,\r\n          Base64PdfAgro: email.Base64PdfAgro,\r\n          Subject: email.Subject,\r\n          Body: email.Body\r\n      });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n\r\n  constructor() { }\r\n\r\n  set(key: string, value: string) {\r\n    localStorage.setItem(key, value);\r\n  }\r\n\r\n  get(key: string) {\r\n    return localStorage.getItem(key);\r\n  }\r\n\r\n  remove(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n  removeall(){\r\n    localStorage.clear();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OficinaService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  //Consulta la oficina del asesor\r\n  getOficina(clave:string){\r\n    return this.http.post(environment.AUTH_API + 'Usuarios/GetByClave', { \r\n      Clave: clave\r\n    });\r\n  }\r\n\r\n  //Consulta los asesore se la oficina para saber el director\r\n  getAsesores(sucursal){\r\n    return this.http.post(environment.AUTH_API + 'Usuarios/GetByOfi', { \r\n      Sucursales:{\r\n        Codigo:sucursal\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { LocalStorageService } from './local-storage.service';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TokenStorageService {\r\n\r\n  jwtToken: string;\r\n  decodedToken: { [key: string]: string };\r\n\r\n  constructor(\r\n    private srvLocalS: LocalStorageService,\r\n  ) { }\r\n\r\n  setToken(token: string) {\r\n    if (token) {\r\n      this.jwtToken = token;\r\n    }\r\n  }\r\n  decodeToken() {\r\n    if (this.jwtToken) {\r\n      this.decodedToken = jwt_decode(this.jwtToken);\r\n    }\r\n  }\r\n  getDecodeToken() {\r\n    return jwt_decode(this.jwtToken);\r\n  }\r\n\r\n  signOut(): void {\r\n    this.srvLocalS.removeall();\r\n  }\r\n  public saveToken(token: string): void {\r\n    this.srvLocalS.remove(TOKEN_KEY)\r\n    this.srvLocalS.set(TOKEN_KEY,token)\r\n  }\r\n  public getToken(): string {\r\n    return this.srvLocalS.get(TOKEN_KEY);\r\n  }\r\n  public saveUser(user): void {\r\n    this.srvLocalS.remove(USER_KEY);\r\n    this.srvLocalS.set(USER_KEY, JSON.stringify(user));\r\n  }\r\n  public getUser(): any {\r\n    return JSON.parse(this.srvLocalS.get(USER_KEY));\r\n  }\r\n\r\n  \r\n}\r\n","<h2>{{data.mensaje}} </h2>\r\n\r\n<mat-dialog-content>\r\n    <app-init [datos]=\"data.content\"></app-init>\r\n</mat-dialog-content>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef,MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  mensaje: string;\r\n  content: string;\r\n}\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialog: MatDialogRef<ModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\r\n  ) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialog.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n}\r\n","export default class Utils {\r\n    \r\n    static formatNumber(num) {\r\n        if (typeof (num) == \"number\") {\r\n          return num\r\n        } else {\r\n          return parseInt(num == \"0\" || num == \"\" || num == null ? \"0\" : num.replace(/\\D/g, '').replace(/^0+/, ''))\r\n        }\r\n      }\r\n\r\n      static changeMonth(numMonth:number){\r\n        let month= [\"N/A\",\"ENE\",\"FEB\",\"MAR\",\"ABR\",\"MAY\",\"JUN\",\"JUL\",\"AGO\",\"SEP\",\"OCT\",\"NOV\",\"DIC\"]\r\n        return month[numMonth]\r\n      }\r\n}\r\n\r\n/*    \r\nvar number = Number(currency.replace(/[^0-9.-]+/g, \"\"));\r\n*/","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  AUTH_API: 'https://fidelapipruebas.fundaciondelamujer.com:54000/api/',\r\n  appVersion: require('../../package.json').version + '-dev',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}