{"version":3,"sources":["webpack:///node_modules/@angular/material/checkbox/index.d.ts.MatCheckbox.html","webpack:///src/app/components/auth/auth-routing.module.ts","webpack:///src/app/components/auth/auth.component.html","webpack:///src/app/components/auth/auth.component.ts","webpack:///src/app/components/auth/auth.module.ts","webpack:///src/app/services/auth.service.ts"],"names":["routes","path","component","AuthRoutingModule","AuthComponent","authServ","route","tokenStorage","_snackBar","ofiServ","isLogged","loginForm","Username","pattern","Passw","required","currentApplicationVersion","appVersion","hidenPass","ev","checked","user","userdom","split","dom","use","toLocaleLowerCase","login","subscribe","res","perfil","Nombre","Iniciales","Grupo","Clave","Sucursales","Codigo","Direccion","Regionales","Director","saveToken","saveUser","navigate","err","errMsg","status","message","open","duration","getOficina","ofi","AuthModule","httpOptions","headers","AuthService","http","post","AUTH_API","Rol"],"mappings":"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","file":"components-auth-auth-module-ngfactory-es5.js","sourcesContent":["<label [attr.for]=\"inputId\" class=\"mat-checkbox-layout\" #label>\n  <div class=\"mat-checkbox-inner-container\"\n       [class.mat-checkbox-inner-container-no-side-margin]=\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\">\n    <input #input\n           class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\"\n           [id]=\"inputId\"\n           [required]=\"required\"\n           [checked]=\"checked\"\n           [attr.value]=\"value\"\n           [disabled]=\"disabled\"\n           [attr.name]=\"name\"\n           [tabIndex]=\"tabIndex\"\n           [attr.aria-label]=\"ariaLabel || null\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-checked]=\"_getAriaChecked()\"\n           (change)=\"_onInteractionEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n    <div matRipple class=\"mat-checkbox-ripple mat-focus-indicator\"\n         [matRippleTrigger]=\"label\"\n         [matRippleDisabled]=\"_isRippleDisabled()\"\n         [matRippleRadius]=\"20\"\n         [matRippleCentered]=\"true\"\n         [matRippleAnimation]=\"{enterDuration: 150}\">\n      <div class=\"mat-ripple-element mat-checkbox-persistent-ripple\"></div>\n    </div>\n    <div class=\"mat-checkbox-frame\"></div>\n    <div class=\"mat-checkbox-background\">\n      <svg version=\"1.1\"\n           focusable=\"false\"\n           class=\"mat-checkbox-checkmark\"\n           viewBox=\"0 0 24 24\"\n           xml:space=\"preserve\">\n        <path class=\"mat-checkbox-checkmark-path\"\n              fill=\"none\"\n              stroke=\"white\"\n              d=\"M4.1,12.7 9,17.6 20.3,6.3\"/>\n      </svg>\n      <!-- Element for rendering the indeterminate state checkbox. -->\n      <div class=\"mat-checkbox-mixedmark\"></div>\n    </div>\n  </div>\n  <span class=\"mat-checkbox-label\" #checkboxLabel (cdkObserveContent)=\"_onLabelTextChange()\">\n    <!-- Add an invisible span so JAWS can read the label -->\n    <span style=\"display:none\">&nbsp;</span>\n    <ng-content></ng-content>\n  </span>\n</label>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from './auth.component';\n\nconst routes: Routes = [{ path: '', component: AuthComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","<div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"content\" >\r\n    <mat-card fxFlex.xs=\"90%\" fxFlex=\"40%\">\r\n        <img mat-card-image src=\"assets/pictures/fdlmlog.png\" alt=\"Photo of a Shiba Inu\">\r\n        <mat-card-content>\r\n            <ng-container *ngIf=\"!isLogged; else loading\">\r\n                <mat-card-title>Inicio Sesión</mat-card-title>\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin(loginForm.value)\">\r\n                    <p>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Usuario</mat-label>\r\n                            <input matInput placeholder=\"Ingrese usuario\" autocomplete=\"off\" formControlName=\"Username\">\r\n                            <mat-icon matSuffix>person</mat-icon>\r\n                        </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Contraseña</mat-label>\r\n                            <input [type]=\"hidenPass ? 'text' : 'password'\" autocomplete=\"off\" matInput placeholder=\"Ingrese contraseña\"\r\n                                formControlName=\"Passw\">\r\n                            <mat-icon matSuffix>lock</mat-icon>\r\n                            <mat-hint>\r\n                                <mat-checkbox (change)=\"showPass($event)\" [(checked)]=\"hidenPass\">Mostrar contraseña\r\n                                </mat-checkbox>\r\n                            </mat-hint>\r\n                        </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <button type=\"submit\" mat-raised-button [disabled]=\"!loginForm.valid\" color=\"primary\">Login</button>\r\n                    </p>\r\n                </form>\r\n            </ng-container>\r\n            <ng-template #loading>\r\n                <div class=\"container-spinner\">\r\n                    <mat-spinner></mat-spinner>\r\n                </div>\r\n            </ng-template>\r\n        </mat-card-content>\r\n        <small>{{currentApplicationVersion}}</small>\r\n    </mat-card>\r\n</div>\r\n","import { Component, OnInit, ɵConsole } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Asesor } from 'src/app/model/asesor';\r\nimport { User } from 'src/app/model/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { OficinaService } from 'src/app/services/oficina.service';\r\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  isLogged: Boolean = false\r\n  loginForm = new FormGroup({\r\n    Username: new FormControl('', [Validators.pattern('^[A-Za-z0-9-.-/]+$')]),\r\n    Passw: new FormControl('', Validators.required)\r\n  });\r\n  currentApplicationVersion = environment.appVersion;\r\n\r\n  hidenPass: boolean = false\r\n\r\n  constructor(\r\n    private authServ: AuthService,\r\n    private route: Router,\r\n    private tokenStorage: TokenStorageService,\r\n    private _snackBar: MatSnackBar,\r\n    private ofiServ: OficinaService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  showPass(ev) {\r\n    this.hidenPass = ev.checked\r\n  }\r\n  onLogin(user: User) {\r\n    this.isLogged = true\r\n    let userdom = user.Username.split('/')\r\n    let dom = userdom[0];\r\n    let use = userdom[1];\r\n\r\n    if (dom.toLocaleLowerCase() == \"soporte\") {\r\n      user.Username = use\r\n      this.authServ.login(user).subscribe(\r\n        \r\n        (res) => {\r\n          \r\n          let perfil: Asesor = {\r\n            Nombre: use,\r\n            Iniciales: \"N/A\",\r\n            Grupo: \"SOPORTE\",\r\n            Clave: use,\r\n            Sucursales: {\r\n              Codigo: \"969\",\r\n              Direccion: \"\",\r\n              Nombre: \"SEDE ADMINISTRATIVA\",\r\n              Regionales: \"0\"\r\n            },\r\n            Director: {\r\n              Nombre: \"Transformacion Digital\",\r\n              Iniciales: \"TD\",\r\n              Clave: \"transformaciondigital\",\r\n              Sucursales: {\r\n                Codigo: \"969\",\r\n                Direccion: \"\",\r\n                Nombre: \"SEDE ADMINISTRATIVA\",\r\n                Regionales: \"0\"\r\n              },\r\n              Director: null,\r\n              Grupo: \"TRADIG\"\r\n            }\r\n          }\r\n          this.tokenStorage.saveToken(res);\r\n          this.tokenStorage.saveUser(perfil);\r\n          this.route.navigate(['home']);\r\n          this.isLogged = false\r\n        },\r\n        (err) => {\r\n         \r\n          let errMsg = \"\"\r\n          if (err.status == 401) {\r\n            errMsg = \"Usuario o contraseña incorrecta \"\r\n          } else if (err.status == 0) {\r\n            errMsg = \"¡Error al ingresar! verifique la conexión a intenet.\"\r\n          } else {\r\n            errMsg = \"Se presento error con la conexion con el servidor. \" + err.message\r\n          }\r\n          this._snackBar.open(errMsg, \"Ok!\", {\r\n            duration: 3000,\r\n          });\r\n          this.isLogged = false\r\n        }\r\n      )\r\n    } else {\r\n      this.authServ.login(user).subscribe(\r\n        res => {         \r\n          this.tokenStorage.saveToken(res);\r\n          //this.ofiServ.getOficina('MAIRA.LAJUD').subscribe(\r\n          this.ofiServ.getOficina(user.Username).subscribe(\r\n            (ofi) => {\r\n              if (ofi) {\r\n                this.tokenStorage.saveUser(ofi);\r\n                this.isLogged = false\r\n              }\r\n            },\r\n            (err) => {\r\n              this.isLogged = false\r\n              this._snackBar.open(\"No se encontro oficina asignada, comuniquese con el area de Riesgos [codigo \" + err.status + \"]\", \"Ok!\", {\r\n                duration: 10000,\r\n              });\r\n            }\r\n          )\r\n          this.route.navigate(['home']);\r\n          \r\n        },\r\n        err => {\r\n          let errMsg = \"\"\r\n          if (err.status == 401) {\r\n            errMsg = \"Usuario o contraseña incorrecta !\"\r\n          } else if (err.status == 0) {\r\n            errMsg = \"¡Error al ingresar! verifique la conexión a intenet.\"\r\n          } else {\r\n            errMsg = \"Se presento error en la conexion con el servidor. \" + err.message\r\n          }\r\n          this._snackBar.open(errMsg, \"Ok!\", {\r\n            duration: 3000,\r\n          });\r\n          this.isLogged = false\r\n        }\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n@NgModule({\n  declarations: [AuthComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    FlexLayoutModule\n  ]\n})\nexport class AuthModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../model/user';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  login(user: User): Observable<any> {\r\n    return this.http.post(environment.AUTH_API + 'login/authenticate', {\r\n      Username: user.Username,\r\n      Passw: user.Passw,\r\n      Rol: \"User\"\r\n    }, httpOptions);\r\n  }\r\n}\r\n\r\n"]}